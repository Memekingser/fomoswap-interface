{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_OuterSubscriber,_InnerSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function catchError(selector) {\n  return function catchErrorOperatorFunction(source) {\n    var operator = new CatchOperator(selector);\n    var caught = source.lift(operator);\n    return operator.caught = caught;\n  };\n}\nvar CatchOperator = /*@__PURE__*/function () {\n  function CatchOperator(selector) {\n    this.selector = selector;\n  }\n  CatchOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n  };\n  return CatchOperator;\n}();\nvar CatchSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(CatchSubscriber, _super);\n  function CatchSubscriber(destination, selector, caught) {\n    var _this = _super.call(this, destination) || this;\n    _this.selector = selector;\n    _this.caught = caught;\n    return _this;\n  }\n  CatchSubscriber.prototype.error = function (err) {\n    if (!this.isStopped) {\n      var result = void 0;\n      try {\n        result = this.selector(err, this.caught);\n      } catch (err2) {\n        _super.prototype.error.call(this, err2);\n        return;\n      }\n      this._unsubscribeAndRecycle();\n      var innerSubscriber = new InnerSubscriber(this, undefined, undefined);\n      this.add(innerSubscriber);\n      var innerSubscription = subscribeToResult(this, result, undefined, undefined, innerSubscriber);\n      if (innerSubscription !== innerSubscriber) {\n        this.add(innerSubscription);\n      }\n    }\n  };\n  return CatchSubscriber;\n}(OuterSubscriber);","map":{"version":3,"names":["tslib_1","OuterSubscriber","InnerSubscriber","subscribeToResult","catchError","selector","catchErrorOperatorFunction","source","operator","CatchOperator","caught","lift","prototype","call","subscriber","subscribe","CatchSubscriber","_super","__extends","destination","_this","error","err","isStopped","result","err2","_unsubscribeAndRecycle","innerSubscriber","undefined","add","innerSubscription"],"sources":["../../../src/internal/operators/catchError.ts"],"sourcesContent":[null],"mappings":";AAIA,OAAO,KAAEA,OAAA,MAAe,OAAQ;AAChC,SAASC,eAAe,QAAQ,oBAAoB;AACpD,SAASC,eAAA,QAAmB,oBAAM;AAmFlC,SAAMC,iBAAoB,QACxB,2BAAgD;OAEhD,SAAOC,UAASA,CAAAC,QAAA;SACd,SAAcC,0BAAqBA,CAAAC,MAAU;IAC7C,IAAMC,QAAM,GAAG,IAAMC,aAAM,CAAQJ,QAAE;IACrC,IAAAK,MAAQ,GAAAH,MAAS,CAAAI,IAAM,CAAAH,QAA2B,CAAC;IACnD,OAAAA,QAAA,CAAAE,MAAA,GAAAA,MAAA;EACH;AAED;IAGED,aAAA,gBAAyF;WAArEA,cAAAJ,QAAqE;IACxF,KAAAA,QAAA,GAAAA,QAAA;EAED;eACS,CAAAO,SAAO,CAAAC,IAAU,aAAIC,UAAgB,EAAAP,MAAU,EAAE;IACzD,OAAAA,MAAA,CAAAQ,SAAA,KAAAC,eAAA,CAAAF,UAAA,OAAAT,QAAA,OAAAK,MAAA;EACH;EATA,OASCD,aAAA;AAOD;IAAoCO,eAAA,0BAAyBC,MAAA;EAC3DjB,OAAA,CAAAkB,SAAA,CAAAF,eAAY,EAAAC,MACQ;WADpBD,eAGEA,CAAAG,WAAM,EAAAd,QAAY,EAAAK,MAAA,EACnB;IAHmB,IAAAU,KAAA,GAAAH,MAAA,CAAAJ,IAAA,KAAqE,EAAAM,WAAA;IACrEC,KAAA,CAAAf,QAAM,GAANA,QAAqB;;IAExC,OAAAe,KAAA;EAOD;iBACY,CAAAR,SAAW,CAAAS,KAAA,aAAAC,GAAA;QACnB,KAAI,CAAAC,SAAM;MACV,IAAIC,MAAA;UACF;QACDA,MAAA,QAAAnB,QAAA,CAAAiB,GAAA,OAAAZ,MAAA;MAAC,E,OACAe,IAAA;QACAR,MAAA,CAAOL,SAAA,CAAAS,KAAA,CAAAR,IAAA,OAAAY,IAAA;QACR;MACD;MACA,IAAM,CAAAC,sBAAsB;MAC5B,IAAIC,eAAK,OAAiBzB,eAAA,OAAA0B,SAAA,EAAAA,SAAA;MAC1B,IAAM,CAAAC,GAAA,CAAAF,eAAoB;MAI1B,IAAIG,iBAAiB,GAAA3B,iBAAoB,KAAE,EAAAqB,MAAA,EAAAI,SAAA,EAAAA,SAAA,EAAAD,eAAA;UACzCG,iBAAS,KAAAH,eAAmB;QAC7B,KAAAE,GAAA,CAAAC,iBAAA;MACF;IACF;EACH;EAjCoC,OAAAd,eAiCnC","ignoreList":[]},"metadata":{},"sourceType":"module"}