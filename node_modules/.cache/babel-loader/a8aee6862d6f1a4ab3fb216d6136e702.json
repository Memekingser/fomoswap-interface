{"ast":null,"code":"import { ChainId, JSBI, Percent, Token, WETH } from 'fomoswap-bera1';\nimport { fortmatic, injected, portis, walletconnect, walletlink } from '../connectors';\nexport const ROUTER_ADDRESS = '0x86d1a546c0f41f34583df806b1E87B712C5Eb7aE';\n\n// a list of tokens by chain\n\nexport const DAI = new Token(ChainId.MAINNET, '0x6B175474E89094C44Da98b954EedeAC495271d0F', 18, 'DAI', 'Dai Stablecoin');\nexport const USDC = new Token(ChainId.MAINNET, '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', 6, 'USDC', 'USD//C');\nexport const USDT = new Token(ChainId.MAINNET, '0xdAC17F958D2ee523a2206206994597C13D831ec7', 6, 'USDT', 'Tether USD');\nexport const COMP = new Token(ChainId.MAINNET, '0xc00e94Cb662C3520282E6f5717214004A7f26888', 18, 'COMP', 'Compound');\nexport const MKR = new Token(ChainId.MAINNET, '0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2', 18, 'MKR', 'Maker');\nexport const AMPL = new Token(ChainId.MAINNET, '0xD46bA6D942050d489DBd938a2C909A5d5039A161', 9, 'AMPL', 'Ampleforth');\nconst WETH_ONLY = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET]],\n  [ChainId.ROPSTEN]: [WETH[ChainId.ROPSTEN]],\n  [ChainId.RINKEBY]: [WETH[ChainId.RINKEBY]],\n  [ChainId.GÖRLI]: [WETH[ChainId.GÖRLI]],\n  [ChainId.KOVAN]: [WETH[ChainId.KOVAN]],\n  [ChainId.Sepolia]: [WETH[ChainId.Sepolia]],\n  [ChainId.UniChain]: [WETH[ChainId.UniChain]],\n  [ChainId.Artio]: [WETH[ChainId.Artio]],\n  [ChainId.BERA]: [WETH[ChainId.BERA]]\n};\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST = {\n  ...WETH_ONLY,\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, USDC, USDT, COMP, MKR]\n};\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n */\nexport const CUSTOM_BASES = {\n  [ChainId.MAINNET]: {\n    [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n  }\n};\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES = {\n  ...WETH_ONLY,\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, USDC, USDT]\n};\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR = {\n  ...WETH_ONLY,\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, USDC, USDT]\n};\nexport const PINNED_PAIRS = {\n  [ChainId.MAINNET]: [[new Token(ChainId.MAINNET, '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643', 8, 'cDAI', 'Compound Dai'), new Token(ChainId.MAINNET, '0x39AA39c021dfbaE8faC545936693aC917d5E7563', 8, 'cUSDC', 'Compound USD Coin')], [USDC, USDT], [DAI, USDT]]\n};\nexport const SUPPORTED_WALLETS = {\n  INJECTED: {\n    connector: injected,\n    name: 'Injected',\n    iconName: 'arrow-right.svg',\n    description: 'Injected web3 provider.',\n    href: null,\n    color: '#010101',\n    primary: true\n  },\n  METAMASK: {\n    connector: injected,\n    name: 'MetaMask',\n    iconName: 'metamask.png',\n    description: 'Easy-to-use browser extension.',\n    href: null,\n    color: '#E8831D'\n  },\n  WALLET_CONNECT: {\n    connector: walletconnect,\n    name: 'WalletConnect',\n    iconName: 'walletConnectIcon.svg',\n    description: 'Connect to Trust Wallet, Rainbow Wallet and more...',\n    href: null,\n    color: '#4196FC',\n    mobile: true\n  },\n  WALLET_LINK: {\n    connector: walletlink,\n    name: 'Coinbase Wallet',\n    iconName: 'coinbaseWalletIcon.svg',\n    description: 'Use Coinbase Wallet app on mobile device',\n    href: null,\n    color: '#315CF5'\n  },\n  COINBASE_LINK: {\n    name: 'Open in Coinbase Wallet',\n    iconName: 'coinbaseWalletIcon.svg',\n    description: 'Open in Coinbase Wallet app.',\n    href: 'https://go.cb-w.com/mtUDhEZPy1',\n    color: '#315CF5',\n    mobile: true,\n    mobileOnly: true\n  },\n  FORTMATIC: {\n    connector: fortmatic,\n    name: 'Fortmatic',\n    iconName: 'fortmaticIcon.png',\n    description: 'Login using Fortmatic hosted wallet',\n    href: null,\n    color: '#6748FF',\n    mobile: true\n  },\n  Portis: {\n    connector: portis,\n    name: 'Portis',\n    iconName: 'portisIcon.png',\n    description: 'Login using Portis hosted wallet',\n    href: null,\n    color: '#4A6C9B',\n    mobile: true\n  }\n};\nexport const NetworkContextName = 'NETWORK';\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50;\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20;\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000));\nexport const BIPS_BASE = JSBI.BigInt(10000);\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW = new Percent(JSBI.BigInt(100), BIPS_BASE); // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM = new Percent(JSBI.BigInt(300), BIPS_BASE); // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH = new Percent(JSBI.BigInt(500), BIPS_BASE); // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN = new Percent(JSBI.BigInt(1000), BIPS_BASE); // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT = new Percent(JSBI.BigInt(1500), BIPS_BASE); // 15%\n\n// used to ensure the user doesn't send so much ETH so they end up with <.01\nexport const MIN_ETH = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)); // .01 ETH\nexport const BETTER_TRADE_LINK_THRESHOLD = new Percent(JSBI.BigInt(75), JSBI.BigInt(10000));\n\n// the Uniswap Default token list lives here\nexport const DEFAULT_TOKEN_LIST_URL = 'https://unpkg.com/@uniswap/default-token-list@latest';","map":{"version":3,"names":["ChainId","JSBI","Percent","Token","WETH","fortmatic","injected","portis","walletconnect","walletlink","ROUTER_ADDRESS","DAI","MAINNET","USDC","USDT","COMP","MKR","AMPL","WETH_ONLY","ROPSTEN","RINKEBY","GÖRLI","KOVAN","Sepolia","UniChain","Artio","BERA","BASES_TO_CHECK_TRADES_AGAINST","CUSTOM_BASES","address","SUGGESTED_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","SUPPORTED_WALLETS","INJECTED","connector","name","iconName","description","href","color","primary","METAMASK","WALLET_CONNECT","mobile","WALLET_LINK","COINBASE_LINK","mobileOnly","FORTMATIC","Portis","NetworkContextName","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","ONE_BIPS","BigInt","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_ETH","exponentiate","BETTER_TRADE_LINK_THRESHOLD","DEFAULT_TOKEN_LIST_URL"],"sources":["/Users/synallage/Desktop/fomoswap-uni/interface-73580de922ce3ff642430d71aa24f5c053e6dd4d/src/constants/index.ts"],"sourcesContent":["import { AbstractConnector } from '@web3-react/abstract-connector'\nimport { ChainId, JSBI, Percent, Token, WETH } from 'fomoswap-bera1'\n\nimport { fortmatic, injected, portis, walletconnect, walletlink } from '../connectors'\n\nexport const ROUTER_ADDRESS = '0x86d1a546c0f41f34583df806b1E87B712C5Eb7aE'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\nexport const DAI = new Token(ChainId.MAINNET, '0x6B175474E89094C44Da98b954EedeAC495271d0F', 18, 'DAI', 'Dai Stablecoin')\nexport const USDC = new Token(ChainId.MAINNET, '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', 6, 'USDC', 'USD//C')\nexport const USDT = new Token(ChainId.MAINNET, '0xdAC17F958D2ee523a2206206994597C13D831ec7', 6, 'USDT', 'Tether USD')\nexport const COMP = new Token(ChainId.MAINNET, '0xc00e94Cb662C3520282E6f5717214004A7f26888', 18, 'COMP', 'Compound')\nexport const MKR = new Token(ChainId.MAINNET, '0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2', 18, 'MKR', 'Maker')\nexport const AMPL = new Token(ChainId.MAINNET, '0xD46bA6D942050d489DBd938a2C909A5d5039A161', 9, 'AMPL', 'Ampleforth')\n\nconst WETH_ONLY: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET]],\n  [ChainId.ROPSTEN]: [WETH[ChainId.ROPSTEN]],\n  [ChainId.RINKEBY]: [WETH[ChainId.RINKEBY]],\n  [ChainId.GÖRLI]: [WETH[ChainId.GÖRLI]],\n  [ChainId.KOVAN]: [WETH[ChainId.KOVAN]],\n  [ChainId.Sepolia]: [WETH[ChainId.Sepolia]],\n  [ChainId.UniChain]: [WETH[ChainId.UniChain]],\n  [ChainId.Artio]: [WETH[ChainId.Artio]],\n  [ChainId.BERA]: [WETH[ChainId.BERA]]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  ...WETH_ONLY,\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, USDC, USDT, COMP, MKR]\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {\n    [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n  }\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  ...WETH_ONLY,\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, USDC, USDT]\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  ...WETH_ONLY,\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, USDC, USDT]\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [\n      new Token(ChainId.MAINNET, '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643', 8, 'cDAI', 'Compound Dai'),\n      new Token(ChainId.MAINNET, '0x39AA39c021dfbaE8faC545936693aC917d5E7563', 8, 'cUSDC', 'Compound USD Coin')\n    ],\n    [USDC, USDT],\n    [DAI, USDT]\n  ]\n}\n\nexport interface WalletInfo {\n  connector?: AbstractConnector\n  name: string\n  iconName: string\n  description: string\n  href: string | null\n  color: string\n  primary?: true\n  mobile?: true\n  mobileOnly?: true\n}\n\nexport const SUPPORTED_WALLETS: { [key: string]: WalletInfo } = {\n  INJECTED: {\n    connector: injected,\n    name: 'Injected',\n    iconName: 'arrow-right.svg',\n    description: 'Injected web3 provider.',\n    href: null,\n    color: '#010101',\n    primary: true\n  },\n  METAMASK: {\n    connector: injected,\n    name: 'MetaMask',\n    iconName: 'metamask.png',\n    description: 'Easy-to-use browser extension.',\n    href: null,\n    color: '#E8831D'\n  },\n  WALLET_CONNECT: {\n    connector: walletconnect,\n    name: 'WalletConnect',\n    iconName: 'walletConnectIcon.svg',\n    description: 'Connect to Trust Wallet, Rainbow Wallet and more...',\n    href: null,\n    color: '#4196FC',\n    mobile: true\n  },\n  WALLET_LINK: {\n    connector: walletlink,\n    name: 'Coinbase Wallet',\n    iconName: 'coinbaseWalletIcon.svg',\n    description: 'Use Coinbase Wallet app on mobile device',\n    href: null,\n    color: '#315CF5'\n  },\n  COINBASE_LINK: {\n    name: 'Open in Coinbase Wallet',\n    iconName: 'coinbaseWalletIcon.svg',\n    description: 'Open in Coinbase Wallet app.',\n    href: 'https://go.cb-w.com/mtUDhEZPy1',\n    color: '#315CF5',\n    mobile: true,\n    mobileOnly: true\n  },\n  FORTMATIC: {\n    connector: fortmatic,\n    name: 'Fortmatic',\n    iconName: 'fortmaticIcon.png',\n    description: 'Login using Fortmatic hosted wallet',\n    href: null,\n    color: '#6748FF',\n    mobile: true\n  },\n  Portis: {\n    connector: portis,\n    name: 'Portis',\n    iconName: 'portisIcon.png',\n    description: 'Login using Portis hosted wallet',\n    href: null,\n    color: '#4A6C9B',\n    mobile: true\n  }\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much ETH so they end up with <.01\nexport const MIN_ETH: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 ETH\nexport const BETTER_TRADE_LINK_THRESHOLD = new Percent(JSBI.BigInt(75), JSBI.BigInt(10000))\n\n// the Uniswap Default token list lives here\nexport const DEFAULT_TOKEN_LIST_URL = 'https://unpkg.com/@uniswap/default-token-list@latest'\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}