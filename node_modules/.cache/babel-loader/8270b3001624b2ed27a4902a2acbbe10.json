{"ast":null,"code":"import{BLOCKED_PRICE_IMPACT_NON_EXPERT}from'../constants';import{CurrencyAmount,JSBI,Percent,TokenAmount}from'fomoswap-storytestnet';import{ALLOWED_PRICE_IMPACT_HIGH,ALLOWED_PRICE_IMPACT_LOW,ALLOWED_PRICE_IMPACT_MEDIUM}from'../constants';import{Field}from'../state/swap/actions';import{basisPointsToPercent}from'./index';const BASE_FEE=new Percent(JSBI.BigInt(30),JSBI.BigInt(10000));const ONE_HUNDRED_PERCENT=new Percent(JSBI.BigInt(10000),JSBI.BigInt(10000));const INPUT_FRACTION_AFTER_FEE=ONE_HUNDRED_PERCENT.subtract(BASE_FEE);// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade){// for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n// e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\nconst realizedLPFee=!trade?undefined:ONE_HUNDRED_PERCENT.subtract(trade.route.pairs.reduce(currentFee=>currentFee.multiply(INPUT_FRACTION_AFTER_FEE),ONE_HUNDRED_PERCENT));// remove lp fees from price impact\nconst priceImpactWithoutFeeFraction=trade&&realizedLPFee?trade.priceImpact.subtract(realizedLPFee):undefined;// the x*y=k impact\nconst priceImpactWithoutFeePercent=priceImpactWithoutFeeFraction?new Percent(priceImpactWithoutFeeFraction===null||priceImpactWithoutFeeFraction===void 0?void 0:priceImpactWithoutFeeFraction.numerator,priceImpactWithoutFeeFraction===null||priceImpactWithoutFeeFraction===void 0?void 0:priceImpactWithoutFeeFraction.denominator):undefined;// the amount of the input that accrues to LPs\nconst realizedLPFeeAmount=realizedLPFee&&trade&&(trade.inputAmount instanceof TokenAmount?new TokenAmount(trade.inputAmount.token,realizedLPFee.multiply(trade.inputAmount.raw).quotient):CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient));return{priceImpactWithoutFee:priceImpactWithoutFeePercent,realizedLPFee:realizedLPFeeAmount};}// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(trade,allowedSlippage){const pct=basisPointsToPercent(allowedSlippage);return{[Field.INPUT]:trade===null||trade===void 0?void 0:trade.maximumAmountIn(pct),[Field.OUTPUT]:trade===null||trade===void 0?void 0:trade.minimumAmountOut(pct)};}export function warningSeverity(priceImpact){if(!(priceImpact===null||priceImpact===void 0?void 0:priceImpact.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)))return 4;if(!(priceImpact===null||priceImpact===void 0?void 0:priceImpact.lessThan(ALLOWED_PRICE_IMPACT_HIGH)))return 3;if(!(priceImpact===null||priceImpact===void 0?void 0:priceImpact.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)))return 2;if(!(priceImpact===null||priceImpact===void 0?void 0:priceImpact.lessThan(ALLOWED_PRICE_IMPACT_LOW)))return 1;return 0;}export function formatExecutionPrice(trade,inverted){if(!trade){return'';}return inverted?\"\".concat(trade.executionPrice.invert().toSignificant(6),\" \").concat(trade.inputAmount.currency.symbol,\" / \").concat(trade.outputAmount.currency.symbol):\"\".concat(trade.executionPrice.toSignificant(6),\" \").concat(trade.outputAmount.currency.symbol,\" / \").concat(trade.inputAmount.currency.symbol);}","map":{"version":3,"names":["BLOCKED_PRICE_IMPACT_NON_EXPERT","CurrencyAmount","JSBI","Percent","TokenAmount","ALLOWED_PRICE_IMPACT_HIGH","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","Field","basisPointsToPercent","BASE_FEE","BigInt","ONE_HUNDRED_PERCENT","INPUT_FRACTION_AFTER_FEE","subtract","computeTradePriceBreakdown","trade","realizedLPFee","undefined","route","pairs","reduce","currentFee","multiply","priceImpactWithoutFeeFraction","priceImpact","priceImpactWithoutFeePercent","numerator","denominator","realizedLPFeeAmount","inputAmount","token","raw","quotient","ether","priceImpactWithoutFee","computeSlippageAdjustedAmounts","allowedSlippage","pct","INPUT","maximumAmountIn","OUTPUT","minimumAmountOut","warningSeverity","lessThan","formatExecutionPrice","inverted","concat","executionPrice","invert","toSignificant","currency","symbol","outputAmount"],"sources":["/Users/synallage/Desktop/fomoswap-uni/interface-73580de922ce3ff642430d71aa24f5c053e6dd4d/src/utils/prices.ts"],"sourcesContent":["import { BLOCKED_PRICE_IMPACT_NON_EXPERT } from '../constants'\nimport { CurrencyAmount, Fraction, JSBI, Percent, TokenAmount, Trade } from 'fomoswap-storytestnet'\nimport { ALLOWED_PRICE_IMPACT_HIGH, ALLOWED_PRICE_IMPACT_LOW, ALLOWED_PRICE_IMPACT_MEDIUM } from '../constants'\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(30), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(\n  trade?: Trade\n): { priceImpactWithoutFee?: Percent; realizedLPFee?: CurrencyAmount } {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT\n        )\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number\n): { [field in Field]?: CurrencyAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct)\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}