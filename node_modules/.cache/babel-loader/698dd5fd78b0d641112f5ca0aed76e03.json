{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_OuterSubscriber,_InnerSubscriber,_util_subscribeToResult,_map,_observable_from PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { map } from './map';\nimport { from } from '../observable/from';\nexport function switchMap(project, resultSelector) {\n  if (typeof resultSelector === 'function') {\n    return function (source) {\n      return source.pipe(switchMap(function (a, i) {\n        return from(project(a, i)).pipe(map(function (b, ii) {\n          return resultSelector(a, b, i, ii);\n        }));\n      }));\n    };\n  }\n  return function (source) {\n    return source.lift(new SwitchMapOperator(project));\n  };\n}\nvar SwitchMapOperator = /*@__PURE__*/function () {\n  function SwitchMapOperator(project) {\n    this.project = project;\n  }\n  SwitchMapOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new SwitchMapSubscriber(subscriber, this.project));\n  };\n  return SwitchMapOperator;\n}();\nvar SwitchMapSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(SwitchMapSubscriber, _super);\n  function SwitchMapSubscriber(destination, project) {\n    var _this = _super.call(this, destination) || this;\n    _this.project = project;\n    _this.index = 0;\n    return _this;\n  }\n  SwitchMapSubscriber.prototype._next = function (value) {\n    var result;\n    var index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (error) {\n      this.destination.error(error);\n      return;\n    }\n    this._innerSub(result, value, index);\n  };\n  SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {\n    var innerSubscription = this.innerSubscription;\n    if (innerSubscription) {\n      innerSubscription.unsubscribe();\n    }\n    var innerSubscriber = new InnerSubscriber(this, value, index);\n    var destination = this.destination;\n    destination.add(innerSubscriber);\n    this.innerSubscription = subscribeToResult(this, result, undefined, undefined, innerSubscriber);\n    if (this.innerSubscription !== innerSubscriber) {\n      destination.add(this.innerSubscription);\n    }\n  };\n  SwitchMapSubscriber.prototype._complete = function () {\n    var innerSubscription = this.innerSubscription;\n    if (!innerSubscription || innerSubscription.closed) {\n      _super.prototype._complete.call(this);\n    }\n    this.unsubscribe();\n  };\n  SwitchMapSubscriber.prototype._unsubscribe = function () {\n    this.innerSubscription = null;\n  };\n  SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {\n    var destination = this.destination;\n    destination.remove(innerSub);\n    this.innerSubscription = null;\n    if (this.isStopped) {\n      _super.prototype._complete.call(this);\n    }\n  };\n  SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n    this.destination.next(innerValue);\n  };\n  return SwitchMapSubscriber;\n}(OuterSubscriber);","map":{"version":3,"names":["tslib_1","OuterSubscriber","InnerSubscriber","subscribeToResult","map","from","switchMap","project","resultSelector","source","pipe","a","i","b","ii","lift","SwitchMapOperator","prototype","call","subscriber","subscribe","SwitchMapSubscriber","_super","__extends","destination","_this","_next","value","result","index","error","_innerSub","innerSubscription","unsubscribe","innerSubscriber","add","undefined","_complete","closed","_unsubscribe","notifyComplete","innerSub","remove","isStopped","notifyNext","outerValue","innerValue","outerIndex","innerIndex","next"],"sources":["../../../src/internal/operators/switchMap.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}