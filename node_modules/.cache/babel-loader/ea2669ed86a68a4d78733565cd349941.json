{"ast":null,"code":"var _jsxFileName = \"/Users/synallage/Desktop/fomoswap-uni/interface-73580de922ce3ff642430d71aa24f5c053e6dd4d/src/pages/Swap/index.tsx\";\nimport { JSBI } from 'fomoswap-storytestnet';\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { ArrowDown } from 'react-feather';\nimport ReactGA from 'react-ga';\nimport { Text } from 'rebass';\nimport { ThemeContext } from 'styled-components';\nimport AddressInputPanel from '../../components/AddressInputPanel';\nimport { ButtonError, ButtonLight, ButtonPrimary } from '../../components/Button';\nimport Card, { GreyCard } from '../../components/Card';\nimport { AutoColumn } from '../../components/Column';\nimport ConfirmSwapModal from '../../components/swap/ConfirmSwapModal';\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel';\nimport { SwapPoolTabs } from '../../components/NavigationTabs';\nimport { AutoRow, RowBetween } from '../../components/Row';\nimport AdvancedSwapDetailsDropdown from '../../components/swap/AdvancedSwapDetailsDropdown';\nimport BetterTradeLink from '../../components/swap/BetterTradeLink';\nimport confirmPriceImpactWithoutFee from '../../components/swap/confirmPriceImpactWithoutFee';\nimport { ArrowWrapper, BottomGrouping, Dots, SwapCallbackError, Wrapper } from '../../components/swap/styleds';\nimport TradePrice from '../../components/swap/TradePrice';\nimport { TokenWarningCards } from '../../components/TokenWarningCard';\nimport { BETTER_TRADE_LINK_THRESHOLD, INITIAL_ALLOWED_SLIPPAGE } from '../../constants';\nimport { getTradeVersion, isTradeBetter } from '../../data/V1';\nimport { useActiveWeb3React } from '../../hooks';\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback';\nimport useENSAddress from '../../hooks/useENSAddress';\nimport { useSwapCallback } from '../../hooks/useSwapCallback';\nimport useToggledVersion, { Version } from '../../hooks/useToggledVersion';\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback';\nimport { useToggleSettingsMenu, useWalletModalToggle } from '../../state/application/hooks';\nimport { Field } from '../../state/swap/actions';\nimport { useDefaultsFromURLSearch, useDerivedSwapInfo, useSwapActionHandlers, useSwapState } from '../../state/swap/hooks';\nimport { useExpertModeManager, useTokenWarningDismissal, useUserDeadline, useUserSlippageTolerance } from '../../state/user/hooks';\nimport { LinkStyledButton, TYPE, ExternalLink } from '../../theme';\nimport { maxAmountSpend } from '../../utils/maxAmountSpend';\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices';\nimport AppBody from '../AppBody';\nimport { ClickableText } from '../Pool/styleds';\nexport default function Swap() {\n  var _parsedAmounts$indepe, _parsedAmounts$indepe2, _parsedAmounts$depend, _parsedAmounts$depend2, _parsedAmounts$indepe3, _parsedAmounts$Field$, _currencies$Field$INP;\n  useDefaultsFromURLSearch();\n  const {\n    account,\n    chainId\n  } = useActiveWeb3React();\n  const theme = useContext(ThemeContext);\n\n  // toggle wallet when disconnected\n  const toggleWalletModal = useWalletModalToggle();\n\n  // for expert mode\n  const toggleSettings = useToggleSettingsMenu();\n  const [isExpertMode] = useExpertModeManager();\n\n  // get custom setting values for user\n  const [deadline] = useUserDeadline();\n  const [allowedSlippage] = useUserSlippageTolerance();\n\n  // swap state\n  const {\n    independentField,\n    typedValue,\n    recipient\n  } = useSwapState();\n  const {\n    v1Trade,\n    v2Trade,\n    currencyBalances,\n    parsedAmount,\n    currencies,\n    inputError: swapInputError\n  } = useDerivedSwapInfo();\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue);\n  const showWrap = wrapType !== WrapType.NOT_APPLICABLE;\n  const {\n    address: recipientAddress\n  } = useENSAddress(recipient);\n  const toggledVersion = useToggledVersion();\n  const trade = showWrap ? undefined : {\n    [Version.v1]: v1Trade,\n    [Version.v2]: v2Trade\n  }[toggledVersion];\n  const betterTradeLinkVersion = toggledVersion === Version.v2 && isTradeBetter(v2Trade, v1Trade, BETTER_TRADE_LINK_THRESHOLD) ? Version.v1 : toggledVersion === Version.v1 && isTradeBetter(v1Trade, v2Trade) ? Version.v2 : undefined;\n  const parsedAmounts = showWrap ? {\n    [Field.INPUT]: parsedAmount,\n    [Field.OUTPUT]: parsedAmount\n  } : {\n    [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade === null || trade === void 0 ? void 0 : trade.inputAmount,\n    [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade === null || trade === void 0 ? void 0 : trade.outputAmount\n  };\n  const {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient\n  } = useSwapActionHandlers();\n  const isValid = !swapInputError;\n  const dependentField = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT;\n  const handleTypeInput = useCallback(value => {\n    onUserInput(Field.INPUT, value);\n  }, [onUserInput]);\n  const handleTypeOutput = useCallback(value => {\n    onUserInput(Field.OUTPUT, value);\n  }, [onUserInput]);\n\n  // modal and loading\n  const [{\n    showConfirm,\n    tradeToConfirm,\n    swapErrorMessage,\n    attemptingTxn,\n    txHash\n  }, setSwapState] = useState({\n    showConfirm: false,\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined\n  });\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap ? (_parsedAmounts$indepe = (_parsedAmounts$indepe2 = parsedAmounts[independentField]) === null || _parsedAmounts$indepe2 === void 0 ? void 0 : _parsedAmounts$indepe2.toExact()) !== null && _parsedAmounts$indepe !== void 0 ? _parsedAmounts$indepe : '' : (_parsedAmounts$depend = (_parsedAmounts$depend2 = parsedAmounts[dependentField]) === null || _parsedAmounts$depend2 === void 0 ? void 0 : _parsedAmounts$depend2.toSignificant(6)) !== null && _parsedAmounts$depend !== void 0 ? _parsedAmounts$depend : ''\n  };\n  const route = trade === null || trade === void 0 ? void 0 : trade.route;\n  const userHasSpecifiedInputOutput = Boolean(currencies[Field.INPUT] && currencies[Field.OUTPUT] && ((_parsedAmounts$indepe3 = parsedAmounts[independentField]) === null || _parsedAmounts$indepe3 === void 0 ? void 0 : _parsedAmounts$indepe3.greaterThan(JSBI.BigInt(0))));\n  const noRoute = !route;\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage);\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState(false);\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true);\n    }\n  }, [approval, approvalSubmitted]);\n  const maxAmountInput = maxAmountSpend(currencyBalances[Field.INPUT]);\n  const atMaxAmountInput = Boolean(maxAmountInput && ((_parsedAmounts$Field$ = parsedAmounts[Field.INPUT]) === null || _parsedAmounts$Field$ === void 0 ? void 0 : _parsedAmounts$Field$.equalTo(maxAmountInput)));\n\n  // the callback to execute the swap\n  const {\n    callback: swapCallback,\n    error: swapCallbackError\n  } = useSwapCallback(trade, allowedSlippage, deadline, recipient);\n  const {\n    priceImpactWithoutFee\n  } = computeTradePriceBreakdown(trade);\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return;\n    }\n    if (!swapCallback) {\n      return;\n    }\n    setSwapState({\n      attemptingTxn: true,\n      tradeToConfirm,\n      showConfirm,\n      swapErrorMessage: undefined,\n      txHash: undefined\n    });\n    swapCallback().then(hash => {\n      var _trade$inputAmount, _trade$inputAmount$cu, _trade$outputAmount, _trade$outputAmount$c;\n      setSwapState({\n        attemptingTxn: false,\n        tradeToConfirm,\n        showConfirm,\n        swapErrorMessage: undefined,\n        txHash: hash\n      });\n      ReactGA.event({\n        category: 'Swap',\n        action: recipient === null ? 'Swap w/o Send' : (recipientAddress !== null && recipientAddress !== void 0 ? recipientAddress : recipient) === account ? 'Swap w/o Send + recipient' : 'Swap w/ Send',\n        label: [trade === null || trade === void 0 ? void 0 : (_trade$inputAmount = trade.inputAmount) === null || _trade$inputAmount === void 0 ? void 0 : (_trade$inputAmount$cu = _trade$inputAmount.currency) === null || _trade$inputAmount$cu === void 0 ? void 0 : _trade$inputAmount$cu.symbol, trade === null || trade === void 0 ? void 0 : (_trade$outputAmount = trade.outputAmount) === null || _trade$outputAmount === void 0 ? void 0 : (_trade$outputAmount$c = _trade$outputAmount.currency) === null || _trade$outputAmount$c === void 0 ? void 0 : _trade$outputAmount$c.symbol, getTradeVersion(trade)].join('/')\n      });\n    }).catch(error => {\n      setSwapState({\n        attemptingTxn: false,\n        tradeToConfirm,\n        showConfirm,\n        swapErrorMessage: error.message,\n        txHash: undefined\n      });\n    });\n  }, [tradeToConfirm, account, priceImpactWithoutFee, recipient, recipientAddress, showConfirm, swapCallback, trade]);\n\n  // errors\n  const [showInverted, setShowInverted] = useState(false);\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee);\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow = !swapInputError && (approval === ApprovalState.NOT_APPROVED || approval === ApprovalState.PENDING || approvalSubmitted && approval === ApprovalState.APPROVED) && !(priceImpactSeverity > 3 && !isExpertMode);\n  const [dismissedToken0] = useTokenWarningDismissal(chainId, currencies[Field.INPUT]);\n  const [dismissedToken1] = useTokenWarningDismissal(chainId, currencies[Field.OUTPUT]);\n  const showWarning = !dismissedToken0 && !!currencies[Field.INPUT] || !dismissedToken1 && !!currencies[Field.OUTPUT];\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({\n      showConfirm: false,\n      tradeToConfirm,\n      attemptingTxn,\n      swapErrorMessage,\n      txHash\n    });\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '');\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash]);\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({\n      tradeToConfirm: trade,\n      swapErrorMessage,\n      txHash,\n      attemptingTxn,\n      showConfirm\n    });\n  }, [attemptingTxn, showConfirm, swapErrorMessage, trade, txHash]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, showWarning && /*#__PURE__*/React.createElement(TokenWarningCards, {\n    currencies: currencies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(AppBody, {\n    disabled: showWarning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SwapPoolTabs, {\n    active: 'swap',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Wrapper, {\n    id: \"swap-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ConfirmSwapModal, {\n    isOpen: showConfirm,\n    trade: trade,\n    originalTrade: tradeToConfirm,\n    onAcceptChanges: handleAcceptChanges,\n    attemptingTxn: attemptingTxn,\n    txHash: txHash,\n    recipient: recipient,\n    allowedSlippage: allowedSlippage,\n    onConfirm: handleSwap,\n    swapErrorMessage: swapErrorMessage,\n    onDismiss: handleConfirmDismiss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: 'md',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CurrencyInputPanel, {\n    label: independentField === Field.OUTPUT && !showWrap ? 'From (estimated)' : 'From',\n    value: formattedAmounts[Field.INPUT],\n    showMaxButton: !atMaxAmountInput,\n    currency: currencies[Field.INPUT],\n    onUserInput: handleTypeInput,\n    onMax: () => {\n      maxAmountInput && onUserInput(Field.INPUT, maxAmountInput.toExact());\n    },\n    onCurrencySelect: currency => {\n      setApprovalSubmitted(false); // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, currency);\n    },\n    otherCurrency: currencies[Field.OUTPUT],\n    id: \"swap-currency-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(AutoColumn, {\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AutoRow, {\n    justify: \"space-between\",\n    style: {\n      padding: '0 1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ArrowWrapper, {\n    clickable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ArrowDown, {\n    size: \"16\",\n    onClick: () => {\n      setApprovalSubmitted(false); // reset 2 step UI for approvals\n      onSwitchTokens();\n    },\n    color: currencies[Field.INPUT] && currencies[Field.OUTPUT] ? theme.primary1 : theme.text2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 19\n    }\n  })), recipient === null && !showWrap && isExpertMode ? /*#__PURE__*/React.createElement(LinkStyledButton, {\n    id: \"add-recipient-button\",\n    onClick: () => onChangeRecipient(''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 19\n    }\n  }, \"+ Add a send (optional)\") : null)), /*#__PURE__*/React.createElement(CurrencyInputPanel, {\n    value: formattedAmounts[Field.OUTPUT],\n    onUserInput: handleTypeOutput,\n    label: independentField === Field.INPUT && !showWrap ? 'To (estimated)' : 'To',\n    showMaxButton: false,\n    currency: currencies[Field.OUTPUT],\n    onCurrencySelect: address => onCurrencySelection(Field.OUTPUT, address),\n    otherCurrency: currencies[Field.INPUT],\n    id: \"swap-currency-output\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 13\n    }\n  }), recipient !== null && !showWrap ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AutoRow, {\n    justify: \"space-between\",\n    style: {\n      padding: '0 1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ArrowWrapper, {\n    clickable: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(ArrowDown, {\n    size: \"16\",\n    color: theme.text2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(LinkStyledButton, {\n    id: \"remove-recipient-button\",\n    onClick: () => onChangeRecipient(null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 19\n    }\n  }, \"- Remove send\")), /*#__PURE__*/React.createElement(AddressInputPanel, {\n    id: \"recipient\",\n    value: recipient,\n    onChange: onChangeRecipient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 17\n    }\n  })) : null, showWrap ? null : /*#__PURE__*/React.createElement(Card, {\n    padding: '.25rem .75rem 0 .75rem',\n    borderRadius: '20px',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"4px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontWeight: 500,\n    fontSize: 14,\n    color: theme.text2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 21\n    }\n  }, \"Price\"), /*#__PURE__*/React.createElement(TradePrice, {\n    inputCurrency: currencies[Field.INPUT],\n    outputCurrency: currencies[Field.OUTPUT],\n    price: trade === null || trade === void 0 ? void 0 : trade.executionPrice,\n    showInverted: showInverted,\n    setShowInverted: setShowInverted,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 21\n    }\n  })), allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && /*#__PURE__*/React.createElement(RowBetween, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ClickableText, {\n    fontWeight: 500,\n    fontSize: 14,\n    color: theme.text2,\n    onClick: toggleSettings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 23\n    }\n  }, \"Slippage Tolerance\"), /*#__PURE__*/React.createElement(ClickableText, {\n    fontWeight: 500,\n    fontSize: 14,\n    color: theme.text2,\n    onClick: toggleSettings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 23\n    }\n  }, allowedSlippage ? allowedSlippage / 100 : '-', \"%\"))))), /*#__PURE__*/React.createElement(BottomGrouping, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 11\n    }\n  }, !account ? /*#__PURE__*/React.createElement(ButtonLight, {\n    onClick: toggleWalletModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 15\n    }\n  }, \"Connect Wallet\") : showWrap ? /*#__PURE__*/React.createElement(ButtonPrimary, {\n    disabled: Boolean(wrapInputError),\n    onClick: onWrap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 15\n    }\n  }, wrapInputError !== null && wrapInputError !== void 0 ? wrapInputError : wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null) : noRoute && userHasSpecifiedInputOutput ? /*#__PURE__*/React.createElement(GreyCard, {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.main, {\n    mb: \"4px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 17\n    }\n  }, \"Insufficient liquidity for this trade.\")) : showApproveFlow ? /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ButtonPrimary, {\n    onClick: approveCallback,\n    disabled: approval !== ApprovalState.NOT_APPROVED || approvalSubmitted,\n    width: \"48%\",\n    altDisbaledStyle: approval === ApprovalState.PENDING // show solid button while waiting\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 17\n    }\n  }, approval === ApprovalState.PENDING ? /*#__PURE__*/React.createElement(Dots, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 21\n    }\n  }, \"Approving\") : approvalSubmitted && approval === ApprovalState.APPROVED ? 'Approved' : 'Approve ' + ((_currencies$Field$INP = currencies[Field.INPUT]) === null || _currencies$Field$INP === void 0 ? void 0 : _currencies$Field$INP.symbol)), /*#__PURE__*/React.createElement(ButtonError, {\n    onClick: () => {\n      if (isExpertMode) {\n        handleSwap();\n      } else {\n        setSwapState({\n          tradeToConfirm: trade,\n          attemptingTxn: false,\n          swapErrorMessage: undefined,\n          showConfirm: true,\n          txHash: undefined\n        });\n      }\n    },\n    width: \"48%\",\n    id: \"swap-button\",\n    disabled: !isValid || approval !== ApprovalState.APPROVED || priceImpactSeverity > 3 && !isExpertMode,\n    error: isValid && priceImpactSeverity > 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontSize: 16,\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 19\n    }\n  }, priceImpactSeverity > 3 && !isExpertMode ? `Price Impact High` : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`))) : /*#__PURE__*/React.createElement(ButtonError, {\n    onClick: () => {\n      if (isExpertMode) {\n        handleSwap();\n      } else {\n        setSwapState({\n          tradeToConfirm: trade,\n          attemptingTxn: false,\n          swapErrorMessage: undefined,\n          showConfirm: true,\n          txHash: undefined\n        });\n      }\n    },\n    id: \"swap-button\",\n    disabled: !isValid || priceImpactSeverity > 3 && !isExpertMode || !!swapCallbackError,\n    error: isValid && priceImpactSeverity > 2 && !swapCallbackError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontSize: 20,\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 17\n    }\n  }, swapInputError ? swapInputError : priceImpactSeverity > 3 && !isExpertMode ? `Price Impact Too High` : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`)), isExpertMode && swapErrorMessage ? /*#__PURE__*/React.createElement(SwapCallbackError, {\n    error: swapErrorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 49\n    }\n  }) : null, betterTradeLinkVersion && /*#__PURE__*/React.createElement(BetterTradeLink, {\n    version: betterTradeLinkVersion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 40\n    }\n  }), /*#__PURE__*/React.createElement(AutoRow, {\n    justify: \"center\",\n    style: {\n      marginTop: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ExternalLink, {\n    href: \"https://t.me/storyswapio\",\n    style: {\n      color: '#2130ED',\n      textDecoration: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      gap: '4px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    width: \"16\",\n    height: \"16\",\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: \"#2130ED\",\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"12\",\n    cy: \"12\",\n    r: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"12\",\n    y1: \"8\",\n    x2: \"12\",\n    y2: \"16\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"8\",\n    y1: \"12\",\n    x2: \"16\",\n    y2: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 19\n    }\n  })), \"How to add your token to tokenlist?\"))))), /*#__PURE__*/React.createElement(AdvancedSwapDetailsDropdown, {\n    trade: trade,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"names":["JSBI","React","useCallback","useContext","useEffect","useState","ArrowDown","ReactGA","Text","ThemeContext","AddressInputPanel","ButtonError","ButtonLight","ButtonPrimary","Card","GreyCard","AutoColumn","ConfirmSwapModal","CurrencyInputPanel","SwapPoolTabs","AutoRow","RowBetween","AdvancedSwapDetailsDropdown","BetterTradeLink","confirmPriceImpactWithoutFee","ArrowWrapper","BottomGrouping","Dots","SwapCallbackError","Wrapper","TradePrice","TokenWarningCards","BETTER_TRADE_LINK_THRESHOLD","INITIAL_ALLOWED_SLIPPAGE","getTradeVersion","isTradeBetter","useActiveWeb3React","ApprovalState","useApproveCallbackFromTrade","useENSAddress","useSwapCallback","useToggledVersion","Version","useWrapCallback","WrapType","useToggleSettingsMenu","useWalletModalToggle","Field","useDefaultsFromURLSearch","useDerivedSwapInfo","useSwapActionHandlers","useSwapState","useExpertModeManager","useTokenWarningDismissal","useUserDeadline","useUserSlippageTolerance","LinkStyledButton","TYPE","ExternalLink","maxAmountSpend","computeTradePriceBreakdown","warningSeverity","AppBody","ClickableText","Swap","_parsedAmounts$indepe","_parsedAmounts$indepe2","_parsedAmounts$depend","_parsedAmounts$depend2","_parsedAmounts$indepe3","_parsedAmounts$Field$","_currencies$Field$INP","account","chainId","theme","toggleWalletModal","toggleSettings","isExpertMode","deadline","allowedSlippage","independentField","typedValue","recipient","v1Trade","v2Trade","currencyBalances","parsedAmount","currencies","inputError","swapInputError","wrapType","execute","onWrap","wrapInputError","INPUT","OUTPUT","showWrap","NOT_APPLICABLE","address","recipientAddress","toggledVersion","trade","undefined","v1","v2","betterTradeLinkVersion","parsedAmounts","inputAmount","outputAmount","onSwitchTokens","onCurrencySelection","onUserInput","onChangeRecipient","isValid","dependentField","handleTypeInput","value","handleTypeOutput","showConfirm","tradeToConfirm","swapErrorMessage","attemptingTxn","txHash","setSwapState","formattedAmounts","toExact","toSignificant","route","userHasSpecifiedInputOutput","Boolean","greaterThan","BigInt","noRoute","approval","approveCallback","approvalSubmitted","setApprovalSubmitted","PENDING","maxAmountInput","atMaxAmountInput","equalTo","callback","swapCallback","error","swapCallbackError","priceImpactWithoutFee","handleSwap","then","hash","_trade$inputAmount","_trade$inputAmount$cu","_trade$outputAmount","_trade$outputAmount$c","event","category","action","label","currency","symbol","join","catch","message","showInverted","setShowInverted","priceImpactSeverity","showApproveFlow","NOT_APPROVED","APPROVED","dismissedToken0","dismissedToken1","showWarning","handleConfirmDismiss","handleAcceptChanges","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","disabled","active","id","isOpen","originalTrade","onAcceptChanges","onConfirm","onDismiss","gap","showMaxButton","onMax","onCurrencySelect","otherCurrency","justify","style","padding","clickable","size","onClick","color","primary1","text2","onChange","borderRadius","align","fontWeight","fontSize","inputCurrency","outputCurrency","price","executionPrice","WRAP","UNWRAP","textAlign","main","mb","width","altDisbaledStyle","version","marginTop","href","textDecoration","display","alignItems","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","x1","y1","x2","y2"],"sources":["/Users/synallage/Desktop/fomoswap-uni/interface-73580de922ce3ff642430d71aa24f5c053e6dd4d/src/pages/Swap/index.tsx"],"sourcesContent":["import { CurrencyAmount, JSBI, Trade } from 'fomoswap-storytestnet'\nimport React, { useCallback, useContext, useEffect, useState } from 'react'\nimport { ArrowDown } from 'react-feather'\nimport ReactGA from 'react-ga'\nimport { Text } from 'rebass'\nimport { ThemeContext } from 'styled-components'\nimport AddressInputPanel from '../../components/AddressInputPanel'\nimport { ButtonError, ButtonLight, ButtonPrimary } from '../../components/Button'\nimport Card, { GreyCard } from '../../components/Card'\nimport { AutoColumn } from '../../components/Column'\nimport ConfirmSwapModal from '../../components/swap/ConfirmSwapModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { SwapPoolTabs } from '../../components/NavigationTabs'\nimport { AutoRow, RowBetween } from '../../components/Row'\nimport AdvancedSwapDetailsDropdown from '../../components/swap/AdvancedSwapDetailsDropdown'\nimport BetterTradeLink from '../../components/swap/BetterTradeLink'\nimport confirmPriceImpactWithoutFee from '../../components/swap/confirmPriceImpactWithoutFee'\nimport { ArrowWrapper, BottomGrouping, Dots, SwapCallbackError, Wrapper } from '../../components/swap/styleds'\nimport TradePrice from '../../components/swap/TradePrice'\nimport { TokenWarningCards } from '../../components/TokenWarningCard'\n\nimport { BETTER_TRADE_LINK_THRESHOLD, INITIAL_ALLOWED_SLIPPAGE } from '../../constants'\nimport { getTradeVersion, isTradeBetter } from '../../data/V1'\nimport { useActiveWeb3React } from '../../hooks'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\nimport useENSAddress from '../../hooks/useENSAddress'\nimport { useSwapCallback } from '../../hooks/useSwapCallback'\nimport useToggledVersion, { Version } from '../../hooks/useToggledVersion'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback'\nimport { useToggleSettingsMenu, useWalletModalToggle } from '../../state/application/hooks'\nimport { Field } from '../../state/swap/actions'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState\n} from '../../state/swap/hooks'\nimport {\n  useExpertModeManager,\n  useTokenWarningDismissal,\n  useUserDeadline,\n  useUserSlippageTolerance\n} from '../../state/user/hooks'\nimport { LinkStyledButton, TYPE, ExternalLink } from '../../theme'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\nimport AppBody from '../AppBody'\nimport { ClickableText } from '../Pool/styleds'\n\nexport default function Swap() {\n  useDefaultsFromURLSearch()\n\n  const { account, chainId } = useActiveWeb3React()\n  const theme = useContext(ThemeContext)\n\n  // toggle wallet when disconnected\n  const toggleWalletModal = useWalletModalToggle()\n\n  // for expert mode\n  const toggleSettings = useToggleSettingsMenu()\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [deadline] = useUserDeadline()\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const {\n    v1Trade,\n    v2Trade,\n    currencyBalances,\n    parsedAmount,\n    currencies,\n    inputError: swapInputError\n  } = useDerivedSwapInfo()\n  const { wrapType, execute: onWrap, inputError: wrapInputError } = useWrapCallback(\n    currencies[Field.INPUT],\n    currencies[Field.OUTPUT],\n    typedValue\n  )\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const { address: recipientAddress } = useENSAddress(recipient)\n  const toggledVersion = useToggledVersion()\n  const trade = showWrap\n    ? undefined\n    : {\n        [Version.v1]: v1Trade,\n        [Version.v2]: v2Trade\n      }[toggledVersion]\n\n  const betterTradeLinkVersion: Version | undefined =\n    toggledVersion === Version.v2 && isTradeBetter(v2Trade, v1Trade, BETTER_TRADE_LINK_THRESHOLD)\n      ? Version.v1\n      : toggledVersion === Version.v1 && isTradeBetter(v1Trade, v2Trade)\n      ? Version.v2\n      : undefined\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput]\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput]\n  )\n\n  // modal and loading\n  const [{ showConfirm, tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    showConfirm: boolean\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    showConfirm: false,\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? ''\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0))\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(\n    trade,\n    allowedSlippage,\n    deadline,\n    recipient\n  )\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, showConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then(hash => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, showConfirm, swapErrorMessage: undefined, txHash: hash })\n\n        ReactGA.event({\n          category: 'Swap',\n          action:\n            recipient === null\n              ? 'Swap w/o Send'\n              : (recipientAddress ?? recipient) === account\n              ? 'Swap w/o Send + recipient'\n              : 'Swap w/ Send',\n          label: [\n            trade?.inputAmount?.currency?.symbol,\n            trade?.outputAmount?.currency?.symbol,\n            getTradeVersion(trade)\n          ].join('/')\n        })\n      })\n      .catch(error => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          showConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined\n        })\n      })\n  }, [tradeToConfirm, account, priceImpactWithoutFee, recipient, recipientAddress, showConfirm, swapCallback, trade])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const [dismissedToken0] = useTokenWarningDismissal(chainId, currencies[Field.INPUT])\n  const [dismissedToken1] = useTokenWarningDismissal(chainId, currencies[Field.OUTPUT])\n  const showWarning =\n    (!dismissedToken0 && !!currencies[Field.INPUT]) || (!dismissedToken1 && !!currencies[Field.OUTPUT])\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ showConfirm: false, tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn, showConfirm })\n  }, [attemptingTxn, showConfirm, swapErrorMessage, trade, txHash])\n\n  return (\n    <>\n      {showWarning && <TokenWarningCards currencies={currencies} />}\n      <AppBody disabled={showWarning}>\n        <SwapPoolTabs active={'swap'} />\n        <Wrapper id=\"swap-page\">\n          <ConfirmSwapModal\n            isOpen={showConfirm}\n            trade={trade}\n            originalTrade={tradeToConfirm}\n            onAcceptChanges={handleAcceptChanges}\n            attemptingTxn={attemptingTxn}\n            txHash={txHash}\n            recipient={recipient}\n            allowedSlippage={allowedSlippage}\n            onConfirm={handleSwap}\n            swapErrorMessage={swapErrorMessage}\n            onDismiss={handleConfirmDismiss}\n          />\n\n          <AutoColumn gap={'md'}>\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap ? 'From (estimated)' : 'From'}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={() => {\n                maxAmountInput && onUserInput(Field.INPUT, maxAmountInput.toExact())\n              }}\n              onCurrencySelect={currency => {\n                setApprovalSubmitted(false) // reset 2 step UI for approvals\n                onCurrencySelection(Field.INPUT, currency)\n              }}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDown\n                    size=\"16\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? theme.primary1 : theme.text2}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <LinkStyledButton id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    + Add a send (optional)\n                  </LinkStyledButton>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap ? 'To (estimated)' : 'To'}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={address => onCurrencySelection(Field.OUTPUT, address)}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n\n            {recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDown size=\"16\" color={theme.text2} />\n                  </ArrowWrapper>\n                  <LinkStyledButton id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    - Remove send\n                  </LinkStyledButton>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <Card padding={'.25rem .75rem 0 .75rem'} borderRadius={'20px'}>\n                <AutoColumn gap=\"4px\">\n                  <RowBetween align=\"center\">\n                    <Text fontWeight={500} fontSize={14} color={theme.text2}>\n                      Price\n                    </Text>\n                    <TradePrice\n                      inputCurrency={currencies[Field.INPUT]}\n                      outputCurrency={currencies[Field.OUTPUT]}\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n\n                  {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                    <RowBetween align=\"center\">\n                      <ClickableText fontWeight={500} fontSize={14} color={theme.text2} onClick={toggleSettings}>\n                        Slippage Tolerance\n                      </ClickableText>\n                      <ClickableText fontWeight={500} fontSize={14} color={theme.text2} onClick={toggleSettings}>\n                        {allowedSlippage ? allowedSlippage / 100 : '-'}%\n                      </ClickableText>\n                    </RowBetween>\n                  )}\n                </AutoColumn>\n              </Card>\n            )}\n          </AutoColumn>\n          <BottomGrouping>\n            {!account ? (\n              <ButtonLight onClick={toggleWalletModal}>Connect Wallet</ButtonLight>\n            ) : showWrap ? (\n              <ButtonPrimary disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </ButtonPrimary>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center' }}>\n                <TYPE.main mb=\"4px\">Insufficient liquidity for this trade.</TYPE.main>\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <ButtonPrimary\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                  altDisbaledStyle={approval === ApprovalState.PENDING} // show solid button while waiting\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <Dots>Approving</Dots>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    'Approved'\n                  ) : (\n                    'Approve ' + currencies[Field.INPUT]?.symbol\n                  )}\n                </ButtonPrimary>\n                <ButtonError\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        showConfirm: true,\n                        txHash: undefined\n                      })\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                  error={isValid && priceImpactSeverity > 2}\n                >\n                  <Text fontSize={16} fontWeight={500}>\n                    {priceImpactSeverity > 3 && !isExpertMode\n                      ? `Price Impact High`\n                      : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`}\n                  </Text>\n                </ButtonError>\n              </RowBetween>\n            ) : (\n              <ButtonError\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap()\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      showConfirm: true,\n                      txHash: undefined\n                    })\n                  }\n                }}\n                id=\"swap-button\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n                error={isValid && priceImpactSeverity > 2 && !swapCallbackError}\n              >\n                <Text fontSize={20} fontWeight={500}>\n                  {swapInputError\n                    ? swapInputError\n                    : priceImpactSeverity > 3 && !isExpertMode\n                    ? `Price Impact Too High`\n                    : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`}\n                </Text>\n              </ButtonError>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n            {betterTradeLinkVersion && <BetterTradeLink version={betterTradeLinkVersion} />}\n            <AutoRow justify=\"center\" style={{ marginTop: '10px' }}>\n              <ExternalLink\n                href=\"https://t.me/storyswapio\"\n                style={{ color: '#2130ED', textDecoration: 'none', display: 'flex', alignItems: 'center', gap: '4px' }}\n              >\n                <svg\n                  width=\"16\"\n                  height=\"16\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"#2130ED\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                >\n                  <circle cx=\"12\" cy=\"12\" r=\"10\" />\n                  <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"16\" />\n                  <line x1=\"8\" y1=\"12\" x2=\"16\" y2=\"12\" />\n                </svg>\n                How to add your token to tokenlist?\n              </ExternalLink>\n            </AutoRow>\n          </BottomGrouping>\n        </Wrapper>\n      </AppBody>\n      <AdvancedSwapDetailsDropdown trade={trade} />\n    </>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}