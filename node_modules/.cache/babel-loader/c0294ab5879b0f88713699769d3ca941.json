{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function expand(project, concurrent, scheduler) {\n  if (concurrent === void 0) {\n    concurrent = Number.POSITIVE_INFINITY;\n  }\n  if (scheduler === void 0) {\n    scheduler = undefined;\n  }\n  concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n  return function (source) {\n    return source.lift(new ExpandOperator(project, concurrent, scheduler));\n  };\n}\nvar ExpandOperator = /*@__PURE__*/function () {\n  function ExpandOperator(project, concurrent, scheduler) {\n    this.project = project;\n    this.concurrent = concurrent;\n    this.scheduler = scheduler;\n  }\n  ExpandOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n  };\n  return ExpandOperator;\n}();\nexport { ExpandOperator };\nvar ExpandSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(ExpandSubscriber, _super);\n  function ExpandSubscriber(destination, project, concurrent, scheduler) {\n    var _this = _super.call(this, destination) || this;\n    _this.project = project;\n    _this.concurrent = concurrent;\n    _this.scheduler = scheduler;\n    _this.index = 0;\n    _this.active = 0;\n    _this.hasCompleted = false;\n    if (concurrent < Number.POSITIVE_INFINITY) {\n      _this.buffer = [];\n    }\n    return _this;\n  }\n  ExpandSubscriber.dispatch = function (arg) {\n    var subscriber = arg.subscriber,\n      result = arg.result,\n      value = arg.value,\n      index = arg.index;\n    subscriber.subscribeToProjection(result, value, index);\n  };\n  ExpandSubscriber.prototype._next = function (value) {\n    var destination = this.destination;\n    if (destination.closed) {\n      this._complete();\n      return;\n    }\n    var index = this.index++;\n    if (this.active < this.concurrent) {\n      destination.next(value);\n      try {\n        var project = this.project;\n        var result = project(value, index);\n        if (!this.scheduler) {\n          this.subscribeToProjection(result, value, index);\n        } else {\n          var state = {\n            subscriber: this,\n            result: result,\n            value: value,\n            index: index\n          };\n          var destination_1 = this.destination;\n          destination_1.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));\n        }\n      } catch (e) {\n        destination.error(e);\n      }\n    } else {\n      this.buffer.push(value);\n    }\n  };\n  ExpandSubscriber.prototype.subscribeToProjection = function (result, value, index) {\n    this.active++;\n    var destination = this.destination;\n    destination.add(subscribeToResult(this, result, value, index));\n  };\n  ExpandSubscriber.prototype._complete = function () {\n    this.hasCompleted = true;\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n    this.unsubscribe();\n  };\n  ExpandSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n    this._next(innerValue);\n  };\n  ExpandSubscriber.prototype.notifyComplete = function (innerSub) {\n    var buffer = this.buffer;\n    var destination = this.destination;\n    destination.remove(innerSub);\n    this.active--;\n    if (buffer && buffer.length > 0) {\n      this._next(buffer.shift());\n    }\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n  };\n  return ExpandSubscriber;\n}(OuterSubscriber);\nexport { ExpandSubscriber };","map":{"version":3,"names":["tslib_1","OuterSubscriber","subscribeToResult","expand","project","concurrent","scheduler","Number","POSITIVE_INFINITY","undefined","source","lift","ExpandOperator","subscribe","ExpandSubscriber","subscriber","_super","__extends","destination","_this","call","index","hasCompleted","buffer","dispatch","arg","result","value","subscribeToProjection","prototype","_next","closed","_complete","active","next","state","destination_1","add","schedule","e","error","push","complete","unsubscribe","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","notifyComplete","remove","length","shift"],"sources":["../../../src/internal/operators/expand.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}