{"ast":null,"code":"var _jsxFileName = \"/Users/synallage/Desktop/fomoswap-uni/interface-73580de922ce3ff642430d71aa24f5c053e6dd4d/src/components/WalletModal/index.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport ReactGA from 'react-ga';\nimport styled from 'styled-components';\nimport { isMobile } from 'react-device-detect';\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core';\nimport usePrevious from '../../hooks/usePrevious';\nimport { useWalletModalOpen, useWalletModalToggle } from '../../state/application/hooks';\nimport Modal from '../Modal';\nimport AccountDetails from '../AccountDetails';\nimport PendingView from './PendingView';\nimport Option from './Option';\nimport { SUPPORTED_WALLETS } from '../../constants';\nimport { ExternalLink } from '../../theme';\nimport MetamaskIcon from '../../assets/images/metamask.png';\nimport { ReactComponent as Close } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/x.svg\";\nimport { injected, fortmatic, portis } from '../../connectors';\nimport { OVERLAY_READY } from '../../connectors/Fortmatic';\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector';\nconst CloseIcon = styled.div`\n  position: absolute;\n  right: 1rem;\n  top: 14px;\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`;\nconst CloseColor = styled(Close)`\n  path {\n    stroke: ${({\n  theme\n}) => theme.text4};\n  }\n`;\nconst Wrapper = styled.div`\n  ${({\n  theme\n}) => theme.flexColumnNoWrap}\n  margin: 0;\n  padding: 0;\n  width: 100%;\n`;\nconst HeaderRow = styled.div`\n  ${({\n  theme\n}) => theme.flexRowNoWrap};\n  padding: 1rem 1rem;\n  font-weight: 500;\n  color: ${props => props.color === 'blue' ? ({\n  theme\n}) => theme.primary1 : 'inherit'};\n  ${({\n  theme\n}) => theme.mediaWidth.upToMedium`\n    padding: 1rem;\n  `};\n`;\nconst ContentWrapper = styled.div`\n  background-color: ${({\n  theme\n}) => theme.bg2};\n  padding: 2rem;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n\n  ${({\n  theme\n}) => theme.mediaWidth.upToMedium`padding: 1rem`};\n`;\nconst UpperSection = styled.div`\n  position: relative;\n\n  h5 {\n    margin: 0;\n    margin-bottom: 0.5rem;\n    font-size: 1rem;\n    font-weight: 400;\n  }\n\n  h5:last-child {\n    margin-bottom: 0px;\n  }\n\n  h4 {\n    margin-top: 0;\n    font-weight: 500;\n  }\n`;\nconst Blurb = styled.div`\n  ${({\n  theme\n}) => theme.flexRowNoWrap}\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  margin-top: 2rem;\n  ${({\n  theme\n}) => theme.mediaWidth.upToMedium`\n    margin: 1rem;\n    font-size: 12px;\n  `};\n`;\nconst OptionGrid = styled.div`\n  display: grid;\n  grid-gap: 10px;\n  ${({\n  theme\n}) => theme.mediaWidth.upToMedium`\n    grid-template-columns: 1fr;\n    grid-gap: 10px;\n  `};\n`;\nconst HoverText = styled.div`\n  :hover {\n    cursor: pointer;\n  }\n`;\nconst WALLET_VIEWS = {\n  OPTIONS: 'options',\n  OPTIONS_SECONDARY: 'options_secondary',\n  ACCOUNT: 'account',\n  PENDING: 'pending'\n};\nexport default function WalletModal({\n  pendingTransactions,\n  confirmedTransactions,\n  ENSName\n}) {\n  // important that these are destructed from the account-specific web3-react context\n  const {\n    active,\n    account,\n    connector,\n    activate,\n    error\n  } = useWeb3React();\n  const [walletView, setWalletView] = useState(WALLET_VIEWS.ACCOUNT);\n  const [pendingWallet, setPendingWallet] = useState();\n  const [pendingError, setPendingError] = useState();\n  const walletModalOpen = useWalletModalOpen();\n  const toggleWalletModal = useWalletModalToggle();\n  const previousAccount = usePrevious(account);\n\n  // close on connection, when logged out before\n  useEffect(() => {\n    if (account && !previousAccount && walletModalOpen) {\n      toggleWalletModal();\n    }\n  }, [account, previousAccount, toggleWalletModal, walletModalOpen]);\n\n  // always reset to account view\n  useEffect(() => {\n    if (walletModalOpen) {\n      setPendingError(false);\n      setWalletView(WALLET_VIEWS.ACCOUNT);\n    }\n  }, [walletModalOpen]);\n\n  // close modal when a connection is successful\n  const activePrevious = usePrevious(active);\n  const connectorPrevious = usePrevious(connector);\n  useEffect(() => {\n    if (walletModalOpen && (active && !activePrevious || connector && connector !== connectorPrevious && !error)) {\n      setWalletView(WALLET_VIEWS.ACCOUNT);\n    }\n  }, [setWalletView, active, error, connector, walletModalOpen, activePrevious, connectorPrevious]);\n  const tryActivation = async connector => {\n    var _connector$walletConn, _connector$walletConn2;\n    let name = '';\n    Object.keys(SUPPORTED_WALLETS).map(key => {\n      if (connector === SUPPORTED_WALLETS[key].connector) {\n        return name = SUPPORTED_WALLETS[key].name;\n      }\n      return true;\n    });\n    // log selected wallet\n    ReactGA.event({\n      category: 'Wallet',\n      action: 'Change Wallet',\n      label: name\n    });\n    setPendingWallet(connector); // set wallet for pending view\n    setWalletView(WALLET_VIEWS.PENDING);\n\n    // if the connector is walletconnect and the user has already tried to connect, manually reset the connector\n    if (connector instanceof WalletConnectConnector && ((_connector$walletConn = connector.walletConnectProvider) === null || _connector$walletConn === void 0 ? void 0 : (_connector$walletConn2 = _connector$walletConn.wc) === null || _connector$walletConn2 === void 0 ? void 0 : _connector$walletConn2.uri)) {\n      connector.walletConnectProvider = undefined;\n    }\n    activate(connector, undefined, true).catch(error => {\n      if (error instanceof UnsupportedChainIdError) {\n        activate(connector); // a little janky...can't use setError because the connector isn't set\n      } else {\n        setPendingError(true);\n      }\n    });\n  };\n\n  // close wallet modal if fortmatic modal is active\n  useEffect(() => {\n    fortmatic.on(OVERLAY_READY, () => {\n      toggleWalletModal();\n    });\n  }, [toggleWalletModal]);\n\n  // get wallets user can switch too, depending on device/browser\n  function getOptions() {\n    const isMetamask = window.ethereum && window.ethereum.isMetaMask;\n    return Object.keys(SUPPORTED_WALLETS).map(key => {\n      const option = SUPPORTED_WALLETS[key];\n      // check for mobile options\n      if (isMobile) {\n        //disable portis on mobile for now\n        if (option.connector === portis) {\n          return null;\n        }\n        if (!window.web3 && !window.ethereum && option.mobile) {\n          return /*#__PURE__*/React.createElement(Option, {\n            onClick: () => {\n              option.connector !== connector && !option.href && tryActivation(option.connector);\n            },\n            id: `connect-${key}`,\n            key: key,\n            active: option.connector && option.connector === connector,\n            color: option.color,\n            link: option.href,\n            header: option.name,\n            subheader: null,\n            icon: require('../../assets/images/' + option.iconName),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 13\n            }\n          });\n        }\n        return null;\n      }\n\n      // overwrite injected when needed\n      if (option.connector === injected) {\n        // don't show injected if there's no injected provider\n        if (!(window.web3 || window.ethereum)) {\n          if (option.name === 'MetaMask') {\n            return /*#__PURE__*/React.createElement(Option, {\n              id: `connect-${key}`,\n              key: key,\n              color: '#E8831D',\n              header: 'Install Metamask',\n              subheader: null,\n              link: 'https://metamask.io/',\n              icon: MetamaskIcon,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 15\n              }\n            });\n          } else {\n            return null; //dont want to return install twice\n          }\n        }\n        // don't return metamask if injected provider isn't metamask\n        else if (option.name === 'MetaMask' && !isMetamask) {\n          return null;\n        }\n        // likewise for generic\n        else if (option.name === 'Injected' && isMetamask) {\n          return null;\n        }\n      }\n\n      // return rest of options\n      return !isMobile && !option.mobileOnly && /*#__PURE__*/React.createElement(Option, {\n        id: `connect-${key}`,\n        onClick: () => {\n          option.connector === connector ? setWalletView(WALLET_VIEWS.ACCOUNT) : !option.href && tryActivation(option.connector);\n        },\n        key: key,\n        active: option.connector === connector,\n        color: option.color,\n        link: option.href,\n        header: option.name,\n        subheader: null //use option.descriptio to bring back multi-line\n        ,\n        icon: require('../../assets/images/' + option.iconName),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }\n      });\n    });\n  }\n  function getModalContent() {\n    if (error) {\n      return /*#__PURE__*/React.createElement(UpperSection, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CloseIcon, {\n        onClick: toggleWalletModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(CloseColor, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(HeaderRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }\n      }, error instanceof UnsupportedChainIdError ? 'Wrong Network' : 'Error connecting'), /*#__PURE__*/React.createElement(ContentWrapper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }\n      }, error instanceof UnsupportedChainIdError ? /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 15\n        }\n      }, \"Please connect to the appropriate Ethereum network.\") : 'Error connecting. Try refreshing the page.'));\n    }\n    if (account && walletView === WALLET_VIEWS.ACCOUNT) {\n      return /*#__PURE__*/React.createElement(AccountDetails, {\n        toggleWalletModal: toggleWalletModal,\n        pendingTransactions: pendingTransactions,\n        confirmedTransactions: confirmedTransactions,\n        ENSName: ENSName,\n        openOptions: () => setWalletView(WALLET_VIEWS.OPTIONS),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 9\n        }\n      });\n    }\n    return /*#__PURE__*/React.createElement(UpperSection, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      onClick: toggleWalletModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CloseColor, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 11\n      }\n    })), walletView !== WALLET_VIEWS.ACCOUNT ? /*#__PURE__*/React.createElement(HeaderRow, {\n      color: \"blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(HoverText, {\n      onClick: () => {\n        setPendingError(false);\n        setWalletView(WALLET_VIEWS.ACCOUNT);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 13\n      }\n    }, \"Back\")) : /*#__PURE__*/React.createElement(HeaderRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(HoverText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 13\n      }\n    }, \"Connect to a wallet\")), /*#__PURE__*/React.createElement(ContentWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }\n    }, walletView === WALLET_VIEWS.PENDING ? /*#__PURE__*/React.createElement(PendingView, {\n      connector: pendingWallet,\n      error: pendingError,\n      setPendingError: setPendingError,\n      tryActivation: tryActivation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(OptionGrid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 13\n      }\n    }, getOptions()), walletView !== WALLET_VIEWS.PENDING && /*#__PURE__*/React.createElement(Blurb, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 15\n      }\n    }, \"New to Ethereum? \\xA0\"), ' ', /*#__PURE__*/React.createElement(ExternalLink, {\n      href: \"https://ethereum.org/wallets/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 15\n      }\n    }, \"Learn more about wallets\"))));\n  }\n  return /*#__PURE__*/React.createElement(Modal, {\n    isOpen: walletModalOpen,\n    onDismiss: toggleWalletModal,\n    minHeight: null,\n    maxHeight: 90,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }\n  }, getModalContent()));\n}","map":{"version":3,"names":["React","useState","useEffect","ReactGA","styled","isMobile","UnsupportedChainIdError","useWeb3React","usePrevious","useWalletModalOpen","useWalletModalToggle","Modal","AccountDetails","PendingView","Option","SUPPORTED_WALLETS","ExternalLink","MetamaskIcon","ReactComponent","Close","injected","fortmatic","portis","OVERLAY_READY","WalletConnectConnector","CloseIcon","div","CloseColor","theme","text4","Wrapper","flexColumnNoWrap","HeaderRow","flexRowNoWrap","props","color","primary1","mediaWidth","upToMedium","ContentWrapper","bg2","UpperSection","Blurb","OptionGrid","HoverText","WALLET_VIEWS","OPTIONS","OPTIONS_SECONDARY","ACCOUNT","PENDING","WalletModal","pendingTransactions","confirmedTransactions","ENSName","active","account","connector","activate","error","walletView","setWalletView","pendingWallet","setPendingWallet","pendingError","setPendingError","walletModalOpen","toggleWalletModal","previousAccount","activePrevious","connectorPrevious","tryActivation","_connector$walletConn","_connector$walletConn2","name","Object","keys","map","key","event","category","action","label","walletConnectProvider","wc","uri","undefined","catch","on","getOptions","isMetamask","window","ethereum","isMetaMask","option","web3","mobile","createElement","onClick","href","id","link","header","subheader","icon","require","iconName","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","mobileOnly","getModalContent","openOptions","isOpen","onDismiss","minHeight","maxHeight"],"sources":["/Users/synallage/Desktop/fomoswap-uni/interface-73580de922ce3ff642430d71aa24f5c053e6dd4d/src/components/WalletModal/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport ReactGA from 'react-ga'\nimport styled from 'styled-components'\nimport { isMobile } from 'react-device-detect'\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core'\nimport usePrevious from '../../hooks/usePrevious'\nimport { useWalletModalOpen, useWalletModalToggle } from '../../state/application/hooks'\n\nimport Modal from '../Modal'\nimport AccountDetails from '../AccountDetails'\nimport PendingView from './PendingView'\nimport Option from './Option'\nimport { SUPPORTED_WALLETS } from '../../constants'\nimport { ExternalLink } from '../../theme'\nimport MetamaskIcon from '../../assets/images/metamask.png'\nimport { ReactComponent as Close } from '../../assets/images/x.svg'\nimport { injected, fortmatic, portis } from '../../connectors'\nimport { OVERLAY_READY } from '../../connectors/Fortmatic'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\n\nconst CloseIcon = styled.div`\n  position: absolute;\n  right: 1rem;\n  top: 14px;\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\nconst CloseColor = styled(Close)`\n  path {\n    stroke: ${({ theme }) => theme.text4};\n  }\n`\n\nconst Wrapper = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  margin: 0;\n  padding: 0;\n  width: 100%;\n`\n\nconst HeaderRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  padding: 1rem 1rem;\n  font-weight: 500;\n  color: ${props => (props.color === 'blue' ? ({ theme }) => theme.primary1 : 'inherit')};\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    padding: 1rem;\n  `};\n`\n\nconst ContentWrapper = styled.div`\n  background-color: ${({ theme }) => theme.bg2};\n  padding: 2rem;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`padding: 1rem`};\n`\n\nconst UpperSection = styled.div`\n  position: relative;\n\n  h5 {\n    margin: 0;\n    margin-bottom: 0.5rem;\n    font-size: 1rem;\n    font-weight: 400;\n  }\n\n  h5:last-child {\n    margin-bottom: 0px;\n  }\n\n  h4 {\n    margin-top: 0;\n    font-weight: 500;\n  }\n`\n\nconst Blurb = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  margin-top: 2rem;\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    margin: 1rem;\n    font-size: 12px;\n  `};\n`\n\nconst OptionGrid = styled.div`\n  display: grid;\n  grid-gap: 10px;\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    grid-template-columns: 1fr;\n    grid-gap: 10px;\n  `};\n`\n\nconst HoverText = styled.div`\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst WALLET_VIEWS = {\n  OPTIONS: 'options',\n  OPTIONS_SECONDARY: 'options_secondary',\n  ACCOUNT: 'account',\n  PENDING: 'pending'\n}\n\nexport default function WalletModal({\n  pendingTransactions,\n  confirmedTransactions,\n  ENSName\n}: {\n  pendingTransactions: string[] // hashes of pending\n  confirmedTransactions: string[] // hashes of confirmed\n  ENSName?: string\n}) {\n  // important that these are destructed from the account-specific web3-react context\n  const { active, account, connector, activate, error } = useWeb3React()\n\n  const [walletView, setWalletView] = useState(WALLET_VIEWS.ACCOUNT)\n\n  const [pendingWallet, setPendingWallet] = useState()\n\n  const [pendingError, setPendingError] = useState<boolean>()\n\n  const walletModalOpen = useWalletModalOpen()\n  const toggleWalletModal = useWalletModalToggle()\n\n  const previousAccount = usePrevious(account)\n\n  // close on connection, when logged out before\n  useEffect(() => {\n    if (account && !previousAccount && walletModalOpen) {\n      toggleWalletModal()\n    }\n  }, [account, previousAccount, toggleWalletModal, walletModalOpen])\n\n  // always reset to account view\n  useEffect(() => {\n    if (walletModalOpen) {\n      setPendingError(false)\n      setWalletView(WALLET_VIEWS.ACCOUNT)\n    }\n  }, [walletModalOpen])\n\n  // close modal when a connection is successful\n  const activePrevious = usePrevious(active)\n  const connectorPrevious = usePrevious(connector)\n  useEffect(() => {\n    if (walletModalOpen && ((active && !activePrevious) || (connector && connector !== connectorPrevious && !error))) {\n      setWalletView(WALLET_VIEWS.ACCOUNT)\n    }\n  }, [setWalletView, active, error, connector, walletModalOpen, activePrevious, connectorPrevious])\n\n  const tryActivation = async connector => {\n    let name = ''\n    Object.keys(SUPPORTED_WALLETS).map(key => {\n      if (connector === SUPPORTED_WALLETS[key].connector) {\n        return (name = SUPPORTED_WALLETS[key].name)\n      }\n      return true\n    })\n    // log selected wallet\n    ReactGA.event({\n      category: 'Wallet',\n      action: 'Change Wallet',\n      label: name\n    })\n    setPendingWallet(connector) // set wallet for pending view\n    setWalletView(WALLET_VIEWS.PENDING)\n\n    // if the connector is walletconnect and the user has already tried to connect, manually reset the connector\n    if (connector instanceof WalletConnectConnector && connector.walletConnectProvider?.wc?.uri) {\n      connector.walletConnectProvider = undefined\n    }\n\n    activate(connector, undefined, true).catch(error => {\n      if (error instanceof UnsupportedChainIdError) {\n        activate(connector) // a little janky...can't use setError because the connector isn't set\n      } else {\n        setPendingError(true)\n      }\n    })\n  }\n\n  // close wallet modal if fortmatic modal is active\n  useEffect(() => {\n    fortmatic.on(OVERLAY_READY, () => {\n      toggleWalletModal()\n    })\n  }, [toggleWalletModal])\n\n  // get wallets user can switch too, depending on device/browser\n  function getOptions() {\n    const isMetamask = window.ethereum && window.ethereum.isMetaMask\n    return Object.keys(SUPPORTED_WALLETS).map(key => {\n      const option = SUPPORTED_WALLETS[key]\n      // check for mobile options\n      if (isMobile) {\n        //disable portis on mobile for now\n        if (option.connector === portis) {\n          return null\n        }\n\n        if (!window.web3 && !window.ethereum && option.mobile) {\n          return (\n            <Option\n              onClick={() => {\n                option.connector !== connector && !option.href && tryActivation(option.connector)\n              }}\n              id={`connect-${key}`}\n              key={key}\n              active={option.connector && option.connector === connector}\n              color={option.color}\n              link={option.href}\n              header={option.name}\n              subheader={null}\n              icon={require('../../assets/images/' + option.iconName)}\n            />\n          )\n        }\n        return null\n      }\n\n      // overwrite injected when needed\n      if (option.connector === injected) {\n        // don't show injected if there's no injected provider\n        if (!(window.web3 || window.ethereum)) {\n          if (option.name === 'MetaMask') {\n            return (\n              <Option\n                id={`connect-${key}`}\n                key={key}\n                color={'#E8831D'}\n                header={'Install Metamask'}\n                subheader={null}\n                link={'https://metamask.io/'}\n                icon={MetamaskIcon}\n              />\n            )\n          } else {\n            return null //dont want to return install twice\n          }\n        }\n        // don't return metamask if injected provider isn't metamask\n        else if (option.name === 'MetaMask' && !isMetamask) {\n          return null\n        }\n        // likewise for generic\n        else if (option.name === 'Injected' && isMetamask) {\n          return null\n        }\n      }\n\n      // return rest of options\n      return (\n        !isMobile &&\n        !option.mobileOnly && (\n          <Option\n            id={`connect-${key}`}\n            onClick={() => {\n              option.connector === connector\n                ? setWalletView(WALLET_VIEWS.ACCOUNT)\n                : !option.href && tryActivation(option.connector)\n            }}\n            key={key}\n            active={option.connector === connector}\n            color={option.color}\n            link={option.href}\n            header={option.name}\n            subheader={null} //use option.descriptio to bring back multi-line\n            icon={require('../../assets/images/' + option.iconName)}\n          />\n        )\n      )\n    })\n  }\n\n  function getModalContent() {\n    if (error) {\n      return (\n        <UpperSection>\n          <CloseIcon onClick={toggleWalletModal}>\n            <CloseColor />\n          </CloseIcon>\n          <HeaderRow>{error instanceof UnsupportedChainIdError ? 'Wrong Network' : 'Error connecting'}</HeaderRow>\n          <ContentWrapper>\n            {error instanceof UnsupportedChainIdError ? (\n              <h5>Please connect to the appropriate Ethereum network.</h5>\n            ) : (\n              'Error connecting. Try refreshing the page.'\n            )}\n          </ContentWrapper>\n        </UpperSection>\n      )\n    }\n    if (account && walletView === WALLET_VIEWS.ACCOUNT) {\n      return (\n        <AccountDetails\n          toggleWalletModal={toggleWalletModal}\n          pendingTransactions={pendingTransactions}\n          confirmedTransactions={confirmedTransactions}\n          ENSName={ENSName}\n          openOptions={() => setWalletView(WALLET_VIEWS.OPTIONS)}\n        />\n      )\n    }\n    return (\n      <UpperSection>\n        <CloseIcon onClick={toggleWalletModal}>\n          <CloseColor />\n        </CloseIcon>\n        {walletView !== WALLET_VIEWS.ACCOUNT ? (\n          <HeaderRow color=\"blue\">\n            <HoverText\n              onClick={() => {\n                setPendingError(false)\n                setWalletView(WALLET_VIEWS.ACCOUNT)\n              }}\n            >\n              Back\n            </HoverText>\n          </HeaderRow>\n        ) : (\n          <HeaderRow>\n            <HoverText>Connect to a wallet</HoverText>\n          </HeaderRow>\n        )}\n        <ContentWrapper>\n          {walletView === WALLET_VIEWS.PENDING ? (\n            <PendingView\n              connector={pendingWallet}\n              error={pendingError}\n              setPendingError={setPendingError}\n              tryActivation={tryActivation}\n            />\n          ) : (\n            <OptionGrid>{getOptions()}</OptionGrid>\n          )}\n          {walletView !== WALLET_VIEWS.PENDING && (\n            <Blurb>\n              <span>New to Ethereum? &nbsp;</span>{' '}\n              <ExternalLink href=\"https://ethereum.org/wallets/\">Learn more about wallets</ExternalLink>\n            </Blurb>\n          )}\n        </ContentWrapper>\n      </UpperSection>\n    )\n  }\n\n  return (\n    <Modal isOpen={walletModalOpen} onDismiss={toggleWalletModal} minHeight={null} maxHeight={90}>\n      <Wrapper>{getModalContent()}</Wrapper>\n    </Modal>\n  )\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,UAAU;AAC9B,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,QAAQ,QAAQ,qBAAqB;AAC9C,SAASC,uBAAuB,EAAEC,YAAY,QAAQ,kBAAkB;AACxE,OAAOC,WAAW,MAAM,yBAAyB;AACjD,SAASC,kBAAkB,EAAEC,oBAAoB,QAAQ,+BAA+B;AAExF,OAAOC,KAAK,MAAM,UAAU;AAC5B,OAAOC,cAAc,MAAM,mBAAmB;AAC9C,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,iBAAiB,QAAQ,iBAAiB;AACnD,SAASC,YAAY,QAAQ,aAAa;AAC1C,OAAOC,YAAY,MAAM,kCAAkC;AAAA,SAAAC,cAAA,IAAAC,KAAA;AAE3D,SAASC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,kBAAkB;AAC9D,SAASC,aAAa,QAAQ,4BAA4B;AAC1D,SAASC,sBAAsB,QAAQ,qCAAqC;AAE5E,MAAMC,SAAS,GAAGrB,MAAM,CAACsB,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMC,UAAU,GAAGvB,MAAM,CAACe,KAAK,CAAC;AAChC;AACA,cAAc,CAAC;EAAES;AAAM,CAAC,KAAKA,KAAK,CAACC,KAAK;AACxC;AACA,CAAC;AAED,MAAMC,OAAO,GAAG1B,MAAM,CAACsB,GAAG;AAC1B,IAAI,CAAC;EAAEE;AAAM,CAAC,KAAKA,KAAK,CAACG,gBAAgB;AACzC;AACA;AACA;AACA,CAAC;AAED,MAAMC,SAAS,GAAG5B,MAAM,CAACsB,GAAG;AAC5B,IAAI,CAAC;EAAEE;AAAM,CAAC,KAAKA,KAAK,CAACK,aAAa;AACtC;AACA;AACA,WAAWC,KAAK,IAAKA,KAAK,CAACC,KAAK,KAAK,MAAM,GAAG,CAAC;EAAEP;AAAM,CAAC,KAAKA,KAAK,CAACQ,QAAQ,GAAG,SAAU;AACxF,IAAI,CAAC;EAAER;AAAM,CAAC,KAAKA,KAAK,CAACS,UAAU,CAACC,UAAU;AAC9C;AACA,GAAG;AACH,CAAC;AAED,MAAMC,cAAc,GAAGnC,MAAM,CAACsB,GAAG;AACjC,sBAAsB,CAAC;EAAEE;AAAM,CAAC,KAAKA,KAAK,CAACY,GAAG;AAC9C;AACA;AACA;AACA;AACA,IAAI,CAAC;EAAEZ;AAAM,CAAC,KAAKA,KAAK,CAACS,UAAU,CAACC,UAAU,eAAe;AAC7D,CAAC;AAED,MAAMG,YAAY,GAAGrC,MAAM,CAACsB,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMgB,KAAK,GAAGtC,MAAM,CAACsB,GAAG;AACxB,IAAI,CAAC;EAAEE;AAAM,CAAC,KAAKA,KAAK,CAACK,aAAa;AACtC;AACA;AACA;AACA;AACA,IAAI,CAAC;EAAEL;AAAM,CAAC,KAAKA,KAAK,CAACS,UAAU,CAACC,UAAU;AAC9C;AACA;AACA,GAAG;AACH,CAAC;AAED,MAAMK,UAAU,GAAGvC,MAAM,CAACsB,GAAG;AAC7B;AACA;AACA,IAAI,CAAC;EAAEE;AAAM,CAAC,KAAKA,KAAK,CAACS,UAAU,CAACC,UAAU;AAC9C;AACA;AACA,GAAG;AACH,CAAC;AAED,MAAMM,SAAS,GAAGxC,MAAM,CAACsB,GAAG;AAC5B;AACA;AACA;AACA,CAAC;AAED,MAAMmB,YAAY,GAAG;EACnBC,OAAO,EAAE,SAAS;EAClBC,iBAAiB,EAAE,mBAAmB;EACtCC,OAAO,EAAE,SAAS;EAClBC,OAAO,EAAE;AACX,CAAC;AAED,eAAe,SAASC,WAAWA,CAAC;EAClCC,mBAAmB;EACnBC,qBAAqB;EACrBC;AAKF,CAAC,EAAE;EACD;EACA,MAAM;IAAEC,MAAM;IAAEC,OAAO;IAAEC,SAAS;IAAEC,QAAQ;IAAEC;EAAM,CAAC,GAAGnD,YAAY,CAAC,CAAC;EAEtE,MAAM,CAACoD,UAAU,EAAEC,aAAa,CAAC,GAAG3D,QAAQ,CAAC4C,YAAY,CAACG,OAAO,CAAC;EAElE,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAG7D,QAAQ,CAAC,CAAC;EAEpD,MAAM,CAAC8D,YAAY,EAAEC,eAAe,CAAC,GAAG/D,QAAQ,CAAU,CAAC;EAE3D,MAAMgE,eAAe,GAAGxD,kBAAkB,CAAC,CAAC;EAC5C,MAAMyD,iBAAiB,GAAGxD,oBAAoB,CAAC,CAAC;EAEhD,MAAMyD,eAAe,GAAG3D,WAAW,CAAC+C,OAAO,CAAC;;EAE5C;EACArD,SAAS,CAAC,MAAM;IACd,IAAIqD,OAAO,IAAI,CAACY,eAAe,IAAIF,eAAe,EAAE;MAClDC,iBAAiB,CAAC,CAAC;IACrB;EACF,CAAC,EAAE,CAACX,OAAO,EAAEY,eAAe,EAAED,iBAAiB,EAAED,eAAe,CAAC,CAAC;;EAElE;EACA/D,SAAS,CAAC,MAAM;IACd,IAAI+D,eAAe,EAAE;MACnBD,eAAe,CAAC,KAAK,CAAC;MACtBJ,aAAa,CAACf,YAAY,CAACG,OAAO,CAAC;IACrC;EACF,CAAC,EAAE,CAACiB,eAAe,CAAC,CAAC;;EAErB;EACA,MAAMG,cAAc,GAAG5D,WAAW,CAAC8C,MAAM,CAAC;EAC1C,MAAMe,iBAAiB,GAAG7D,WAAW,CAACgD,SAAS,CAAC;EAChDtD,SAAS,CAAC,MAAM;IACd,IAAI+D,eAAe,KAAMX,MAAM,IAAI,CAACc,cAAc,IAAMZ,SAAS,IAAIA,SAAS,KAAKa,iBAAiB,IAAI,CAACX,KAAM,CAAC,EAAE;MAChHE,aAAa,CAACf,YAAY,CAACG,OAAO,CAAC;IACrC;EACF,CAAC,EAAE,CAACY,aAAa,EAAEN,MAAM,EAAEI,KAAK,EAAEF,SAAS,EAAES,eAAe,EAAEG,cAAc,EAAEC,iBAAiB,CAAC,CAAC;EAEjG,MAAMC,aAAa,GAAG,MAAMd,SAAS,IAAI;IAAA,IAAAe,qBAAA,EAAAC,sBAAA;IACvC,IAAIC,IAAI,GAAG,EAAE;IACbC,MAAM,CAACC,IAAI,CAAC5D,iBAAiB,CAAC,CAAC6D,GAAG,CAACC,GAAG,IAAI;MACxC,IAAIrB,SAAS,KAAKzC,iBAAiB,CAAC8D,GAAG,CAAC,CAACrB,SAAS,EAAE;QAClD,OAAQiB,IAAI,GAAG1D,iBAAiB,CAAC8D,GAAG,CAAC,CAACJ,IAAI;MAC5C;MACA,OAAO,IAAI;IACb,CAAC,CAAC;IACF;IACAtE,OAAO,CAAC2E,KAAK,CAAC;MACZC,QAAQ,EAAE,QAAQ;MAClBC,MAAM,EAAE,eAAe;MACvBC,KAAK,EAAER;IACT,CAAC,CAAC;IACFX,gBAAgB,CAACN,SAAS,CAAC,EAAC;IAC5BI,aAAa,CAACf,YAAY,CAACI,OAAO,CAAC;;IAEnC;IACA,IAAIO,SAAS,YAAYhC,sBAAsB,MAAA+C,qBAAA,GAAIf,SAAS,CAAC0B,qBAAqB,cAAAX,qBAAA,wBAAAC,sBAAA,GAA/BD,qBAAA,CAAiCY,EAAE,cAAAX,sBAAA,uBAAnCA,sBAAA,CAAqCY,GAAG,GAAE;MAC3F5B,SAAS,CAAC0B,qBAAqB,GAAGG,SAAS;IAC7C;IAEA5B,QAAQ,CAACD,SAAS,EAAE6B,SAAS,EAAE,IAAI,CAAC,CAACC,KAAK,CAAC5B,KAAK,IAAI;MAClD,IAAIA,KAAK,YAAYpD,uBAAuB,EAAE;QAC5CmD,QAAQ,CAACD,SAAS,CAAC,EAAC;MACtB,CAAC,MAAM;QACLQ,eAAe,CAAC,IAAI,CAAC;MACvB;IACF,CAAC,CAAC;EACJ,CAAC;;EAED;EACA9D,SAAS,CAAC,MAAM;IACdmB,SAAS,CAACkE,EAAE,CAAChE,aAAa,EAAE,MAAM;MAChC2C,iBAAiB,CAAC,CAAC;IACrB,CAAC,CAAC;EACJ,CAAC,EAAE,CAACA,iBAAiB,CAAC,CAAC;;EAEvB;EACA,SAASsB,UAAUA,CAAA,EAAG;IACpB,MAAMC,UAAU,GAAGC,MAAM,CAACC,QAAQ,IAAID,MAAM,CAACC,QAAQ,CAACC,UAAU;IAChE,OAAOlB,MAAM,CAACC,IAAI,CAAC5D,iBAAiB,CAAC,CAAC6D,GAAG,CAACC,GAAG,IAAI;MAC/C,MAAMgB,MAAM,GAAG9E,iBAAiB,CAAC8D,GAAG,CAAC;MACrC;MACA,IAAIxE,QAAQ,EAAE;QACZ;QACA,IAAIwF,MAAM,CAACrC,SAAS,KAAKlC,MAAM,EAAE;UAC/B,OAAO,IAAI;QACb;QAEA,IAAI,CAACoE,MAAM,CAACI,IAAI,IAAI,CAACJ,MAAM,CAACC,QAAQ,IAAIE,MAAM,CAACE,MAAM,EAAE;UACrD,oBACE/F,KAAA,CAAAgG,aAAA,CAAClF,MAAM;YACLmF,OAAO,EAAEA,CAAA,KAAM;cACbJ,MAAM,CAACrC,SAAS,KAAKA,SAAS,IAAI,CAACqC,MAAM,CAACK,IAAI,IAAI5B,aAAa,CAACuB,MAAM,CAACrC,SAAS,CAAC;YACnF,CAAE;YACF2C,EAAE,EAAE,WAAWtB,GAAG,EAAG;YACrBA,GAAG,EAAEA,GAAI;YACTvB,MAAM,EAAEuC,MAAM,CAACrC,SAAS,IAAIqC,MAAM,CAACrC,SAAS,KAAKA,SAAU;YAC3DrB,KAAK,EAAE0D,MAAM,CAAC1D,KAAM;YACpBiE,IAAI,EAAEP,MAAM,CAACK,IAAK;YAClBG,MAAM,EAAER,MAAM,CAACpB,IAAK;YACpB6B,SAAS,EAAE,IAAK;YAChBC,IAAI,EAAEC,OAAO,CAAC,sBAAsB,GAAGX,MAAM,CAACY,QAAQ,CAAE;YAAAC,MAAA;YAAAC,QAAA;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAA,CACzD,CAAC;QAEN;QACA,OAAO,IAAI;MACb;;MAEA;MACA,IAAIlB,MAAM,CAACrC,SAAS,KAAKpC,QAAQ,EAAE;QACjC;QACA,IAAI,EAAEsE,MAAM,CAACI,IAAI,IAAIJ,MAAM,CAACC,QAAQ,CAAC,EAAE;UACrC,IAAIE,MAAM,CAACpB,IAAI,KAAK,UAAU,EAAE;YAC9B,oBACEzE,KAAA,CAAAgG,aAAA,CAAClF,MAAM;cACLqF,EAAE,EAAE,WAAWtB,GAAG,EAAG;cACrBA,GAAG,EAAEA,GAAI;cACT1C,KAAK,EAAE,SAAU;cACjBkE,MAAM,EAAE,kBAAmB;cAC3BC,SAAS,EAAE,IAAK;cAChBF,IAAI,EAAE,sBAAuB;cAC7BG,IAAI,EAAEtF,YAAa;cAAAyF,MAAA;cAAAC,QAAA;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YAAA,CACpB,CAAC;UAEN,CAAC,MAAM;YACL,OAAO,IAAI,EAAC;UACd;QACF;QACA;QAAA,KACK,IAAIlB,MAAM,CAACpB,IAAI,KAAK,UAAU,IAAI,CAACgB,UAAU,EAAE;UAClD,OAAO,IAAI;QACb;QACA;QAAA,KACK,IAAII,MAAM,CAACpB,IAAI,KAAK,UAAU,IAAIgB,UAAU,EAAE;UACjD,OAAO,IAAI;QACb;MACF;;MAEA;MACA,OACE,CAACpF,QAAQ,IACT,CAACwF,MAAM,CAACmB,UAAU,iBAChBhH,KAAA,CAAAgG,aAAA,CAAClF,MAAM;QACLqF,EAAE,EAAE,WAAWtB,GAAG,EAAG;QACrBoB,OAAO,EAAEA,CAAA,KAAM;UACbJ,MAAM,CAACrC,SAAS,KAAKA,SAAS,GAC1BI,aAAa,CAACf,YAAY,CAACG,OAAO,CAAC,GACnC,CAAC6C,MAAM,CAACK,IAAI,IAAI5B,aAAa,CAACuB,MAAM,CAACrC,SAAS,CAAC;QACrD,CAAE;QACFqB,GAAG,EAAEA,GAAI;QACTvB,MAAM,EAAEuC,MAAM,CAACrC,SAAS,KAAKA,SAAU;QACvCrB,KAAK,EAAE0D,MAAM,CAAC1D,KAAM;QACpBiE,IAAI,EAAEP,MAAM,CAACK,IAAK;QAClBG,MAAM,EAAER,MAAM,CAACpB,IAAK;QACpB6B,SAAS,EAAE,IAAK,CAAC;QAAA;QACjBC,IAAI,EAAEC,OAAO,CAAC,sBAAsB,GAAGX,MAAM,CAACY,QAAQ,CAAE;QAAAC,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CACzD,CACF;IAEL,CAAC,CAAC;EACJ;EAEA,SAASE,eAAeA,CAAA,EAAG;IACzB,IAAIvD,KAAK,EAAE;MACT,oBACE1D,KAAA,CAAAgG,aAAA,CAACvD,YAAY;QAAAiE,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBACX/G,KAAA,CAAAgG,aAAA,CAACvE,SAAS;QAACwE,OAAO,EAAE/B,iBAAkB;QAAAwC,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBACpC/G,KAAA,CAAAgG,aAAA,CAACrE,UAAU;QAAA+E,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAAE,CACJ,CAAC,eACZ/G,KAAA,CAAAgG,aAAA,CAAChE,SAAS;QAAA0E,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GAAErD,KAAK,YAAYpD,uBAAuB,GAAG,eAAe,GAAG,kBAA8B,CAAC,eACxGN,KAAA,CAAAgG,aAAA,CAACzD,cAAc;QAAAmE,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GACZrD,KAAK,YAAYpD,uBAAuB,gBACvCN,KAAA,CAAAgG,aAAA;QAAAU,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GAAI,qDAAuD,CAAC,GAE5D,4CAEY,CACJ,CAAC;IAEnB;IACA,IAAIxD,OAAO,IAAII,UAAU,KAAKd,YAAY,CAACG,OAAO,EAAE;MAClD,oBACEhD,KAAA,CAAAgG,aAAA,CAACpF,cAAc;QACbsD,iBAAiB,EAAEA,iBAAkB;QACrCf,mBAAmB,EAAEA,mBAAoB;QACzCC,qBAAqB,EAAEA,qBAAsB;QAC7CC,OAAO,EAAEA,OAAQ;QACjB6D,WAAW,EAAEA,CAAA,KAAMtD,aAAa,CAACf,YAAY,CAACC,OAAO,CAAE;QAAA4D,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CACxD,CAAC;IAEN;IACA,oBACE/G,KAAA,CAAAgG,aAAA,CAACvD,YAAY;MAAAiE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACX/G,KAAA,CAAAgG,aAAA,CAACvE,SAAS;MAACwE,OAAO,EAAE/B,iBAAkB;MAAAwC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACpC/G,KAAA,CAAAgG,aAAA,CAACrE,UAAU;MAAA+E,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CACJ,CAAC,EACXpD,UAAU,KAAKd,YAAY,CAACG,OAAO,gBAClChD,KAAA,CAAAgG,aAAA,CAAChE,SAAS;MAACG,KAAK,EAAC,MAAM;MAAAuE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACrB/G,KAAA,CAAAgG,aAAA,CAACpD,SAAS;MACRqD,OAAO,EAAEA,CAAA,KAAM;QACbjC,eAAe,CAAC,KAAK,CAAC;QACtBJ,aAAa,CAACf,YAAY,CAACG,OAAO,CAAC;MACrC,CAAE;MAAA0D,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACH,MAEU,CACF,CAAC,gBAEZ/G,KAAA,CAAAgG,aAAA,CAAChE,SAAS;MAAA0E,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACR/G,KAAA,CAAAgG,aAAA,CAACpD,SAAS;MAAA8D,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAC,qBAA8B,CAChC,CACZ,eACD/G,KAAA,CAAAgG,aAAA,CAACzD,cAAc;MAAAmE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACZpD,UAAU,KAAKd,YAAY,CAACI,OAAO,gBAClCjD,KAAA,CAAAgG,aAAA,CAACnF,WAAW;MACV2C,SAAS,EAAEK,aAAc;MACzBH,KAAK,EAAEK,YAAa;MACpBC,eAAe,EAAEA,eAAgB;MACjCM,aAAa,EAAEA,aAAc;MAAAoC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAC9B,CAAC,gBAEF/G,KAAA,CAAAgG,aAAA,CAACrD,UAAU;MAAA+D,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAEvB,UAAU,CAAC,CAAc,CACvC,EACA7B,UAAU,KAAKd,YAAY,CAACI,OAAO,iBAClCjD,KAAA,CAAAgG,aAAA,CAACtD,KAAK;MAAAgE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACJ/G,KAAA,CAAAgG,aAAA;MAAAU,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAM,uBAA6B,CAAC,EAAC,GAAG,eACxC/G,KAAA,CAAAgG,aAAA,CAAChF,YAAY;MAACkF,IAAI,EAAC,+BAA+B;MAAAQ,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAC,0BAAsC,CACpF,CAEK,CACJ,CAAC;EAEnB;EAEA,oBACE/G,KAAA,CAAAgG,aAAA,CAACrF,KAAK;IAACwG,MAAM,EAAElD,eAAgB;IAACmD,SAAS,EAAElD,iBAAkB;IAACmD,SAAS,EAAE,IAAK;IAACC,SAAS,EAAE,EAAG;IAAAZ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3F/G,KAAA,CAAAgG,aAAA,CAAClE,OAAO;IAAA4E,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEE,eAAe,CAAC,CAAW,CAChC,CAAC;AAEZ","ignoreList":[]},"metadata":{},"sourceType":"module"}