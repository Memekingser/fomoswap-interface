{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/synallage/Desktop/fomoswap-uni/interface-73580de922ce3ff642430d71aa24f5c053e6dd4d/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject2(){const data=_taggedTemplateLiteral([\"\\n  color: \",\";\\n\"]);_templateObject2=function(){return data;};return data;}function _templateObject(){const data=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  height: 20rem;\\n\"]);_templateObject=function(){return data;};return data;}import React,{useState,useEffect}from'react';import{useWeb3React}from'@web3-react/core';import styled from'styled-components';import{useTranslation}from'react-i18next';import{network}from'../../connectors';import{useEagerConnect,useInactiveListener}from'../../hooks';import{NetworkContextName}from'../../constants';import Loader from'../Loader';const MessageWrapper=styled.div(_templateObject());const Message=styled.h2(_templateObject2(),_ref=>{let{theme}=_ref;return theme.secondary1;});export default function Web3ReactManager(_ref2){let{children}=_ref2;const{t}=useTranslation();const{active}=useWeb3React();const{active:networkActive,error:networkError,activate:activateNetwork}=useWeb3React(NetworkContextName);// try to eagerly connect to an injected provider, if it exists and has granted access already\nconst triedEager=useEagerConnect();// after eagerly trying injected, if the network connect ever isn't active or in an error state, activate itd\nuseEffect(()=>{if(triedEager&&!networkActive&&!networkError&&!active){activateNetwork(network);}},[triedEager,networkActive,networkError,activateNetwork,active]);// when there's no account connected, react to logins (broadly speaking) on the injected provider, if it exists\nuseInactiveListener(!triedEager);// handle delayed loader state\nconst[showLoader,setShowLoader]=useState(false);useEffect(()=>{const timeout=setTimeout(()=>{setShowLoader(true);},600);return()=>{clearTimeout(timeout);};},[]);// on page load, do nothing until we've tried to connect to the injected connector\nif(!triedEager){return null;}// if the account context isn't active, and there's an error on the network context, it's an irrecoverable error\nif(!active&&networkError){return/*#__PURE__*/React.createElement(MessageWrapper,null,/*#__PURE__*/React.createElement(Message,null,t('unknownError')));}// if neither context is active, spin\nif(!active&&!networkActive){return showLoader?/*#__PURE__*/React.createElement(MessageWrapper,null,/*#__PURE__*/React.createElement(Loader,null)):null;}return children;}","map":{"version":3,"names":["React","useState","useEffect","useWeb3React","styled","useTranslation","network","useEagerConnect","useInactiveListener","NetworkContextName","Loader","MessageWrapper","div","_templateObject","Message","h2","_templateObject2","_ref","theme","secondary1","Web3ReactManager","_ref2","children","t","active","networkActive","error","networkError","activate","activateNetwork","triedEager","showLoader","setShowLoader","timeout","setTimeout","clearTimeout","createElement"],"sources":["/Users/synallage/Desktop/fomoswap-uni/interface-73580de922ce3ff642430d71aa24f5c053e6dd4d/src/components/Web3ReactManager/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { useTranslation } from 'react-i18next'\n\nimport { network } from '../../connectors'\nimport { useEagerConnect, useInactiveListener } from '../../hooks'\nimport { NetworkContextName } from '../../constants'\nimport Loader from '../Loader'\n\nconst MessageWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 20rem;\n`\n\nconst Message = styled.h2`\n  color: ${({ theme }) => theme.secondary1};\n`\n\nexport default function Web3ReactManager({ children }) {\n  const { t } = useTranslation()\n  const { active } = useWeb3React()\n  const { active: networkActive, error: networkError, activate: activateNetwork } = useWeb3React(NetworkContextName)\n\n  // try to eagerly connect to an injected provider, if it exists and has granted access already\n  const triedEager = useEagerConnect()\n\n  // after eagerly trying injected, if the network connect ever isn't active or in an error state, activate itd\n  useEffect(() => {\n    if (triedEager && !networkActive && !networkError && !active) {\n      activateNetwork(network)\n    }\n  }, [triedEager, networkActive, networkError, activateNetwork, active])\n\n  // when there's no account connected, react to logins (broadly speaking) on the injected provider, if it exists\n  useInactiveListener(!triedEager)\n\n  // handle delayed loader state\n  const [showLoader, setShowLoader] = useState(false)\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setShowLoader(true)\n    }, 600)\n\n    return () => {\n      clearTimeout(timeout)\n    }\n  }, [])\n\n  // on page load, do nothing until we've tried to connect to the injected connector\n  if (!triedEager) {\n    return null\n  }\n\n  // if the account context isn't active, and there's an error on the network context, it's an irrecoverable error\n  if (!active && networkError) {\n    return (\n      <MessageWrapper>\n        <Message>{t('unknownError')}</Message>\n      </MessageWrapper>\n    )\n  }\n\n  // if neither context is active, spin\n  if (!active && !networkActive) {\n    return showLoader ? (\n      <MessageWrapper>\n        <Loader />\n      </MessageWrapper>\n    ) : null\n  }\n\n  return children\n}\n"],"mappings":"8jBAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,YAAY,KAAQ,kBAAkB,CAC/C,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CACtC,OAASC,cAAc,KAAQ,eAAe,CAE9C,OAASC,OAAO,KAAQ,kBAAkB,CAC1C,OAASC,eAAe,CAAEC,mBAAmB,KAAQ,aAAa,CAClE,OAASC,kBAAkB,KAAQ,iBAAiB,CACpD,MAAO,CAAAC,MAAM,KAAM,WAAW,CAE9B,KAAM,CAAAC,cAAc,CAAGP,MAAM,CAACQ,GAAG,CAAAC,eAAA,GAKhC,CAED,KAAM,CAAAC,OAAO,CAAGV,MAAM,CAACW,EAAE,CAAAC,gBAAA,GACdC,IAAA,MAAC,CAAEC,KAAM,CAAC,CAAAD,IAAA,OAAK,CAAAC,KAAK,CAACC,UAAU,GACzC,CAED,cAAe,SAAS,CAAAC,gBAAgBA,CAAAC,KAAA,CAAe,IAAd,CAAEC,QAAS,CAAC,CAAAD,KAAA,CACnD,KAAM,CAAEE,CAAE,CAAC,CAAGlB,cAAc,CAAC,CAAC,CAC9B,KAAM,CAAEmB,MAAO,CAAC,CAAGrB,YAAY,CAAC,CAAC,CACjC,KAAM,CAAEqB,MAAM,CAAEC,aAAa,CAAEC,KAAK,CAAEC,YAAY,CAAEC,QAAQ,CAAEC,eAAgB,CAAC,CAAG1B,YAAY,CAACM,kBAAkB,CAAC,CAElH;AACA,KAAM,CAAAqB,UAAU,CAAGvB,eAAe,CAAC,CAAC,CAEpC;AACAL,SAAS,CAAC,IAAM,CACd,GAAI4B,UAAU,EAAI,CAACL,aAAa,EAAI,CAACE,YAAY,EAAI,CAACH,MAAM,CAAE,CAC5DK,eAAe,CAACvB,OAAO,CAAC,CAC1B,CACF,CAAC,CAAE,CAACwB,UAAU,CAAEL,aAAa,CAAEE,YAAY,CAAEE,eAAe,CAAEL,MAAM,CAAC,CAAC,CAEtE;AACAhB,mBAAmB,CAAC,CAACsB,UAAU,CAAC,CAEhC;AACA,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAG/B,QAAQ,CAAC,KAAK,CAAC,CACnDC,SAAS,CAAC,IAAM,CACd,KAAM,CAAA+B,OAAO,CAAGC,UAAU,CAAC,IAAM,CAC/BF,aAAa,CAAC,IAAI,CAAC,CACrB,CAAC,CAAE,GAAG,CAAC,CAEP,MAAO,IAAM,CACXG,YAAY,CAACF,OAAO,CAAC,CACvB,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,GAAI,CAACH,UAAU,CAAE,CACf,MAAO,KAAI,CACb,CAEA;AACA,GAAI,CAACN,MAAM,EAAIG,YAAY,CAAE,CAC3B,mBACE3B,KAAA,CAAAoC,aAAA,CAACzB,cAAc,mBACbX,KAAA,CAAAoC,aAAA,CAACtB,OAAO,MAAES,CAAC,CAAC,cAAc,CAAW,CACvB,CAAC,CAErB,CAEA;AACA,GAAI,CAACC,MAAM,EAAI,CAACC,aAAa,CAAE,CAC7B,MAAO,CAAAM,UAAU,cACf/B,KAAA,CAAAoC,aAAA,CAACzB,cAAc,mBACbX,KAAA,CAAAoC,aAAA,CAAC1B,MAAM,KAAE,CACK,CAAC,CACf,IAAI,CACV,CAEA,MAAO,CAAAY,QAAQ,CACjB","ignoreList":[]},"metadata":{},"sourceType":"module"}