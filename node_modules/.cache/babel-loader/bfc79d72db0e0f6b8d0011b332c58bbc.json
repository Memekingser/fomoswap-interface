{"ast":null,"code":"import{JSBI}from'fomoswap-story';import React,{useCallback,useContext,useEffect,useState}from'react';import{ArrowDown}from'react-feather';import ReactGA from'react-ga';import{Text}from'rebass';import{ThemeContext}from'styled-components';import AddressInputPanel from'../../components/AddressInputPanel';import{ButtonError,ButtonLight,ButtonPrimary}from'../../components/Button';import Card,{GreyCard}from'../../components/Card';import{AutoColumn}from'../../components/Column';import ConfirmSwapModal from'../../components/swap/ConfirmSwapModal';import CurrencyInputPanel from'../../components/CurrencyInputPanel';import{SwapPoolTabs}from'../../components/NavigationTabs';import{AutoRow,RowBetween}from'../../components/Row';import AdvancedSwapDetailsDropdown from'../../components/swap/AdvancedSwapDetailsDropdown';import BetterTradeLink from'../../components/swap/BetterTradeLink';import confirmPriceImpactWithoutFee from'../../components/swap/confirmPriceImpactWithoutFee';import{ArrowWrapper,BottomGrouping,Dots,SwapCallbackError,Wrapper}from'../../components/swap/styleds';import TradePrice from'../../components/swap/TradePrice';import{TokenWarningCards}from'../../components/TokenWarningCard';import{BETTER_TRADE_LINK_THRESHOLD,INITIAL_ALLOWED_SLIPPAGE}from'../../constants';import{getTradeVersion,isTradeBetter}from'../../data/V1';import{useActiveWeb3React}from'../../hooks';import{ApprovalState,useApproveCallbackFromTrade}from'../../hooks/useApproveCallback';import useENSAddress from'../../hooks/useENSAddress';import{useSwapCallback}from'../../hooks/useSwapCallback';import useToggledVersion,{Version}from'../../hooks/useToggledVersion';import useWrapCallback,{WrapType}from'../../hooks/useWrapCallback';import{useToggleSettingsMenu,useWalletModalToggle}from'../../state/application/hooks';import{Field}from'../../state/swap/actions';import{useDefaultsFromURLSearch,useDerivedSwapInfo,useSwapActionHandlers,useSwapState}from'../../state/swap/hooks';import{useExpertModeManager,useTokenWarningDismissal,useUserDeadline,useUserSlippageTolerance}from'../../state/user/hooks';import{LinkStyledButton,TYPE,ExternalLink}from'../../theme';import{maxAmountSpend}from'../../utils/maxAmountSpend';import{computeTradePriceBreakdown,warningSeverity}from'../../utils/prices';import AppBody from'../AppBody';import{ClickableText}from'../Pool/styleds';export default function Swap(){var _parsedAmounts$indepe,_parsedAmounts$indepe2,_parsedAmounts$depend,_parsedAmounts$depend2,_parsedAmounts$indepe3,_parsedAmounts$Field$,_currencies$Field$INP;useDefaultsFromURLSearch();const{account,chainId}=useActiveWeb3React();const theme=useContext(ThemeContext);// toggle wallet when disconnected\nconst toggleWalletModal=useWalletModalToggle();// for expert mode\nconst toggleSettings=useToggleSettingsMenu();const[isExpertMode]=useExpertModeManager();// get custom setting values for user\nconst[deadline]=useUserDeadline();const[allowedSlippage]=useUserSlippageTolerance();// swap state\nconst{independentField,typedValue,recipient}=useSwapState();const{v1Trade,v2Trade,currencyBalances,parsedAmount,currencies,inputError:swapInputError}=useDerivedSwapInfo();const{wrapType,execute:onWrap,inputError:wrapInputError}=useWrapCallback(currencies[Field.INPUT],currencies[Field.OUTPUT],typedValue);const showWrap=wrapType!==WrapType.NOT_APPLICABLE;const{address:recipientAddress}=useENSAddress(recipient);const toggledVersion=useToggledVersion();const trade=showWrap?undefined:{[Version.v1]:v1Trade,[Version.v2]:v2Trade}[toggledVersion];const betterTradeLinkVersion=toggledVersion===Version.v2&&isTradeBetter(v2Trade,v1Trade,BETTER_TRADE_LINK_THRESHOLD)?Version.v1:toggledVersion===Version.v1&&isTradeBetter(v1Trade,v2Trade)?Version.v2:undefined;const parsedAmounts=showWrap?{[Field.INPUT]:parsedAmount,[Field.OUTPUT]:parsedAmount}:{[Field.INPUT]:independentField===Field.INPUT?parsedAmount:trade===null||trade===void 0?void 0:trade.inputAmount,[Field.OUTPUT]:independentField===Field.OUTPUT?parsedAmount:trade===null||trade===void 0?void 0:trade.outputAmount};const{onSwitchTokens,onCurrencySelection,onUserInput,onChangeRecipient}=useSwapActionHandlers();const isValid=!swapInputError;const dependentField=independentField===Field.INPUT?Field.OUTPUT:Field.INPUT;const handleTypeInput=useCallback(value=>{onUserInput(Field.INPUT,value);},[onUserInput]);const handleTypeOutput=useCallback(value=>{onUserInput(Field.OUTPUT,value);},[onUserInput]);// modal and loading\nconst[{showConfirm,tradeToConfirm,swapErrorMessage,attemptingTxn,txHash},setSwapState]=useState({showConfirm:false,tradeToConfirm:undefined,attemptingTxn:false,swapErrorMessage:undefined,txHash:undefined});const formattedAmounts={[independentField]:typedValue,[dependentField]:showWrap?(_parsedAmounts$indepe=(_parsedAmounts$indepe2=parsedAmounts[independentField])===null||_parsedAmounts$indepe2===void 0?void 0:_parsedAmounts$indepe2.toExact())!==null&&_parsedAmounts$indepe!==void 0?_parsedAmounts$indepe:'':(_parsedAmounts$depend=(_parsedAmounts$depend2=parsedAmounts[dependentField])===null||_parsedAmounts$depend2===void 0?void 0:_parsedAmounts$depend2.toSignificant(6))!==null&&_parsedAmounts$depend!==void 0?_parsedAmounts$depend:''};const route=trade===null||trade===void 0?void 0:trade.route;const userHasSpecifiedInputOutput=Boolean(currencies[Field.INPUT]&&currencies[Field.OUTPUT]&&((_parsedAmounts$indepe3=parsedAmounts[independentField])===null||_parsedAmounts$indepe3===void 0?void 0:_parsedAmounts$indepe3.greaterThan(JSBI.BigInt(0))));const noRoute=!route;// check whether the user has approved the router on the input token\nconst[approval,approveCallback]=useApproveCallbackFromTrade(trade,allowedSlippage);// check if user has gone through approval process, used to show two step buttons, reset on token change\nconst[approvalSubmitted,setApprovalSubmitted]=useState(false);// mark when a user has submitted an approval, reset onTokenSelection for input field\nuseEffect(()=>{if(approval===ApprovalState.PENDING){setApprovalSubmitted(true);}},[approval,approvalSubmitted]);const maxAmountInput=maxAmountSpend(currencyBalances[Field.INPUT]);const atMaxAmountInput=Boolean(maxAmountInput&&((_parsedAmounts$Field$=parsedAmounts[Field.INPUT])===null||_parsedAmounts$Field$===void 0?void 0:_parsedAmounts$Field$.equalTo(maxAmountInput)));// the callback to execute the swap\nconst{callback:swapCallback,error:swapCallbackError}=useSwapCallback(trade,allowedSlippage,deadline,recipient);const{priceImpactWithoutFee}=computeTradePriceBreakdown(trade);const handleSwap=useCallback(()=>{if(priceImpactWithoutFee&&!confirmPriceImpactWithoutFee(priceImpactWithoutFee)){return;}if(!swapCallback){return;}setSwapState({attemptingTxn:true,tradeToConfirm,showConfirm,swapErrorMessage:undefined,txHash:undefined});swapCallback().then(hash=>{var _trade$inputAmount,_trade$inputAmount$cu,_trade$outputAmount,_trade$outputAmount$c;setSwapState({attemptingTxn:false,tradeToConfirm,showConfirm,swapErrorMessage:undefined,txHash:hash});ReactGA.event({category:'Swap',action:recipient===null?'Swap w/o Send':(recipientAddress!==null&&recipientAddress!==void 0?recipientAddress:recipient)===account?'Swap w/o Send + recipient':'Swap w/ Send',label:[trade===null||trade===void 0?void 0:(_trade$inputAmount=trade.inputAmount)===null||_trade$inputAmount===void 0?void 0:(_trade$inputAmount$cu=_trade$inputAmount.currency)===null||_trade$inputAmount$cu===void 0?void 0:_trade$inputAmount$cu.symbol,trade===null||trade===void 0?void 0:(_trade$outputAmount=trade.outputAmount)===null||_trade$outputAmount===void 0?void 0:(_trade$outputAmount$c=_trade$outputAmount.currency)===null||_trade$outputAmount$c===void 0?void 0:_trade$outputAmount$c.symbol,getTradeVersion(trade)].join('/')});}).catch(error=>{setSwapState({attemptingTxn:false,tradeToConfirm,showConfirm,swapErrorMessage:error.message,txHash:undefined});});},[tradeToConfirm,account,priceImpactWithoutFee,recipient,recipientAddress,showConfirm,swapCallback,trade]);// errors\nconst[showInverted,setShowInverted]=useState(false);// warnings on slippage\nconst priceImpactSeverity=warningSeverity(priceImpactWithoutFee);// show approve flow when: no error on inputs, not approved or pending, or approved in current session\n// never show if price impact is above threshold in non expert mode\nconst showApproveFlow=!swapInputError&&(approval===ApprovalState.NOT_APPROVED||approval===ApprovalState.PENDING||approvalSubmitted&&approval===ApprovalState.APPROVED)&&!(priceImpactSeverity>3&&!isExpertMode);const[dismissedToken0]=useTokenWarningDismissal(chainId,currencies[Field.INPUT]);const[dismissedToken1]=useTokenWarningDismissal(chainId,currencies[Field.OUTPUT]);const showWarning=!dismissedToken0&&!!currencies[Field.INPUT]||!dismissedToken1&&!!currencies[Field.OUTPUT];const handleConfirmDismiss=useCallback(()=>{setSwapState({showConfirm:false,tradeToConfirm,attemptingTxn,swapErrorMessage,txHash});// if there was a tx hash, we want to clear the input\nif(txHash){onUserInput(Field.INPUT,'');}},[attemptingTxn,onUserInput,swapErrorMessage,tradeToConfirm,txHash]);const handleAcceptChanges=useCallback(()=>{setSwapState({tradeToConfirm:trade,swapErrorMessage,txHash,attemptingTxn,showConfirm});},[attemptingTxn,showConfirm,swapErrorMessage,trade,txHash]);return/*#__PURE__*/React.createElement(React.Fragment,null,showWarning&&/*#__PURE__*/React.createElement(TokenWarningCards,{currencies:currencies}),/*#__PURE__*/React.createElement(AppBody,{disabled:showWarning},/*#__PURE__*/React.createElement(SwapPoolTabs,{active:'swap'}),/*#__PURE__*/React.createElement(Wrapper,{id:\"swap-page\"},/*#__PURE__*/React.createElement(ConfirmSwapModal,{isOpen:showConfirm,trade:trade,originalTrade:tradeToConfirm,onAcceptChanges:handleAcceptChanges,attemptingTxn:attemptingTxn,txHash:txHash,recipient:recipient,allowedSlippage:allowedSlippage,onConfirm:handleSwap,swapErrorMessage:swapErrorMessage,onDismiss:handleConfirmDismiss}),/*#__PURE__*/React.createElement(AutoColumn,{gap:'md'},/*#__PURE__*/React.createElement(CurrencyInputPanel,{label:independentField===Field.OUTPUT&&!showWrap?'From (estimated)':'From',value:formattedAmounts[Field.INPUT],showMaxButton:!atMaxAmountInput,currency:currencies[Field.INPUT],onUserInput:handleTypeInput,onMax:()=>{maxAmountInput&&onUserInput(Field.INPUT,maxAmountInput.toExact());},onCurrencySelect:currency=>{setApprovalSubmitted(false);// reset 2 step UI for approvals\nonCurrencySelection(Field.INPUT,currency);},otherCurrency:currencies[Field.OUTPUT],id:\"swap-currency-input\"}),/*#__PURE__*/React.createElement(AutoColumn,{justify:\"space-between\"},/*#__PURE__*/React.createElement(AutoRow,{justify:\"space-between\",style:{padding:'0 1rem'}},/*#__PURE__*/React.createElement(ArrowWrapper,{clickable:true},/*#__PURE__*/React.createElement(ArrowDown,{size:\"16\",onClick:()=>{setApprovalSubmitted(false);// reset 2 step UI for approvals\nonSwitchTokens();},color:currencies[Field.INPUT]&&currencies[Field.OUTPUT]?theme.primary1:theme.text2})),recipient===null&&!showWrap&&isExpertMode?/*#__PURE__*/React.createElement(LinkStyledButton,{id:\"add-recipient-button\",onClick:()=>onChangeRecipient('')},\"+ Add a send (optional)\"):null)),/*#__PURE__*/React.createElement(CurrencyInputPanel,{value:formattedAmounts[Field.OUTPUT],onUserInput:handleTypeOutput,label:independentField===Field.INPUT&&!showWrap?'To (estimated)':'To',showMaxButton:false,currency:currencies[Field.OUTPUT],onCurrencySelect:address=>onCurrencySelection(Field.OUTPUT,address),otherCurrency:currencies[Field.INPUT],id:\"swap-currency-output\"}),recipient!==null&&!showWrap?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(AutoRow,{justify:\"space-between\",style:{padding:'0 1rem'}},/*#__PURE__*/React.createElement(ArrowWrapper,{clickable:false},/*#__PURE__*/React.createElement(ArrowDown,{size:\"16\",color:theme.text2})),/*#__PURE__*/React.createElement(LinkStyledButton,{id:\"remove-recipient-button\",onClick:()=>onChangeRecipient(null)},\"- Remove send\")),/*#__PURE__*/React.createElement(AddressInputPanel,{id:\"recipient\",value:recipient,onChange:onChangeRecipient})):null,showWrap?null:/*#__PURE__*/React.createElement(Card,{padding:'.25rem .75rem 0 .75rem',borderRadius:'20px'},/*#__PURE__*/React.createElement(AutoColumn,{gap:\"4px\"},/*#__PURE__*/React.createElement(RowBetween,{align:\"center\"},/*#__PURE__*/React.createElement(Text,{fontWeight:500,fontSize:14,color:theme.text2},\"Price\"),/*#__PURE__*/React.createElement(TradePrice,{inputCurrency:currencies[Field.INPUT],outputCurrency:currencies[Field.OUTPUT],price:trade===null||trade===void 0?void 0:trade.executionPrice,showInverted:showInverted,setShowInverted:setShowInverted})),allowedSlippage!==INITIAL_ALLOWED_SLIPPAGE&&/*#__PURE__*/React.createElement(RowBetween,{align:\"center\"},/*#__PURE__*/React.createElement(ClickableText,{fontWeight:500,fontSize:14,color:theme.text2,onClick:toggleSettings},\"Slippage Tolerance\"),/*#__PURE__*/React.createElement(ClickableText,{fontWeight:500,fontSize:14,color:theme.text2,onClick:toggleSettings},allowedSlippage?allowedSlippage/100:'-',\"%\"))))),/*#__PURE__*/React.createElement(BottomGrouping,null,!account?/*#__PURE__*/React.createElement(ButtonLight,{onClick:toggleWalletModal},\"Connect Wallet\"):showWrap?/*#__PURE__*/React.createElement(ButtonPrimary,{disabled:Boolean(wrapInputError),onClick:onWrap},wrapInputError!==null&&wrapInputError!==void 0?wrapInputError:wrapType===WrapType.WRAP?'Wrap':wrapType===WrapType.UNWRAP?'Unwrap':null):noRoute&&userHasSpecifiedInputOutput?/*#__PURE__*/React.createElement(GreyCard,{style:{textAlign:'center'}},/*#__PURE__*/React.createElement(TYPE.main,{mb:\"4px\"},\"Insufficient liquidity for this trade.\")):showApproveFlow?/*#__PURE__*/React.createElement(RowBetween,null,/*#__PURE__*/React.createElement(ButtonPrimary,{onClick:approveCallback,disabled:approval!==ApprovalState.NOT_APPROVED||approvalSubmitted,width:\"48%\",altDisbaledStyle:approval===ApprovalState.PENDING// show solid button while waiting\n},approval===ApprovalState.PENDING?/*#__PURE__*/React.createElement(Dots,null,\"Approving\"):approvalSubmitted&&approval===ApprovalState.APPROVED?'Approved':'Approve '+((_currencies$Field$INP=currencies[Field.INPUT])===null||_currencies$Field$INP===void 0?void 0:_currencies$Field$INP.symbol)),/*#__PURE__*/React.createElement(ButtonError,{onClick:()=>{if(isExpertMode){handleSwap();}else{setSwapState({tradeToConfirm:trade,attemptingTxn:false,swapErrorMessage:undefined,showConfirm:true,txHash:undefined});}},width:\"48%\",id:\"swap-button\",disabled:!isValid||approval!==ApprovalState.APPROVED||priceImpactSeverity>3&&!isExpertMode,error:isValid&&priceImpactSeverity>2},/*#__PURE__*/React.createElement(Text,{fontSize:16,fontWeight:500},priceImpactSeverity>3&&!isExpertMode?\"Price Impact High\":\"Swap\".concat(priceImpactSeverity>2?' Anyway':'')))):/*#__PURE__*/React.createElement(ButtonError,{onClick:()=>{if(isExpertMode){handleSwap();}else{setSwapState({tradeToConfirm:trade,attemptingTxn:false,swapErrorMessage:undefined,showConfirm:true,txHash:undefined});}},id:\"swap-button\",disabled:!isValid||priceImpactSeverity>3&&!isExpertMode||!!swapCallbackError,error:isValid&&priceImpactSeverity>2&&!swapCallbackError},/*#__PURE__*/React.createElement(Text,{fontSize:20,fontWeight:500},swapInputError?swapInputError:priceImpactSeverity>3&&!isExpertMode?\"Price Impact Too High\":\"Swap\".concat(priceImpactSeverity>2?' Anyway':''))),isExpertMode&&swapErrorMessage?/*#__PURE__*/React.createElement(SwapCallbackError,{error:swapErrorMessage}):null,betterTradeLinkVersion&&/*#__PURE__*/React.createElement(BetterTradeLink,{version:betterTradeLinkVersion}),/*#__PURE__*/React.createElement(AutoRow,{justify:\"center\",style:{marginTop:'10px'}},/*#__PURE__*/React.createElement(ExternalLink,{href:\"https://t.me/storyswapio\",style:{color:'#2130ED',textDecoration:'none',display:'flex',alignItems:'center',gap:'4px'}},/*#__PURE__*/React.createElement(\"svg\",{width:\"16\",height:\"16\",viewBox:\"0 0 24 24\",fill:\"none\",stroke:\"#2130ED\",strokeWidth:\"2\",strokeLinecap:\"round\",strokeLinejoin:\"round\"},/*#__PURE__*/React.createElement(\"circle\",{cx:\"12\",cy:\"12\",r:\"10\"}),/*#__PURE__*/React.createElement(\"line\",{x1:\"12\",y1:\"8\",x2:\"12\",y2:\"16\"}),/*#__PURE__*/React.createElement(\"line\",{x1:\"8\",y1:\"12\",x2:\"16\",y2:\"12\"})),\"How to add your token to tokenlist?\"))))),/*#__PURE__*/React.createElement(AdvancedSwapDetailsDropdown,{trade:trade}));}","map":{"version":3,"names":["JSBI","React","useCallback","useContext","useEffect","useState","ArrowDown","ReactGA","Text","ThemeContext","AddressInputPanel","ButtonError","ButtonLight","ButtonPrimary","Card","GreyCard","AutoColumn","ConfirmSwapModal","CurrencyInputPanel","SwapPoolTabs","AutoRow","RowBetween","AdvancedSwapDetailsDropdown","BetterTradeLink","confirmPriceImpactWithoutFee","ArrowWrapper","BottomGrouping","Dots","SwapCallbackError","Wrapper","TradePrice","TokenWarningCards","BETTER_TRADE_LINK_THRESHOLD","INITIAL_ALLOWED_SLIPPAGE","getTradeVersion","isTradeBetter","useActiveWeb3React","ApprovalState","useApproveCallbackFromTrade","useENSAddress","useSwapCallback","useToggledVersion","Version","useWrapCallback","WrapType","useToggleSettingsMenu","useWalletModalToggle","Field","useDefaultsFromURLSearch","useDerivedSwapInfo","useSwapActionHandlers","useSwapState","useExpertModeManager","useTokenWarningDismissal","useUserDeadline","useUserSlippageTolerance","LinkStyledButton","TYPE","ExternalLink","maxAmountSpend","computeTradePriceBreakdown","warningSeverity","AppBody","ClickableText","Swap","_parsedAmounts$indepe","_parsedAmounts$indepe2","_parsedAmounts$depend","_parsedAmounts$depend2","_parsedAmounts$indepe3","_parsedAmounts$Field$","_currencies$Field$INP","account","chainId","theme","toggleWalletModal","toggleSettings","isExpertMode","deadline","allowedSlippage","independentField","typedValue","recipient","v1Trade","v2Trade","currencyBalances","parsedAmount","currencies","inputError","swapInputError","wrapType","execute","onWrap","wrapInputError","INPUT","OUTPUT","showWrap","NOT_APPLICABLE","address","recipientAddress","toggledVersion","trade","undefined","v1","v2","betterTradeLinkVersion","parsedAmounts","inputAmount","outputAmount","onSwitchTokens","onCurrencySelection","onUserInput","onChangeRecipient","isValid","dependentField","handleTypeInput","value","handleTypeOutput","showConfirm","tradeToConfirm","swapErrorMessage","attemptingTxn","txHash","setSwapState","formattedAmounts","toExact","toSignificant","route","userHasSpecifiedInputOutput","Boolean","greaterThan","BigInt","noRoute","approval","approveCallback","approvalSubmitted","setApprovalSubmitted","PENDING","maxAmountInput","atMaxAmountInput","equalTo","callback","swapCallback","error","swapCallbackError","priceImpactWithoutFee","handleSwap","then","hash","_trade$inputAmount","_trade$inputAmount$cu","_trade$outputAmount","_trade$outputAmount$c","event","category","action","label","currency","symbol","join","catch","message","showInverted","setShowInverted","priceImpactSeverity","showApproveFlow","NOT_APPROVED","APPROVED","dismissedToken0","dismissedToken1","showWarning","handleConfirmDismiss","handleAcceptChanges","createElement","Fragment","disabled","active","id","isOpen","originalTrade","onAcceptChanges","onConfirm","onDismiss","gap","showMaxButton","onMax","onCurrencySelect","otherCurrency","justify","style","padding","clickable","size","onClick","color","primary1","text2","onChange","borderRadius","align","fontWeight","fontSize","inputCurrency","outputCurrency","price","executionPrice","WRAP","UNWRAP","textAlign","main","mb","width","altDisbaledStyle","concat","version","marginTop","href","textDecoration","display","alignItems","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","x1","y1","x2","y2"],"sources":["/Users/synallage/Desktop/fomoswap-uni/interface-73580de922ce3ff642430d71aa24f5c053e6dd4d/src/pages/Swap/index.tsx"],"sourcesContent":["import { CurrencyAmount, JSBI, Trade } from 'fomoswap-story'\nimport React, { useCallback, useContext, useEffect, useState } from 'react'\nimport { ArrowDown } from 'react-feather'\nimport ReactGA from 'react-ga'\nimport { Text } from 'rebass'\nimport { ThemeContext } from 'styled-components'\nimport AddressInputPanel from '../../components/AddressInputPanel'\nimport { ButtonError, ButtonLight, ButtonPrimary } from '../../components/Button'\nimport Card, { GreyCard } from '../../components/Card'\nimport { AutoColumn } from '../../components/Column'\nimport ConfirmSwapModal from '../../components/swap/ConfirmSwapModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { SwapPoolTabs } from '../../components/NavigationTabs'\nimport { AutoRow, RowBetween } from '../../components/Row'\nimport AdvancedSwapDetailsDropdown from '../../components/swap/AdvancedSwapDetailsDropdown'\nimport BetterTradeLink from '../../components/swap/BetterTradeLink'\nimport confirmPriceImpactWithoutFee from '../../components/swap/confirmPriceImpactWithoutFee'\nimport { ArrowWrapper, BottomGrouping, Dots, SwapCallbackError, Wrapper } from '../../components/swap/styleds'\nimport TradePrice from '../../components/swap/TradePrice'\nimport { TokenWarningCards } from '../../components/TokenWarningCard'\n\nimport { BETTER_TRADE_LINK_THRESHOLD, INITIAL_ALLOWED_SLIPPAGE } from '../../constants'\nimport { getTradeVersion, isTradeBetter } from '../../data/V1'\nimport { useActiveWeb3React } from '../../hooks'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\nimport useENSAddress from '../../hooks/useENSAddress'\nimport { useSwapCallback } from '../../hooks/useSwapCallback'\nimport useToggledVersion, { Version } from '../../hooks/useToggledVersion'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback'\nimport { useToggleSettingsMenu, useWalletModalToggle } from '../../state/application/hooks'\nimport { Field } from '../../state/swap/actions'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState\n} from '../../state/swap/hooks'\nimport {\n  useExpertModeManager,\n  useTokenWarningDismissal,\n  useUserDeadline,\n  useUserSlippageTolerance\n} from '../../state/user/hooks'\nimport { LinkStyledButton, TYPE, ExternalLink } from '../../theme'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\nimport AppBody from '../AppBody'\nimport { ClickableText } from '../Pool/styleds'\n\nexport default function Swap() {\n  useDefaultsFromURLSearch()\n\n  const { account, chainId } = useActiveWeb3React()\n  const theme = useContext(ThemeContext)\n\n  // toggle wallet when disconnected\n  const toggleWalletModal = useWalletModalToggle()\n\n  // for expert mode\n  const toggleSettings = useToggleSettingsMenu()\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [deadline] = useUserDeadline()\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const {\n    v1Trade,\n    v2Trade,\n    currencyBalances,\n    parsedAmount,\n    currencies,\n    inputError: swapInputError\n  } = useDerivedSwapInfo()\n  const { wrapType, execute: onWrap, inputError: wrapInputError } = useWrapCallback(\n    currencies[Field.INPUT],\n    currencies[Field.OUTPUT],\n    typedValue\n  )\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const { address: recipientAddress } = useENSAddress(recipient)\n  const toggledVersion = useToggledVersion()\n  const trade = showWrap\n    ? undefined\n    : {\n        [Version.v1]: v1Trade,\n        [Version.v2]: v2Trade\n      }[toggledVersion]\n\n  const betterTradeLinkVersion: Version | undefined =\n    toggledVersion === Version.v2 && isTradeBetter(v2Trade, v1Trade, BETTER_TRADE_LINK_THRESHOLD)\n      ? Version.v1\n      : toggledVersion === Version.v1 && isTradeBetter(v1Trade, v2Trade)\n      ? Version.v2\n      : undefined\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput]\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput]\n  )\n\n  // modal and loading\n  const [{ showConfirm, tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    showConfirm: boolean\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    showConfirm: false,\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? ''\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0))\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(\n    trade,\n    allowedSlippage,\n    deadline,\n    recipient\n  )\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, showConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then(hash => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, showConfirm, swapErrorMessage: undefined, txHash: hash })\n\n        ReactGA.event({\n          category: 'Swap',\n          action:\n            recipient === null\n              ? 'Swap w/o Send'\n              : (recipientAddress ?? recipient) === account\n              ? 'Swap w/o Send + recipient'\n              : 'Swap w/ Send',\n          label: [\n            trade?.inputAmount?.currency?.symbol,\n            trade?.outputAmount?.currency?.symbol,\n            getTradeVersion(trade)\n          ].join('/')\n        })\n      })\n      .catch(error => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          showConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined\n        })\n      })\n  }, [tradeToConfirm, account, priceImpactWithoutFee, recipient, recipientAddress, showConfirm, swapCallback, trade])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const [dismissedToken0] = useTokenWarningDismissal(chainId, currencies[Field.INPUT])\n  const [dismissedToken1] = useTokenWarningDismissal(chainId, currencies[Field.OUTPUT])\n  const showWarning =\n    (!dismissedToken0 && !!currencies[Field.INPUT]) || (!dismissedToken1 && !!currencies[Field.OUTPUT])\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ showConfirm: false, tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn, showConfirm })\n  }, [attemptingTxn, showConfirm, swapErrorMessage, trade, txHash])\n\n  return (\n    <>\n      {showWarning && <TokenWarningCards currencies={currencies} />}\n      <AppBody disabled={showWarning}>\n        <SwapPoolTabs active={'swap'} />\n        <Wrapper id=\"swap-page\">\n          <ConfirmSwapModal\n            isOpen={showConfirm}\n            trade={trade}\n            originalTrade={tradeToConfirm}\n            onAcceptChanges={handleAcceptChanges}\n            attemptingTxn={attemptingTxn}\n            txHash={txHash}\n            recipient={recipient}\n            allowedSlippage={allowedSlippage}\n            onConfirm={handleSwap}\n            swapErrorMessage={swapErrorMessage}\n            onDismiss={handleConfirmDismiss}\n          />\n\n          <AutoColumn gap={'md'}>\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap ? 'From (estimated)' : 'From'}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={() => {\n                maxAmountInput && onUserInput(Field.INPUT, maxAmountInput.toExact())\n              }}\n              onCurrencySelect={currency => {\n                setApprovalSubmitted(false) // reset 2 step UI for approvals\n                onCurrencySelection(Field.INPUT, currency)\n              }}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDown\n                    size=\"16\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? theme.primary1 : theme.text2}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <LinkStyledButton id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    + Add a send (optional)\n                  </LinkStyledButton>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap ? 'To (estimated)' : 'To'}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={address => onCurrencySelection(Field.OUTPUT, address)}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n\n            {recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDown size=\"16\" color={theme.text2} />\n                  </ArrowWrapper>\n                  <LinkStyledButton id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    - Remove send\n                  </LinkStyledButton>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <Card padding={'.25rem .75rem 0 .75rem'} borderRadius={'20px'}>\n                <AutoColumn gap=\"4px\">\n                  <RowBetween align=\"center\">\n                    <Text fontWeight={500} fontSize={14} color={theme.text2}>\n                      Price\n                    </Text>\n                    <TradePrice\n                      inputCurrency={currencies[Field.INPUT]}\n                      outputCurrency={currencies[Field.OUTPUT]}\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n\n                  {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                    <RowBetween align=\"center\">\n                      <ClickableText fontWeight={500} fontSize={14} color={theme.text2} onClick={toggleSettings}>\n                        Slippage Tolerance\n                      </ClickableText>\n                      <ClickableText fontWeight={500} fontSize={14} color={theme.text2} onClick={toggleSettings}>\n                        {allowedSlippage ? allowedSlippage / 100 : '-'}%\n                      </ClickableText>\n                    </RowBetween>\n                  )}\n                </AutoColumn>\n              </Card>\n            )}\n          </AutoColumn>\n          <BottomGrouping>\n            {!account ? (\n              <ButtonLight onClick={toggleWalletModal}>Connect Wallet</ButtonLight>\n            ) : showWrap ? (\n              <ButtonPrimary disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </ButtonPrimary>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center' }}>\n                <TYPE.main mb=\"4px\">Insufficient liquidity for this trade.</TYPE.main>\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <ButtonPrimary\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                  altDisbaledStyle={approval === ApprovalState.PENDING} // show solid button while waiting\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <Dots>Approving</Dots>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    'Approved'\n                  ) : (\n                    'Approve ' + currencies[Field.INPUT]?.symbol\n                  )}\n                </ButtonPrimary>\n                <ButtonError\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        showConfirm: true,\n                        txHash: undefined\n                      })\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                  error={isValid && priceImpactSeverity > 2}\n                >\n                  <Text fontSize={16} fontWeight={500}>\n                    {priceImpactSeverity > 3 && !isExpertMode\n                      ? `Price Impact High`\n                      : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`}\n                  </Text>\n                </ButtonError>\n              </RowBetween>\n            ) : (\n              <ButtonError\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap()\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      showConfirm: true,\n                      txHash: undefined\n                    })\n                  }\n                }}\n                id=\"swap-button\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n                error={isValid && priceImpactSeverity > 2 && !swapCallbackError}\n              >\n                <Text fontSize={20} fontWeight={500}>\n                  {swapInputError\n                    ? swapInputError\n                    : priceImpactSeverity > 3 && !isExpertMode\n                    ? `Price Impact Too High`\n                    : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`}\n                </Text>\n              </ButtonError>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n            {betterTradeLinkVersion && <BetterTradeLink version={betterTradeLinkVersion} />}\n            <AutoRow justify=\"center\" style={{ marginTop: '10px' }}>\n              <ExternalLink\n                href=\"https://t.me/storyswapio\"\n                style={{ color: '#2130ED', textDecoration: 'none', display: 'flex', alignItems: 'center', gap: '4px' }}\n              >\n                <svg\n                  width=\"16\"\n                  height=\"16\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"#2130ED\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                >\n                  <circle cx=\"12\" cy=\"12\" r=\"10\" />\n                  <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"16\" />\n                  <line x1=\"8\" y1=\"12\" x2=\"16\" y2=\"12\" />\n                </svg>\n                How to add your token to tokenlist?\n              </ExternalLink>\n            </AutoRow>\n          </BottomGrouping>\n        </Wrapper>\n      </AppBody>\n      <AdvancedSwapDetailsDropdown trade={trade} />\n    </>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}