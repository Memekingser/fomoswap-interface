{"ast":null,"code":"import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { save, load } from 'redux-localstorage-simple';\nimport application from './application/reducer';\nimport user from './user/reducer';\nimport transactions from './transactions/reducer';\nimport swap from './swap/reducer';\nimport mint from './mint/reducer';\nimport lists from './lists/reducer';\nimport burn from './burn/reducer';\nimport multicall from './multicall/reducer';\nimport { updateVersion } from './user/actions';\nconst PERSISTED_KEYS = ['user', 'transactions', 'lists'];\nconst store = configureStore({\n  reducer: {\n    application,\n    user,\n    transactions,\n    swap,\n    mint,\n    burn,\n    multicall,\n    lists\n  },\n  middleware: [...getDefaultMiddleware(), save({\n    states: PERSISTED_KEYS\n  })],\n  preloadedState: load({\n    states: PERSISTED_KEYS\n  })\n});\nstore.dispatch(updateVersion());\nexport default store;","map":{"version":3,"names":["configureStore","getDefaultMiddleware","save","load","application","user","transactions","swap","mint","lists","burn","multicall","updateVersion","PERSISTED_KEYS","store","reducer","middleware","states","preloadedState","dispatch"],"sources":["/Users/synallage/Desktop/fomoswap-uni/interface-73580de922ce3ff642430d71aa24f5c053e6dd4d/src/state/index.ts"],"sourcesContent":["import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { save, load } from 'redux-localstorage-simple'\n\nimport application from './application/reducer'\nimport user from './user/reducer'\nimport transactions from './transactions/reducer'\nimport swap from './swap/reducer'\nimport mint from './mint/reducer'\nimport lists from './lists/reducer'\nimport burn from './burn/reducer'\nimport multicall from './multicall/reducer'\n\nimport { updateVersion } from './user/actions'\n\nconst PERSISTED_KEYS: string[] = ['user', 'transactions', 'lists']\n\nconst store = configureStore({\n  reducer: {\n    application,\n    user,\n    transactions,\n    swap,\n    mint,\n    burn,\n    multicall,\n    lists\n  },\n  middleware: [...getDefaultMiddleware(), save({ states: PERSISTED_KEYS })],\n  preloadedState: load({ states: PERSISTED_KEYS })\n})\n\nstore.dispatch(updateVersion())\n\nexport default store\n\nexport type AppState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,oBAAoB,QAAQ,kBAAkB;AACvE,SAASC,IAAI,EAAEC,IAAI,QAAQ,2BAA2B;AAEtD,OAAOC,WAAW,MAAM,uBAAuB;AAC/C,OAAOC,IAAI,MAAM,gBAAgB;AACjC,OAAOC,YAAY,MAAM,wBAAwB;AACjD,OAAOC,IAAI,MAAM,gBAAgB;AACjC,OAAOC,IAAI,MAAM,gBAAgB;AACjC,OAAOC,KAAK,MAAM,iBAAiB;AACnC,OAAOC,IAAI,MAAM,gBAAgB;AACjC,OAAOC,SAAS,MAAM,qBAAqB;AAE3C,SAASC,aAAa,QAAQ,gBAAgB;AAE9C,MAAMC,cAAwB,GAAG,CAAC,MAAM,EAAE,cAAc,EAAE,OAAO,CAAC;AAElE,MAAMC,KAAK,GAAGd,cAAc,CAAC;EAC3Be,OAAO,EAAE;IACPX,WAAW;IACXC,IAAI;IACJC,YAAY;IACZC,IAAI;IACJC,IAAI;IACJE,IAAI;IACJC,SAAS;IACTF;EACF,CAAC;EACDO,UAAU,EAAE,CAAC,GAAGf,oBAAoB,CAAC,CAAC,EAAEC,IAAI,CAAC;IAAEe,MAAM,EAAEJ;EAAe,CAAC,CAAC,CAAC;EACzEK,cAAc,EAAEf,IAAI,CAAC;IAAEc,MAAM,EAAEJ;EAAe,CAAC;AACjD,CAAC,CAAC;AAEFC,KAAK,CAACK,QAAQ,CAACP,aAAa,CAAC,CAAC,CAAC;AAE/B,eAAeE,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module"}