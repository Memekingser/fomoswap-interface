{"ast":null,"code":"import { AbstractConnector } from '@web3-react/abstract-connector';\nimport invariant from 'tiny-invariant';\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nvar chainIdToNetwork = {\n  1: 'mainnet',\n  3: 'ropsten',\n  4: 'rinkeby',\n  5: 'goerli',\n  42: 'kovan',\n  100: 'xdai',\n  30: 'orchid',\n  31: 'orchidTestnet',\n  99: 'core',\n  77: 'sokol',\n  61: 'classic',\n  8: 'ubiq',\n  108: 'thundercore',\n  18: 'thundercoreTestnet',\n  163: 'lightstreams',\n  122: 'fuse',\n  15001: 'maticTestnet'\n};\nvar PortisConnector = /*#__PURE__*/function (_AbstractConnector) {\n  _inheritsLoose(PortisConnector, _AbstractConnector);\n  function PortisConnector(_ref) {\n    var _this;\n    var dAppId = _ref.dAppId,\n      networks = _ref.networks,\n      _ref$config = _ref.config,\n      config = _ref$config === void 0 ? {} : _ref$config;\n    var chainIds = networks.map(function (n) {\n      return typeof n === 'number' ? n : Number(n.chainId);\n    });\n    !chainIds.every(function (c) {\n      return !!chainIdToNetwork[c];\n    }) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"One or more unsupported networks \" + networks) : invariant(false) : void 0;\n    _this = _AbstractConnector.call(this, {\n      supportedChainIds: chainIds\n    }) || this;\n    _this.dAppId = dAppId;\n    _this.networks = networks;\n    _this.config = config;\n    _this.handleOnLogout = _this.handleOnLogout.bind(_assertThisInitialized(_this));\n    _this.handleOnActiveWalletChanged = _this.handleOnActiveWalletChanged.bind(_assertThisInitialized(_this));\n    _this.handleOnError = _this.handleOnError.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n  var _proto = PortisConnector.prototype;\n  _proto.handleOnLogout = function handleOnLogout() {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.log(\"Handling 'onLogout' event\");\n    }\n    this.emitDeactivate();\n  };\n  _proto.handleOnActiveWalletChanged = function handleOnActiveWalletChanged(account) {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.log(\"Handling 'onActiveWalletChanged' event with payload\", account);\n    }\n    this.emitUpdate({\n      account: account\n    });\n  };\n  _proto.handleOnError = function handleOnError(error) {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.log(\"Handling 'onError' event\");\n    }\n    this.emitError(error);\n  };\n  _proto.activate = function activate() {\n    try {\n      var _temp3 = function _temp3() {\n        _this3.portis.onLogout(_this3.handleOnLogout);\n        _this3.portis.onActiveWalletChanged(_this3.handleOnActiveWalletChanged);\n        _this3.portis.onError(_this3.handleOnError);\n        return Promise.resolve(_this3.portis.provider.enable().then(function (accounts) {\n          return accounts[0];\n        })).then(function (account) {\n          return {\n            provider: _this3.portis.provider,\n            account: account\n          };\n        });\n      };\n      var _this3 = this;\n      var _temp4 = function () {\n        if (!_this3.portis) {\n          return Promise.resolve(import('@portis/web3')).then(function (_ref2) {\n            var Portis = _ref2[\"default\"];\n            _this3.portis = new Portis(_this3.dAppId, typeof _this3.networks[0] === 'number' ? chainIdToNetwork[_this3.networks[0]] : _this3.networks[0], _this3.config);\n          });\n        }\n      }();\n      return Promise.resolve(_temp4 && _temp4.then ? _temp4.then(_temp3) : _temp3(_temp4));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  _proto.getProvider = function getProvider() {\n    try {\n      var _this5 = this;\n      return Promise.resolve(_this5.portis.provider);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  _proto.getChainId = function getChainId() {\n    try {\n      var _this7 = this;\n      return Promise.resolve(_this7.portis.provider.send('eth_chainId'));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  _proto.getAccount = function getAccount() {\n    try {\n      var _this9 = this;\n      return Promise.resolve(_this9.portis.provider.send('eth_accounts').then(function (accounts) {\n        return accounts[0];\n      }));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  _proto.deactivate = function deactivate() {\n    this.portis.onLogout(function () {});\n    this.portis.onActiveWalletChanged(function () {});\n    this.portis.onError(function () {});\n  };\n  _proto.changeNetwork = function changeNetwork(newNetwork, isGasRelayEnabled) {\n    try {\n      var _this11 = this;\n      if (typeof newNetwork === 'number') {\n        !!!chainIdToNetwork[newNetwork] ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Invalid chainId \" + newNetwork) : invariant(false) : void 0;\n        _this11.portis.changeNetwork(chainIdToNetwork[newNetwork], isGasRelayEnabled);\n        _this11.emitUpdate({\n          chainId: newNetwork\n        });\n      } else {\n        _this11.portis.changeNetwork(newNetwork, isGasRelayEnabled);\n        _this11.emitUpdate({\n          chainId: Number(newNetwork.chainId)\n        });\n      }\n      return Promise.resolve();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  _proto.close = function close() {\n    try {\n      var _this13 = this;\n      return Promise.resolve(_this13.portis.logout()).then(function () {\n        _this13.emitDeactivate();\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  return PortisConnector;\n}(AbstractConnector);\nexport { PortisConnector };","map":{"version":3,"names":["chainIdToNetwork","PortisConnector","_AbstractConnector","_inheritsLoose","_ref","dAppId","networks","config","_ref$config","chainIds","map","n","Number","chainId","every","c","process","env","NODE_ENV","invariant","_this","call","supportedChainIds","handleOnLogout","bind","_assertThisInitialized","handleOnActiveWalletChanged","handleOnError","_proto","prototype","console","log","emitDeactivate","account","emitUpdate","error","emitError","activate","_this3","portis","onLogout","onActiveWalletChanged","onError","provider","enable","then","accounts","_ref2","Portis","e","Promise","reject","getProvider","resolve","_this5","getChainId","_this7","send","getAccount","_this9","deactivate","changeNetwork","newNetwork","isGasRelayEnabled","_this11","close","_this13","logout","AbstractConnector"],"sources":["../src/index.ts"],"sourcesContent":["import { ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport invariant from 'tiny-invariant'\n\nconst chainIdToNetwork: { [network: number]: string } = {\n  1: 'mainnet',\n  3: 'ropsten',\n  4: 'rinkeby',\n  5: 'goerli',\n  42: 'kovan',\n  100: 'xdai',\n  30: 'orchid',\n  31: 'orchidTestnet',\n  99: 'core',\n  77: 'sokol',\n  61: 'classic',\n  8: 'ubiq',\n  108: 'thundercore',\n  18: 'thundercoreTestnet',\n  163: 'lightstreams',\n  122: 'fuse',\n  15001: 'maticTestnet'\n}\n\ntype Network = number | { chainId: string; [key: string]: any }\n\ninterface PortisConnectorArguments {\n  dAppId: string\n  networks: Network[]\n  config?: any\n}\n\nexport class PortisConnector extends AbstractConnector {\n  private readonly dAppId: string\n  private readonly networks: Network[]\n  private readonly config: any\n\n  public portis: any\n\n  constructor({ dAppId, networks, config = {} }: PortisConnectorArguments) {\n    const chainIds = networks.map((n): number => (typeof n === 'number' ? n : Number(n.chainId)))\n    invariant(\n      chainIds.every((c): boolean => !!chainIdToNetwork[c]),\n      `One or more unsupported networks ${networks}`\n    )\n    super({ supportedChainIds: chainIds })\n\n    this.dAppId = dAppId\n    this.networks = networks\n    this.config = config\n\n    this.handleOnLogout = this.handleOnLogout.bind(this)\n    this.handleOnActiveWalletChanged = this.handleOnActiveWalletChanged.bind(this)\n    this.handleOnError = this.handleOnError.bind(this)\n  }\n\n  private handleOnLogout(): void {\n    if (__DEV__) {\n      console.log(\"Handling 'onLogout' event\")\n    }\n    this.emitDeactivate()\n  }\n\n  private handleOnActiveWalletChanged(account: string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'onActiveWalletChanged' event with payload\", account)\n    }\n    this.emitUpdate({ account })\n  }\n\n  private handleOnError(error: Error): void {\n    if (__DEV__) {\n      console.log(\"Handling 'onError' event\")\n    }\n    this.emitError(error)\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!this.portis) {\n      const { default: Portis } = await import('@portis/web3')\n      this.portis = new Portis(\n        this.dAppId,\n        typeof this.networks[0] === 'number' ? chainIdToNetwork[this.networks[0]] : (this.networks[0] as any),\n        this.config\n      )\n    }\n\n    this.portis.onLogout(this.handleOnLogout)\n    this.portis.onActiveWalletChanged(this.handleOnActiveWalletChanged)\n    this.portis.onError(this.handleOnError)\n\n    const account = await this.portis.provider.enable().then((accounts: string[]): string => accounts[0])\n\n    return { provider: this.portis.provider, account }\n  }\n\n  public async getProvider(): Promise<any> {\n    return this.portis.provider\n  }\n\n  public async getChainId(): Promise<number | string> {\n    return this.portis.provider.send('eth_chainId')\n  }\n\n  public async getAccount(): Promise<null | string> {\n    return this.portis.provider.send('eth_accounts').then((accounts: string[]): string => accounts[0])\n  }\n\n  public deactivate() {\n    this.portis.onLogout(() => {})\n    this.portis.onActiveWalletChanged(() => {})\n    this.portis.onError(() => {})\n  }\n\n  public async changeNetwork(newNetwork: number | Network, isGasRelayEnabled?: boolean) {\n    if (typeof newNetwork === 'number') {\n      invariant(!!chainIdToNetwork[newNetwork], `Invalid chainId ${newNetwork}`)\n      this.portis.changeNetwork(chainIdToNetwork[newNetwork], isGasRelayEnabled)\n      this.emitUpdate({ chainId: newNetwork })\n    } else {\n      this.portis.changeNetwork(newNetwork, isGasRelayEnabled)\n      this.emitUpdate({ chainId: Number(newNetwork.chainId) })\n    }\n  }\n\n  public async close() {\n    await this.portis.logout()\n    this.emitDeactivate()\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}