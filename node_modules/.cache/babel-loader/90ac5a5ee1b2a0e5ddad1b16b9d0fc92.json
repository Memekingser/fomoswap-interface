{"ast":null,"code":"import{Pair,Token}from'fomoswap-artio';import flatMap from'lodash.flatmap';import{useCallback,useMemo}from'react';import{shallowEqual,useDispatch,useSelector}from'react-redux';import{BASES_TO_TRACK_LIQUIDITY_FOR,PINNED_PAIRS}from'../../constants';import{useActiveWeb3React}from'../../hooks';import{useAllTokens}from'../../hooks/Tokens';import{addSerializedPair,addSerializedToken,dismissTokenWarning,removeSerializedToken,updateUserDarkMode,updateUserDeadline,updateUserExpertMode,updateUserSlippageTolerance}from'./actions';import{useDefaultTokenList}from'../lists/hooks';import{isDefaultToken}from'../../utils';function serializeToken(token){return{chainId:token.chainId,address:token.address,decimals:token.decimals,symbol:token.symbol,name:token.name};}function deserializeToken(serializedToken){return new Token(serializedToken.chainId,serializedToken.address,serializedToken.decimals,serializedToken.symbol,serializedToken.name);}export function useIsDarkMode(){const{userDarkMode,matchesDarkMode}=useSelector(_ref=>{let{user:{matchesDarkMode,userDarkMode}}=_ref;return{userDarkMode,matchesDarkMode};},shallowEqual);return userDarkMode===null?matchesDarkMode:userDarkMode;}export function useDarkModeManager(){const dispatch=useDispatch();const darkMode=useIsDarkMode();const toggleSetDarkMode=useCallback(()=>{dispatch(updateUserDarkMode({userDarkMode:!darkMode}));},[darkMode,dispatch]);return[darkMode,toggleSetDarkMode];}export function useIsExpertMode(){return useSelector(state=>state.user.userExpertMode);}export function useExpertModeManager(){const dispatch=useDispatch();const expertMode=useIsExpertMode();const toggleSetExpertMode=useCallback(()=>{dispatch(updateUserExpertMode({userExpertMode:!expertMode}));},[expertMode,dispatch]);return[expertMode,toggleSetExpertMode];}export function useUserSlippageTolerance(){const dispatch=useDispatch();const userSlippageTolerance=useSelector(state=>{return state.user.userSlippageTolerance;});const setUserSlippageTolerance=useCallback(userSlippageTolerance=>{dispatch(updateUserSlippageTolerance({userSlippageTolerance}));},[dispatch]);return[userSlippageTolerance,setUserSlippageTolerance];}export function useUserDeadline(){const dispatch=useDispatch();const userDeadline=useSelector(state=>{return state.user.userDeadline;});const setUserDeadline=useCallback(userDeadline=>{dispatch(updateUserDeadline({userDeadline}));},[dispatch]);return[userDeadline,setUserDeadline];}export function useAddUserToken(){const dispatch=useDispatch();return useCallback(token=>{dispatch(addSerializedToken({serializedToken:serializeToken(token)}));},[dispatch]);}export function useRemoveUserAddedToken(){const dispatch=useDispatch();return useCallback((chainId,address)=>{dispatch(removeSerializedToken({chainId,address}));},[dispatch]);}export function useUserAddedTokens(){const{chainId}=useActiveWeb3React();const serializedTokensMap=useSelector(_ref2=>{let{user:{tokens}}=_ref2;return tokens;});return useMemo(()=>{var _serializedTokensMap;if(!chainId)return[];return Object.values((_serializedTokensMap=serializedTokensMap[chainId])!==null&&_serializedTokensMap!==void 0?_serializedTokensMap:{}).map(deserializeToken);},[serializedTokensMap,chainId]);}function serializePair(pair){return{token0:serializeToken(pair.token0),token1:serializeToken(pair.token1)};}export function usePairAdder(){const dispatch=useDispatch();return useCallback(pair=>{dispatch(addSerializedPair({serializedPair:serializePair(pair)}));},[dispatch]);}/**\n * Returns whether a token warning has been dismissed and a callback to dismiss it,\n * iff it has not already been dismissed and is a valid token.\n */export function useTokenWarningDismissal(chainId,token){const dismissalState=useSelector(state=>state.user.dismissedTokenWarnings);const dispatch=useDispatch();// get default list, mark as dismissed if on list\nconst defaultList=useDefaultTokenList();const isDefault=isDefaultToken(defaultList,token);return useMemo(()=>{var _dismissalState$chain;if(!chainId||!token)return[false,null];const dismissed=token instanceof Token?(dismissalState===null||dismissalState===void 0?void 0:(_dismissalState$chain=dismissalState[chainId])===null||_dismissalState$chain===void 0?void 0:_dismissalState$chain[token.address])===true||isDefault:true;const callback=dismissed||!(token instanceof Token)?null:()=>dispatch(dismissTokenWarning({chainId,tokenAddress:token.address}));return[dismissed,callback];},[chainId,token,dismissalState,isDefault,dispatch]);}/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */export function toV2LiquidityToken(_ref3){let[tokenA,tokenB]=_ref3;return new Token(tokenA.chainId,Pair.getAddress(tokenA,tokenB),18,'UNI-V2','Uniswap V2');}/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */export function useTrackedTokenPairs(){const{chainId}=useActiveWeb3React();const tokens=useAllTokens();// pinned pairs\nconst pinnedPairs=useMemo(()=>{var _PINNED_PAIRS$chainId;return chainId?(_PINNED_PAIRS$chainId=PINNED_PAIRS[chainId])!==null&&_PINNED_PAIRS$chainId!==void 0?_PINNED_PAIRS$chainId:[]:[];},[chainId]);// pairs for every token against every base\nconst generatedPairs=useMemo(()=>chainId?flatMap(Object.keys(tokens),tokenAddress=>{var _BASES_TO_TRACK_LIQUI;const token=tokens[tokenAddress];// for each token on the current chain,\nreturn(// loop though all bases on the current chain\n((_BASES_TO_TRACK_LIQUI=BASES_TO_TRACK_LIQUIDITY_FOR[chainId])!==null&&_BASES_TO_TRACK_LIQUI!==void 0?_BASES_TO_TRACK_LIQUI:[]// to construct pairs of the given token with each base\n).map(base=>{if(base.address===token.address){return null;}else{return[base,token];}}).filter(p=>p!==null));}):[],[tokens,chainId]);// pairs saved by users\nconst savedSerializedPairs=useSelector(_ref4=>{let{user:{pairs}}=_ref4;return pairs;});const userPairs=useMemo(()=>{if(!chainId||!savedSerializedPairs)return[];const forChain=savedSerializedPairs[chainId];if(!forChain)return[];return Object.keys(forChain).map(pairId=>{return[deserializeToken(forChain[pairId].token0),deserializeToken(forChain[pairId].token1)];});},[savedSerializedPairs,chainId]);const combinedList=useMemo(()=>userPairs.concat(generatedPairs).concat(pinnedPairs),[generatedPairs,pinnedPairs,userPairs]);return useMemo(()=>{// dedupes pairs of tokens in the combined list\nconst keyed=combinedList.reduce((memo,_ref5)=>{let[tokenA,tokenB]=_ref5;const sorted=tokenA.sortsBefore(tokenB);const key=sorted?\"\".concat(tokenA.address,\":\").concat(tokenB.address):\"\".concat(tokenB.address,\":\").concat(tokenA.address);if(memo[key])return memo;memo[key]=sorted?[tokenA,tokenB]:[tokenB,tokenA];return memo;},{});return Object.keys(keyed).map(key=>keyed[key]);},[combinedList]);}","map":{"version":3,"names":["Pair","Token","flatMap","useCallback","useMemo","shallowEqual","useDispatch","useSelector","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","useActiveWeb3React","useAllTokens","addSerializedPair","addSerializedToken","dismissTokenWarning","removeSerializedToken","updateUserDarkMode","updateUserDeadline","updateUserExpertMode","updateUserSlippageTolerance","useDefaultTokenList","isDefaultToken","serializeToken","token","chainId","address","decimals","symbol","name","deserializeToken","serializedToken","useIsDarkMode","userDarkMode","matchesDarkMode","_ref","user","useDarkModeManager","dispatch","darkMode","toggleSetDarkMode","useIsExpertMode","state","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","useUserSlippageTolerance","userSlippageTolerance","setUserSlippageTolerance","useUserDeadline","userDeadline","setUserDeadline","useAddUserToken","useRemoveUserAddedToken","useUserAddedTokens","serializedTokensMap","_ref2","tokens","_serializedTokensMap","Object","values","map","serializePair","pair","token0","token1","usePairAdder","serializedPair","useTokenWarningDismissal","dismissalState","dismissedTokenWarnings","defaultList","isDefault","_dismissalState$chain","dismissed","callback","tokenAddress","toV2LiquidityToken","_ref3","tokenA","tokenB","getAddress","useTrackedTokenPairs","pinnedPairs","_PINNED_PAIRS$chainId","generatedPairs","keys","_BASES_TO_TRACK_LIQUI","base","filter","p","savedSerializedPairs","_ref4","pairs","userPairs","forChain","pairId","combinedList","concat","keyed","reduce","memo","_ref5","sorted","sortsBefore","key"],"sources":["/Users/synallage/Desktop/fomoswap-uni/interface-73580de922ce3ff642430d71aa24f5c053e6dd4d/src/state/user/hooks.tsx"],"sourcesContent":["import { ChainId, Pair, Token, Currency } from 'fomoswap-artio'\nimport flatMap from 'lodash.flatmap'\nimport { useCallback, useMemo } from 'react'\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from '../../constants'\n\nimport { useActiveWeb3React } from '../../hooks'\nimport { useAllTokens } from '../../hooks/Tokens'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  dismissTokenWarning,\n  removeSerializedToken,\n  SerializedPair,\n  SerializedToken,\n  updateUserDarkMode,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserSlippageTolerance\n} from './actions'\nimport { useDefaultTokenList } from '../lists/hooks'\nimport { isDefaultToken } from '../../utils'\n\nfunction serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name\n  }\n}\n\nfunction deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name\n  )\n}\n\nexport function useIsDarkMode(): boolean {\n  const { userDarkMode, matchesDarkMode } = useSelector<\n    AppState,\n    { userDarkMode: boolean | null; matchesDarkMode: boolean }\n  >(\n    ({ user: { matchesDarkMode, userDarkMode } }) => ({\n      userDarkMode,\n      matchesDarkMode\n    }),\n    shallowEqual\n  )\n\n  return userDarkMode === null ? matchesDarkMode : userDarkMode\n}\n\nexport function useDarkModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const darkMode = useIsDarkMode()\n\n  const toggleSetDarkMode = useCallback(() => {\n    dispatch(updateUserDarkMode({ userDarkMode: !darkMode }))\n  }, [darkMode, dispatch])\n\n  return [darkMode, toggleSetDarkMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>(state => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>(state => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (userSlippageTolerance: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance }))\n    },\n    [dispatch]\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserDeadline(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>(state => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (userDeadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline }))\n    },\n    [dispatch]\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch]\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch]\n  )\n}\n\nexport function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1)\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch]\n  )\n}\n\n/**\n * Returns whether a token warning has been dismissed and a callback to dismiss it,\n * iff it has not already been dismissed and is a valid token.\n */\nexport function useTokenWarningDismissal(chainId?: number, token?: Currency): [boolean, null | (() => void)] {\n  const dismissalState = useSelector<AppState, AppState['user']['dismissedTokenWarnings']>(\n    state => state.user.dismissedTokenWarnings\n  )\n\n  const dispatch = useDispatch<AppDispatch>()\n\n  // get default list, mark as dismissed if on list\n  const defaultList = useDefaultTokenList()\n  const isDefault = isDefaultToken(defaultList, token)\n\n  return useMemo(() => {\n    if (!chainId || !token) return [false, null]\n\n    const dismissed: boolean =\n      token instanceof Token ? dismissalState?.[chainId]?.[token.address] === true || isDefault : true\n\n    const callback =\n      dismissed || !(token instanceof Token)\n        ? null\n        : () => dispatch(dismissTokenWarning({ chainId, tokenAddress: token.address }))\n\n    return [dismissed, callback]\n  }, [chainId, token, dismissalState, isDefault, dispatch])\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'UNI-V2', 'Uniswap V2')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), tokenAddress => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map(base => {\n                  if (base.address === token.address) {\n                    return null\n                  } else {\n                    return [base, token]\n                  }\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId]\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map(pairId => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(() => userPairs.concat(generatedPairs).concat(pinnedPairs), [\n    generatedPairs,\n    pinnedPairs,\n    userPairs\n  ])\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map(key => keyed[key])\n  }, [combinedList])\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}