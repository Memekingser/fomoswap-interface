{"ast":null,"code":"import{currencyEquals}from'fomoswap-story';import React,{useCallback,useMemo}from'react';import TransactionConfirmationModal,{ConfirmationModalContent,TransactionErrorContent}from'../TransactionConfirmationModal';import SwapModalFooter from'./SwapModalFooter';import SwapModalHeader from'./SwapModalHeader';/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */function tradeMeaningfullyDiffers(tradeA,tradeB){return tradeA.tradeType!==tradeB.tradeType||!currencyEquals(tradeA.inputAmount.currency,tradeB.inputAmount.currency)||!tradeA.inputAmount.equalTo(tradeB.inputAmount)||!currencyEquals(tradeA.outputAmount.currency,tradeB.outputAmount.currency)||!tradeA.outputAmount.equalTo(tradeB.outputAmount);}export default function ConfirmSwapModal(_ref){var _trade$inputAmount,_trade$inputAmount2,_trade$inputAmount2$c,_trade$outputAmount,_trade$outputAmount2,_trade$outputAmount2$;let{trade,originalTrade,onAcceptChanges,allowedSlippage,onConfirm,onDismiss,recipient,swapErrorMessage,isOpen,attemptingTxn,txHash}=_ref;const showAcceptChanges=useMemo(()=>Boolean(trade&&originalTrade&&tradeMeaningfullyDiffers(trade,originalTrade)),[originalTrade,trade]);const modalHeader=useCallback(()=>{return trade?/*#__PURE__*/React.createElement(SwapModalHeader,{trade:trade,allowedSlippage:allowedSlippage,recipient:recipient,showAcceptChanges:showAcceptChanges,onAcceptChanges:onAcceptChanges}):null;},[allowedSlippage,onAcceptChanges,recipient,showAcceptChanges,trade]);const modalBottom=useCallback(()=>{return trade?/*#__PURE__*/React.createElement(SwapModalFooter,{onConfirm:onConfirm,trade:trade,disabledConfirm:showAcceptChanges,swapErrorMessage:swapErrorMessage,allowedSlippage:allowedSlippage}):null;},[allowedSlippage,onConfirm,showAcceptChanges,swapErrorMessage,trade]);// text to show while loading\nconst pendingText=\"Swapping \".concat(trade===null||trade===void 0?void 0:(_trade$inputAmount=trade.inputAmount)===null||_trade$inputAmount===void 0?void 0:_trade$inputAmount.toSignificant(6),\" \").concat(trade===null||trade===void 0?void 0:(_trade$inputAmount2=trade.inputAmount)===null||_trade$inputAmount2===void 0?void 0:(_trade$inputAmount2$c=_trade$inputAmount2.currency)===null||_trade$inputAmount2$c===void 0?void 0:_trade$inputAmount2$c.symbol,\" for \").concat(trade===null||trade===void 0?void 0:(_trade$outputAmount=trade.outputAmount)===null||_trade$outputAmount===void 0?void 0:_trade$outputAmount.toSignificant(6),\" \").concat(trade===null||trade===void 0?void 0:(_trade$outputAmount2=trade.outputAmount)===null||_trade$outputAmount2===void 0?void 0:(_trade$outputAmount2$=_trade$outputAmount2.currency)===null||_trade$outputAmount2$===void 0?void 0:_trade$outputAmount2$.symbol);const confirmationContent=useCallback(()=>swapErrorMessage?/*#__PURE__*/React.createElement(TransactionErrorContent,{onDismiss:onDismiss,message:swapErrorMessage}):/*#__PURE__*/React.createElement(ConfirmationModalContent,{title:\"Confirm Swap\",onDismiss:onDismiss,topContent:modalHeader,bottomContent:modalBottom}),[onDismiss,modalBottom,modalHeader,swapErrorMessage]);return/*#__PURE__*/React.createElement(TransactionConfirmationModal,{isOpen:isOpen,onDismiss:onDismiss,attemptingTxn:attemptingTxn,hash:txHash,content:confirmationContent,pendingText:pendingText});}","map":{"version":3,"names":["currencyEquals","React","useCallback","useMemo","TransactionConfirmationModal","ConfirmationModalContent","TransactionErrorContent","SwapModalFooter","SwapModalHeader","tradeMeaningfullyDiffers","tradeA","tradeB","tradeType","inputAmount","currency","equalTo","outputAmount","ConfirmSwapModal","_ref","_trade$inputAmount","_trade$inputAmount2","_trade$inputAmount2$c","_trade$outputAmount","_trade$outputAmount2","_trade$outputAmount2$","trade","originalTrade","onAcceptChanges","allowedSlippage","onConfirm","onDismiss","recipient","swapErrorMessage","isOpen","attemptingTxn","txHash","showAcceptChanges","Boolean","modalHeader","createElement","modalBottom","disabledConfirm","pendingText","concat","toSignificant","symbol","confirmationContent","message","title","topContent","bottomContent","hash","content"],"sources":["/Users/synallage/Desktop/fomoswap-uni/interface-73580de922ce3ff642430d71aa24f5c053e6dd4d/src/components/swap/ConfirmSwapModal.tsx"],"sourcesContent":["import { currencyEquals, Trade } from 'fomoswap-story'\nimport React, { useCallback, useMemo } from 'react'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent\n} from '../TransactionConfirmationModal'\nimport SwapModalFooter from './SwapModalFooter'\nimport SwapModalHeader from './SwapModalHeader'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\n\nexport default function ConfirmSwapModal({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  recipient,\n  swapErrorMessage,\n  isOpen,\n  attemptingTxn,\n  txHash\n}: {\n  isOpen: boolean\n  trade: Trade | undefined\n  originalTrade: Trade | undefined\n  attemptingTxn: boolean\n  txHash: string | undefined\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  onDismiss: () => void\n}) {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade]\n  )\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = `Swapping ${trade?.inputAmount?.toSignificant(6)} ${\n    trade?.inputAmount?.currency?.symbol\n  } for ${trade?.outputAmount?.toSignificant(6)} ${trade?.outputAmount?.currency?.symbol}`\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent\n          title=\"Confirm Swap\"\n          onDismiss={onDismiss}\n          topContent={modalHeader}\n          bottomContent={modalBottom}\n        />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage]\n  )\n\n  return (\n    <TransactionConfirmationModal\n      isOpen={isOpen}\n      onDismiss={onDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n    />\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}