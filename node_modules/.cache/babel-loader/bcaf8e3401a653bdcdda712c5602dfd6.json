{"ast":null,"code":"import { createReducer } from '@reduxjs/toolkit';\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists';\nimport { updateVersion } from '../user/actions';\nimport { acceptListUpdate, addList, fetchTokenList } from './actions';\nconst initialState = {\n  byUrl: {}\n};\nexport default createReducer(initialState, builder => builder.addCase(fetchTokenList.pending, (state, {\n  meta: {\n    arg: url,\n    requestId\n  }\n}) => {\n  state.byUrl[url] = {\n    current: null,\n    pendingUpdate: null,\n    ...state.byUrl[url],\n    loadingRequestId: requestId,\n    error: null\n  };\n}).addCase(fetchTokenList.fulfilled, (state, {\n  payload: tokenList,\n  meta: {\n    arg: url\n  }\n}) => {\n  var _state$byUrl$url;\n  const current = (_state$byUrl$url = state.byUrl[url]) === null || _state$byUrl$url === void 0 ? void 0 : _state$byUrl$url.current;\n\n  // no-op if update does nothing\n  if (current) {\n    const type = getVersionUpgrade(current.version, tokenList.version);\n    if (type === VersionUpgrade.NONE) return;\n    state.byUrl[url] = {\n      ...state.byUrl[url],\n      loadingRequestId: null,\n      error: null,\n      current: current,\n      pendingUpdate: tokenList\n    };\n  } else {\n    state.byUrl[url] = {\n      ...state.byUrl[url],\n      loadingRequestId: null,\n      error: null,\n      current: tokenList,\n      pendingUpdate: null\n    };\n  }\n}).addCase(fetchTokenList.rejected, (state, {\n  error,\n  meta: {\n    requestId,\n    arg: url\n  }\n}) => {\n  var _state$byUrl$url2, _error$message;\n  if (((_state$byUrl$url2 = state.byUrl[url]) === null || _state$byUrl$url2 === void 0 ? void 0 : _state$byUrl$url2.loadingRequestId) !== requestId) {\n    // no-op since it's not the latest request\n    return;\n  }\n  state.byUrl[url] = {\n    ...state.byUrl[url],\n    loadingRequestId: null,\n    error: (_error$message = error.message) !== null && _error$message !== void 0 ? _error$message : 'Unknown error',\n    current: null,\n    pendingUpdate: null\n  };\n}).addCase(addList, (state, {\n  payload: url\n}) => {\n  if (!state.byUrl[url]) {\n    state.byUrl[url] = {\n      loadingRequestId: null,\n      pendingUpdate: null,\n      current: null,\n      error: null\n    };\n  }\n}).addCase(acceptListUpdate, (state, {\n  payload: url\n}) => {\n  var _state$byUrl$url3;\n  if (!((_state$byUrl$url3 = state.byUrl[url]) === null || _state$byUrl$url3 === void 0 ? void 0 : _state$byUrl$url3.pendingUpdate)) {\n    throw new Error('accept list update called without pending update');\n  }\n  state.byUrl[url] = {\n    ...state.byUrl[url],\n    pendingUpdate: null,\n    current: state.byUrl[url].pendingUpdate\n  };\n}).addCase(updateVersion, state => {\n  delete state.byUrl['https://unpkg.com/@uniswap/default-token-list@latest/uniswap-default.tokenlist.json'];\n}));","map":{"version":3,"names":["createReducer","getVersionUpgrade","VersionUpgrade","updateVersion","acceptListUpdate","addList","fetchTokenList","initialState","byUrl","builder","addCase","pending","state","meta","arg","url","requestId","current","pendingUpdate","loadingRequestId","error","fulfilled","payload","tokenList","_state$byUrl$url","type","version","NONE","rejected","_state$byUrl$url2","_error$message","message","_state$byUrl$url3","Error"],"sources":["/Users/synallage/Desktop/fomoswap-uni/interface-73580de922ce3ff642430d71aa24f5c053e6dd4d/src/state/lists/reducer.ts"],"sourcesContent":["import { createReducer } from '@reduxjs/toolkit'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\nimport { TokenList } from '@uniswap/token-lists/dist/types'\nimport { updateVersion } from '../user/actions'\nimport { acceptListUpdate, addList, fetchTokenList } from './actions'\n\nexport interface ListsState {\n  readonly byUrl: {\n    readonly [url: string]: {\n      readonly current: TokenList | null\n      readonly pendingUpdate: TokenList | null\n      readonly loadingRequestId: string | null\n      readonly error: string | null\n    }\n  }\n}\n\nconst initialState: ListsState = {\n  byUrl: {}\n}\n\nexport default createReducer(initialState, builder =>\n  builder\n    .addCase(fetchTokenList.pending, (state, { meta: { arg: url, requestId } }) => {\n      state.byUrl[url] = {\n        current: null,\n        pendingUpdate: null,\n        ...state.byUrl[url],\n        loadingRequestId: requestId,\n        error: null\n      }\n    })\n    .addCase(fetchTokenList.fulfilled, (state, { payload: tokenList, meta: { arg: url } }) => {\n      const current = state.byUrl[url]?.current\n\n      // no-op if update does nothing\n      if (current) {\n        const type = getVersionUpgrade(current.version, tokenList.version)\n        if (type === VersionUpgrade.NONE) return\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: current,\n          pendingUpdate: tokenList\n        }\n      } else {\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: tokenList,\n          pendingUpdate: null\n        }\n      }\n    })\n    .addCase(fetchTokenList.rejected, (state, { error, meta: { requestId, arg: url } }) => {\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\n        // no-op since it's not the latest request\n        return\n      }\n\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: error.message ?? 'Unknown error',\n        current: null,\n        pendingUpdate: null\n      }\n    })\n    .addCase(addList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = {\n          loadingRequestId: null,\n          pendingUpdate: null,\n          current: null,\n          error: null\n        }\n      }\n    })\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\n      if (!state.byUrl[url]?.pendingUpdate) {\n        throw new Error('accept list update called without pending update')\n      }\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        pendingUpdate: null,\n        current: state.byUrl[url].pendingUpdate\n      }\n    })\n    .addCase(updateVersion, state => {\n      delete state.byUrl['https://unpkg.com/@uniswap/default-token-list@latest/uniswap-default.tokenlist.json']\n    })\n)\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}