{"ast":null,"code":"import{Contract}from'@ethersproject/contracts';import{getAddress}from'@ethersproject/address';import{AddressZero}from'@ethersproject/constants';import{BigNumber}from'@ethersproject/bignumber';import{abi as IUniswapV2Router02ABI}from'@uniswap/v2-periphery/build/IUniswapV2Router02.json';import{ROUTER_ADDRESS}from'../constants';import{JSBI,Percent,Token,ETHER}from'fomoswap-storytestnet';// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value){try{return getAddress(value);}catch(_unused){return false;}}const ETHERSCAN_PREFIXES={1:'etherscan.io',3:'ropsten.etherscan.io',4:'rinkeby.etherscan.io',5:'goerli.etherscan.io',42:'kovan.etherscan.io',11155111:'sepolia.etherscan.io',130:'unichainexplorer.chaineye.tools',80084:'bartio.beratrail.io',80094:'berabeta.beratrail.io',1315:'aeneid.storyscan.xyz'};export function getEtherscanLink(chainId,data,type){const prefix=\"https://\".concat(ETHERSCAN_PREFIXES[chainId]||ETHERSCAN_PREFIXES[1]);switch(type){case'transaction':{return\"\".concat(prefix,\"/tx/\").concat(data);}case'token':{return\"\".concat(prefix,\"/token/\").concat(data);}case'address':default:{return\"\".concat(prefix,\"/address/\").concat(data);}}}// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address){let chars=arguments.length>1&&arguments[1]!==undefined?arguments[1]:4;const parsed=isAddress(address);if(!parsed){throw Error(\"Invalid 'address' parameter '\".concat(address,\"'.\"));}return\"\".concat(parsed.substring(0,chars+2),\"...\").concat(parsed.substring(42-chars));}// add 10%\nexport function calculateGasMargin(value){return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000));}// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num){return new Percent(JSBI.BigInt(num),JSBI.BigInt(10000));}export function calculateSlippageAmount(value,slippage){if(slippage<0||slippage>10000){throw Error(\"Unexpected slippage value: \".concat(slippage));}return[JSBI.divide(JSBI.multiply(value.raw,JSBI.BigInt(10000-slippage)),JSBI.BigInt(10000)),JSBI.divide(JSBI.multiply(value.raw,JSBI.BigInt(10000+slippage)),JSBI.BigInt(10000))];}// account is not optional\nexport function getSigner(library,account){return library.getSigner(account).connectUnchecked();}// account is optional\nexport function getProviderOrSigner(library,account){return account?getSigner(library,account):library;}// account is optional\nexport function getContract(address,ABI,library,account){if(!isAddress(address)||address===AddressZero){throw Error(\"Invalid 'address' parameter '\".concat(address,\"'.\"));}return new Contract(address,ABI,getProviderOrSigner(library,account));}// account is optional\nexport function getRouterContract(_,library,account){return getContract(ROUTER_ADDRESS,IUniswapV2Router02ABI,library,account);}export function escapeRegExp(string){return string.replace(/[.*+?^${}()|[\\]\\\\]/g,'\\\\$&');// $& means the whole matched string\n}export function isDefaultToken(defaultTokens,currency){var _defaultTokens$curren;if(currency===ETHER)return true;return Boolean(currency instanceof Token&&((_defaultTokens$curren=defaultTokens[currency.chainId])===null||_defaultTokens$curren===void 0?void 0:_defaultTokens$curren[currency.address]));}","map":{"version":3,"names":["Contract","getAddress","AddressZero","BigNumber","abi","IUniswapV2Router02ABI","ROUTER_ADDRESS","JSBI","Percent","Token","ETHER","isAddress","value","_unused","ETHERSCAN_PREFIXES","getEtherscanLink","chainId","data","type","prefix","concat","shortenAddress","address","chars","arguments","length","undefined","parsed","Error","substring","calculateGasMargin","mul","from","add","div","basisPointsToPercent","num","BigInt","calculateSlippageAmount","slippage","divide","multiply","raw","getSigner","library","account","connectUnchecked","getProviderOrSigner","getContract","ABI","getRouterContract","_","escapeRegExp","string","replace","isDefaultToken","defaultTokens","currency","_defaultTokens$curren","Boolean"],"sources":["/Users/synallage/Desktop/fomoswap-uni/interface-73580de922ce3ff642430d71aa24f5c053e6dd4d/src/utils/index.ts"],"sourcesContent":["import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ROUTER_ADDRESS } from '../constants'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from 'fomoswap-storytestnet'\nimport { TokenAddressMap } from '../state/lists/hooks'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nconst ETHERSCAN_PREFIXES: { [chainId in ChainId]: string } = {\n  1: 'etherscan.io',\n  3: 'ropsten.etherscan.io',\n  4: 'rinkeby.etherscan.io',\n  5: 'goerli.etherscan.io',\n  42: 'kovan.etherscan.io',\n  11155111: 'sepolia.etherscan.io',\n  130: 'unichainexplorer.chaineye.tools',\n  80084: 'bartio.beratrail.io',\n  80094: 'berabeta.beratrail.io',\n  1315: 'aeneid.storyscan.xyz'\n}\n\nexport function getEtherscanLink(chainId: ChainId, data: string, type: 'transaction' | 'token' | 'address'): string {\n  const prefix = `https://${ETHERSCAN_PREFIXES[chainId] || ETHERSCAN_PREFIXES[1]}`\n\n  switch (type) {\n    case 'transaction': {\n      return `${prefix}/tx/${data}`\n    }\n    case 'token': {\n      return `${prefix}/token/${data}`\n    }\n    case 'address':\n    default: {\n      return `${prefix}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000))\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isDefaultToken(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}