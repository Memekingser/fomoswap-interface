{"ast":null,"code":"import{MaxUint256}from'@ethersproject/constants';import{ETHER,Token,TradeType}from'fomoswap-story';import{getTradeVersion}from'../data/V1';import{Version}from'../hooks/useToggledVersion';function toHex(currencyAmount){return\"0x\".concat(currencyAmount.raw.toString(16));}function deadlineFromNow(ttl){return\"0x\".concat((Math.floor(new Date().getTime()/1000)+ttl).toString(16));}/**\n * Get the arguments to make for a swap\n * @param trade trade to get v1 arguments for swapping\n * @param options options for swapping\n */export default function v1SwapArguments(trade,options){if(getTradeVersion(trade)!==Version.v1){throw new Error('invalid trade version');}if(trade.route.pairs.length>2){throw new Error('too many pairs');}const isExactIn=trade.tradeType===TradeType.EXACT_INPUT;const inputETH=trade.inputAmount.currency===ETHER;const outputETH=trade.outputAmount.currency===ETHER;if(inputETH&&outputETH)throw new Error('ETHER to ETHER');const minimumAmountOut=toHex(trade.minimumAmountOut(options.allowedSlippage));const maximumAmountIn=toHex(trade.maximumAmountIn(options.allowedSlippage));const deadline=deadlineFromNow(options.ttl);if(isExactIn){if(inputETH){return{methodName:'ethToTokenTransferInput',args:[minimumAmountOut,deadline,options.recipient],value:maximumAmountIn};}else if(outputETH){return{methodName:'tokenToEthTransferInput',args:[maximumAmountIn,minimumAmountOut,deadline,options.recipient],value:'0x0'};}else{const outputToken=trade.outputAmount.currency;// should never happen, needed for type check\nif(!(outputToken instanceof Token)){throw new Error('token to token');}return{methodName:'tokenToTokenTransferInput',args:[maximumAmountIn,minimumAmountOut,'0x1',deadline,options.recipient,outputToken.address],value:'0x0'};}}else{if(inputETH){return{methodName:'ethToTokenTransferOutput',args:[minimumAmountOut,deadline,options.recipient],value:maximumAmountIn};}else if(outputETH){return{methodName:'tokenToEthTransferOutput',args:[minimumAmountOut,maximumAmountIn,deadline,options.recipient],value:'0x0'};}else{const output=trade.outputAmount.currency;if(!(output instanceof Token)){throw new Error('invalid output amount currency');}return{methodName:'tokenToTokenTransferOutput',args:[minimumAmountOut,maximumAmountIn,MaxUint256.toHexString(),deadline,options.recipient,output.address],value:'0x0'};}}}","map":{"version":3,"names":["MaxUint256","ETHER","Token","TradeType","getTradeVersion","Version","toHex","currencyAmount","concat","raw","toString","deadlineFromNow","ttl","Math","floor","Date","getTime","v1SwapArguments","trade","options","v1","Error","route","pairs","length","isExactIn","tradeType","EXACT_INPUT","inputETH","inputAmount","currency","outputETH","outputAmount","minimumAmountOut","allowedSlippage","maximumAmountIn","deadline","methodName","args","recipient","value","outputToken","address","output","toHexString"],"sources":["/Users/synallage/Desktop/fomoswap-uni/interface-73580de922ce3ff642430d71aa24f5c053e6dd4d/src/utils/v1SwapArguments.ts"],"sourcesContent":["import { MaxUint256 } from '@ethersproject/constants'\nimport { CurrencyAmount, ETHER, SwapParameters, Token, Trade, TradeOptions, TradeType } from 'fomoswap-story'\nimport { getTradeVersion } from '../data/V1'\nimport { Version } from '../hooks/useToggledVersion'\n\nfunction toHex(currencyAmount: CurrencyAmount): string {\n  return `0x${currencyAmount.raw.toString(16)}`\n}\n\nfunction deadlineFromNow(ttl: number): string {\n  return `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`\n}\n\n/**\n * Get the arguments to make for a swap\n * @param trade trade to get v1 arguments for swapping\n * @param options options for swapping\n */\nexport default function v1SwapArguments(trade: Trade, options: Omit<TradeOptions, 'feeOnTransfer'>): SwapParameters {\n  if (getTradeVersion(trade) !== Version.v1) {\n    throw new Error('invalid trade version')\n  }\n  if (trade.route.pairs.length > 2) {\n    throw new Error('too many pairs')\n  }\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const inputETH = trade.inputAmount.currency === ETHER\n  const outputETH = trade.outputAmount.currency === ETHER\n  if (inputETH && outputETH) throw new Error('ETHER to ETHER')\n  const minimumAmountOut = toHex(trade.minimumAmountOut(options.allowedSlippage))\n  const maximumAmountIn = toHex(trade.maximumAmountIn(options.allowedSlippage))\n  const deadline = deadlineFromNow(options.ttl)\n  if (isExactIn) {\n    if (inputETH) {\n      return {\n        methodName: 'ethToTokenTransferInput',\n        args: [minimumAmountOut, deadline, options.recipient],\n        value: maximumAmountIn\n      }\n    } else if (outputETH) {\n      return {\n        methodName: 'tokenToEthTransferInput',\n        args: [maximumAmountIn, minimumAmountOut, deadline, options.recipient],\n        value: '0x0'\n      }\n    } else {\n      const outputToken = trade.outputAmount.currency\n      // should never happen, needed for type check\n      if (!(outputToken instanceof Token)) {\n        throw new Error('token to token')\n      }\n      return {\n        methodName: 'tokenToTokenTransferInput',\n        args: [maximumAmountIn, minimumAmountOut, '0x1', deadline, options.recipient, outputToken.address],\n        value: '0x0'\n      }\n    }\n  } else {\n    if (inputETH) {\n      return {\n        methodName: 'ethToTokenTransferOutput',\n        args: [minimumAmountOut, deadline, options.recipient],\n        value: maximumAmountIn\n      }\n    } else if (outputETH) {\n      return {\n        methodName: 'tokenToEthTransferOutput',\n        args: [minimumAmountOut, maximumAmountIn, deadline, options.recipient],\n        value: '0x0'\n      }\n    } else {\n      const output = trade.outputAmount.currency\n      if (!(output instanceof Token)) {\n        throw new Error('invalid output amount currency')\n      }\n\n      return {\n        methodName: 'tokenToTokenTransferOutput',\n        args: [\n          minimumAmountOut,\n          maximumAmountIn,\n          MaxUint256.toHexString(),\n          deadline,\n          options.recipient,\n          output.address\n        ],\n        value: '0x0'\n      }\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}