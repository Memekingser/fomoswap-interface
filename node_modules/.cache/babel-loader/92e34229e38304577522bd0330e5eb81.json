{"ast":null,"code":"import _objectSpread from\"/Users/synallage/Desktop/fomoswap-uni/interface-73580de922ce3ff642430d71aa24f5c053e6dd4d/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{createReducer}from'@reduxjs/toolkit';import{getVersionUpgrade,VersionUpgrade}from'@uniswap/token-lists';import{updateVersion}from'../user/actions';import{acceptListUpdate,addList,fetchTokenList}from'./actions';const initialState={byUrl:{}};export default createReducer(initialState,builder=>builder.addCase(fetchTokenList.pending,(state,_ref)=>{let{meta:{arg:url,requestId}}=_ref;state.byUrl[url]=_objectSpread(_objectSpread({current:null,pendingUpdate:null},state.byUrl[url]),{},{loadingRequestId:requestId,error:null});}).addCase(fetchTokenList.fulfilled,(state,_ref2)=>{var _state$byUrl$url;let{payload:tokenList,meta:{arg:url}}=_ref2;const current=(_state$byUrl$url=state.byUrl[url])===null||_state$byUrl$url===void 0?void 0:_state$byUrl$url.current;// no-op if update does nothing\nif(current){const type=getVersionUpgrade(current.version,tokenList.version);if(type===VersionUpgrade.NONE)return;state.byUrl[url]=_objectSpread(_objectSpread({},state.byUrl[url]),{},{loadingRequestId:null,error:null,current:current,pendingUpdate:tokenList});}else{state.byUrl[url]=_objectSpread(_objectSpread({},state.byUrl[url]),{},{loadingRequestId:null,error:null,current:tokenList,pendingUpdate:null});}}).addCase(fetchTokenList.rejected,(state,_ref3)=>{var _state$byUrl$url2,_error$message;let{error,meta:{requestId,arg:url}}=_ref3;if(((_state$byUrl$url2=state.byUrl[url])===null||_state$byUrl$url2===void 0?void 0:_state$byUrl$url2.loadingRequestId)!==requestId){// no-op since it's not the latest request\nreturn;}state.byUrl[url]=_objectSpread(_objectSpread({},state.byUrl[url]),{},{loadingRequestId:null,error:(_error$message=error.message)!==null&&_error$message!==void 0?_error$message:'Unknown error',current:null,pendingUpdate:null});}).addCase(addList,(state,_ref4)=>{let{payload:url}=_ref4;if(!state.byUrl[url]){state.byUrl[url]={loadingRequestId:null,pendingUpdate:null,current:null,error:null};}}).addCase(acceptListUpdate,(state,_ref5)=>{var _state$byUrl$url3;let{payload:url}=_ref5;if(!((_state$byUrl$url3=state.byUrl[url])===null||_state$byUrl$url3===void 0?void 0:_state$byUrl$url3.pendingUpdate)){throw new Error('accept list update called without pending update');}state.byUrl[url]=_objectSpread(_objectSpread({},state.byUrl[url]),{},{pendingUpdate:null,current:state.byUrl[url].pendingUpdate});}).addCase(updateVersion,state=>{delete state.byUrl['https://unpkg.com/@uniswap/default-token-list@latest/uniswap-default.tokenlist.json'];}));","map":{"version":3,"names":["createReducer","getVersionUpgrade","VersionUpgrade","updateVersion","acceptListUpdate","addList","fetchTokenList","initialState","byUrl","builder","addCase","pending","state","_ref","meta","arg","url","requestId","_objectSpread","current","pendingUpdate","loadingRequestId","error","fulfilled","_ref2","_state$byUrl$url","payload","tokenList","type","version","NONE","rejected","_ref3","_state$byUrl$url2","_error$message","message","_ref4","_ref5","_state$byUrl$url3","Error"],"sources":["/Users/synallage/Desktop/fomoswap-uni/interface-73580de922ce3ff642430d71aa24f5c053e6dd4d/src/state/lists/reducer.ts"],"sourcesContent":["import { createReducer } from '@reduxjs/toolkit'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\nimport { TokenList } from '@uniswap/token-lists/dist/types'\nimport { updateVersion } from '../user/actions'\nimport { acceptListUpdate, addList, fetchTokenList } from './actions'\n\nexport interface ListsState {\n  readonly byUrl: {\n    readonly [url: string]: {\n      readonly current: TokenList | null\n      readonly pendingUpdate: TokenList | null\n      readonly loadingRequestId: string | null\n      readonly error: string | null\n    }\n  }\n}\n\nconst initialState: ListsState = {\n  byUrl: {}\n}\n\nexport default createReducer(initialState, builder =>\n  builder\n    .addCase(fetchTokenList.pending, (state, { meta: { arg: url, requestId } }) => {\n      state.byUrl[url] = {\n        current: null,\n        pendingUpdate: null,\n        ...state.byUrl[url],\n        loadingRequestId: requestId,\n        error: null\n      }\n    })\n    .addCase(fetchTokenList.fulfilled, (state, { payload: tokenList, meta: { arg: url } }) => {\n      const current = state.byUrl[url]?.current\n\n      // no-op if update does nothing\n      if (current) {\n        const type = getVersionUpgrade(current.version, tokenList.version)\n        if (type === VersionUpgrade.NONE) return\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: current,\n          pendingUpdate: tokenList\n        }\n      } else {\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: tokenList,\n          pendingUpdate: null\n        }\n      }\n    })\n    .addCase(fetchTokenList.rejected, (state, { error, meta: { requestId, arg: url } }) => {\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\n        // no-op since it's not the latest request\n        return\n      }\n\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: error.message ?? 'Unknown error',\n        current: null,\n        pendingUpdate: null\n      }\n    })\n    .addCase(addList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = {\n          loadingRequestId: null,\n          pendingUpdate: null,\n          current: null,\n          error: null\n        }\n      }\n    })\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\n      if (!state.byUrl[url]?.pendingUpdate) {\n        throw new Error('accept list update called without pending update')\n      }\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        pendingUpdate: null,\n        current: state.byUrl[url].pendingUpdate\n      }\n    })\n    .addCase(updateVersion, state => {\n      delete state.byUrl['https://unpkg.com/@uniswap/default-token-list@latest/uniswap-default.tokenlist.json']\n    })\n)\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}