{"ast":null,"code":"import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { parse } from 'qs';\nimport { updateUserDarkMode } from '../state/user/actions';\nexport default function DarkModeQueryParamReader({\n  location: {\n    search\n  }\n}) {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!search) return;\n    if (search.length < 2) return;\n    const parsed = parse(search, {\n      parseArrays: false,\n      ignoreQueryPrefix: true\n    });\n    const theme = parsed.theme;\n    if (typeof theme !== 'string') return;\n    if (theme.toLowerCase() === 'light') {\n      dispatch(updateUserDarkMode({\n        userDarkMode: false\n      }));\n    } else if (theme.toLowerCase() === 'dark') {\n      dispatch(updateUserDarkMode({\n        userDarkMode: true\n      }));\n    }\n  }, [dispatch, search]);\n  return null;\n}","map":{"version":3,"names":["useEffect","useDispatch","parse","updateUserDarkMode","DarkModeQueryParamReader","location","search","dispatch","length","parsed","parseArrays","ignoreQueryPrefix","theme","toLowerCase","userDarkMode"],"sources":["/Users/synallage/Desktop/fomoswap-uni/interface-73580de922ce3ff642430d71aa24f5c053e6dd4d/src/theme/DarkModeQueryParamReader.tsx"],"sourcesContent":["import { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { parse } from 'qs'\nimport { AppDispatch } from '../state'\nimport { updateUserDarkMode } from '../state/user/actions'\n\nexport default function DarkModeQueryParamReader({ location: { search } }: RouteComponentProps) {\n  const dispatch = useDispatch<AppDispatch>()\n\n  useEffect(() => {\n    if (!search) return\n    if (search.length < 2) return\n\n    const parsed = parse(search, {\n      parseArrays: false,\n      ignoreQueryPrefix: true\n    })\n\n    const theme = parsed.theme\n\n    if (typeof theme !== 'string') return\n\n    if (theme.toLowerCase() === 'light') {\n      dispatch(updateUserDarkMode({ userDarkMode: false }))\n    } else if (theme.toLowerCase() === 'dark') {\n      dispatch(updateUserDarkMode({ userDarkMode: true }))\n    }\n  }, [dispatch, search])\n\n  return null\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,aAAa;AAEzC,SAASC,KAAK,QAAQ,IAAI;AAE1B,SAASC,kBAAkB,QAAQ,uBAAuB;AAE1D,eAAe,SAASC,wBAAwBA,CAAC;EAAEC,QAAQ,EAAE;IAAEC;EAAO;AAAuB,CAAC,EAAE;EAC9F,MAAMC,QAAQ,GAAGN,WAAW,CAAc,CAAC;EAE3CD,SAAS,CAAC,MAAM;IACd,IAAI,CAACM,MAAM,EAAE;IACb,IAAIA,MAAM,CAACE,MAAM,GAAG,CAAC,EAAE;IAEvB,MAAMC,MAAM,GAAGP,KAAK,CAACI,MAAM,EAAE;MAC3BI,WAAW,EAAE,KAAK;MAClBC,iBAAiB,EAAE;IACrB,CAAC,CAAC;IAEF,MAAMC,KAAK,GAAGH,MAAM,CAACG,KAAK;IAE1B,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAE/B,IAAIA,KAAK,CAACC,WAAW,CAAC,CAAC,KAAK,OAAO,EAAE;MACnCN,QAAQ,CAACJ,kBAAkB,CAAC;QAAEW,YAAY,EAAE;MAAM,CAAC,CAAC,CAAC;IACvD,CAAC,MAAM,IAAIF,KAAK,CAACC,WAAW,CAAC,CAAC,KAAK,MAAM,EAAE;MACzCN,QAAQ,CAACJ,kBAAkB,CAAC;QAAEW,YAAY,EAAE;MAAK,CAAC,CAAC,CAAC;IACtD;EACF,CAAC,EAAE,CAACP,QAAQ,EAAED,MAAM,CAAC,CAAC;EAEtB,OAAO,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module"}