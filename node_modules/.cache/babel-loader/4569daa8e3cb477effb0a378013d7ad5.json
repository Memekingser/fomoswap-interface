{"ast":null,"code":"import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useActiveWeb3React } from '../../hooks';\nimport { useAddPopup, useBlockNumber } from '../application/hooks';\nimport { checkedTransaction, finalizeTransaction } from './actions';\nexport function shouldCheck(lastBlockNumber, tx) {\n  if (tx.receipt) return false;\n  if (!tx.lastCheckedBlockNumber) return true;\n  const blocksSinceCheck = lastBlockNumber - tx.lastCheckedBlockNumber;\n  if (blocksSinceCheck < 1) return false;\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60;\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9;\n  } else if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2;\n  } else {\n    // otherwise every block\n    return true;\n  }\n}\nexport default function Updater() {\n  var _state$chainId;\n  const {\n    chainId,\n    library\n  } = useActiveWeb3React();\n  const lastBlockNumber = useBlockNumber();\n  const dispatch = useDispatch();\n  const state = useSelector(state => state.transactions);\n  const transactions = chainId ? (_state$chainId = state[chainId]) !== null && _state$chainId !== void 0 ? _state$chainId : {} : {};\n\n  // show popup on confirm\n  const addPopup = useAddPopup();\n  useEffect(() => {\n    if (!chainId || !library || !lastBlockNumber) return;\n    Object.keys(transactions).filter(hash => shouldCheck(lastBlockNumber, transactions[hash])).forEach(hash => {\n      library.getTransactionReceipt(hash).then(receipt => {\n        if (receipt) {\n          var _transactions$hash;\n          dispatch(finalizeTransaction({\n            chainId,\n            hash,\n            receipt: {\n              blockHash: receipt.blockHash,\n              blockNumber: receipt.blockNumber,\n              contractAddress: receipt.contractAddress,\n              from: receipt.from,\n              status: receipt.status,\n              to: receipt.to,\n              transactionHash: receipt.transactionHash,\n              transactionIndex: receipt.transactionIndex\n            }\n          }));\n          addPopup({\n            txn: {\n              hash,\n              success: receipt.status === 1,\n              summary: (_transactions$hash = transactions[hash]) === null || _transactions$hash === void 0 ? void 0 : _transactions$hash.summary\n            }\n          }, hash);\n        } else {\n          dispatch(checkedTransaction({\n            chainId,\n            hash,\n            blockNumber: lastBlockNumber\n          }));\n        }\n      }).catch(error => {\n        console.error(`failed to check transaction hash: ${hash}`, error);\n      });\n    });\n  }, [chainId, library, transactions, lastBlockNumber, dispatch, addPopup]);\n  return null;\n}","map":{"version":3,"names":["useEffect","useDispatch","useSelector","useActiveWeb3React","useAddPopup","useBlockNumber","checkedTransaction","finalizeTransaction","shouldCheck","lastBlockNumber","tx","receipt","lastCheckedBlockNumber","blocksSinceCheck","minutesPending","Date","getTime","addedTime","Updater","_state$chainId","chainId","library","dispatch","state","transactions","addPopup","Object","keys","filter","hash","forEach","getTransactionReceipt","then","_transactions$hash","blockHash","blockNumber","contractAddress","from","status","to","transactionHash","transactionIndex","txn","success","summary","catch","error","console"],"sources":["/Users/synallage/Desktop/fomoswap-uni/interface-73580de922ce3ff642430d71aa24f5c053e6dd4d/src/state/transactions/updater.tsx"],"sourcesContent":["import { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useAddPopup, useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport { checkedTransaction, finalizeTransaction } from './actions'\n\nexport function shouldCheck(\n  lastBlockNumber: number,\n  tx: { addedTime: number; receipt?: {}; lastCheckedBlockNumber?: number }\n): boolean {\n  if (tx.receipt) return false\n  if (!tx.lastCheckedBlockNumber) return true\n  const blocksSinceCheck = lastBlockNumber - tx.lastCheckedBlockNumber\n  if (blocksSinceCheck < 1) return false\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9\n  } else if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2\n  } else {\n    // otherwise every block\n    return true\n  }\n}\n\nexport default function Updater() {\n  const { chainId, library } = useActiveWeb3React()\n\n  const lastBlockNumber = useBlockNumber()\n\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['transactions']>(state => state.transactions)\n\n  const transactions = chainId ? state[chainId] ?? {} : {}\n\n  // show popup on confirm\n  const addPopup = useAddPopup()\n\n  useEffect(() => {\n    if (!chainId || !library || !lastBlockNumber) return\n\n    Object.keys(transactions)\n      .filter(hash => shouldCheck(lastBlockNumber, transactions[hash]))\n      .forEach(hash => {\n        library\n          .getTransactionReceipt(hash)\n          .then(receipt => {\n            if (receipt) {\n              dispatch(\n                finalizeTransaction({\n                  chainId,\n                  hash,\n                  receipt: {\n                    blockHash: receipt.blockHash,\n                    blockNumber: receipt.blockNumber,\n                    contractAddress: receipt.contractAddress,\n                    from: receipt.from,\n                    status: receipt.status,\n                    to: receipt.to,\n                    transactionHash: receipt.transactionHash,\n                    transactionIndex: receipt.transactionIndex\n                  }\n                })\n              )\n\n              addPopup(\n                {\n                  txn: {\n                    hash,\n                    success: receipt.status === 1,\n                    summary: transactions[hash]?.summary\n                  }\n                },\n                hash\n              )\n            } else {\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: lastBlockNumber }))\n            }\n          })\n          .catch(error => {\n            console.error(`failed to check transaction hash: ${hash}`, error)\n          })\n      })\n  }, [chainId, library, transactions, lastBlockNumber, dispatch, addPopup])\n\n  return null\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}