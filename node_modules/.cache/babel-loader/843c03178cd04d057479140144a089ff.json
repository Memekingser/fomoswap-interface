{"ast":null,"code":"var _jsxFileName = \"/Users/synallage/Desktop/fomoswap-uni/interface-73580de922ce3ff642430d71aa24f5c053e6dd4d/src/pages/AddLiquidity/index.tsx\";\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { currencyEquals, ETHER, WETH } from 'fomoswap-storytestnet';\nimport React, { useCallback, useContext, useState } from 'react';\nimport { Plus } from 'react-feather';\nimport ReactGA from 'react-ga';\nimport { Text } from 'rebass';\nimport { ThemeContext } from 'styled-components';\nimport { ButtonError, ButtonLight, ButtonPrimary } from '../../components/Button';\nimport { BlueCard, GreyCard, LightCard } from '../../components/Card';\nimport { AutoColumn, ColumnCenter } from '../../components/Column';\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal';\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel';\nimport DoubleCurrencyLogo from '../../components/DoubleLogo';\nimport { AddRemoveTabs } from '../../components/NavigationTabs';\nimport { MinimalPositionCard } from '../../components/PositionCard';\nimport Row, { RowBetween, RowFlat } from '../../components/Row';\nimport { ROUTER_ADDRESS } from '../../constants';\nimport { PairState } from '../../data/Reserves';\nimport { useActiveWeb3React } from '../../hooks';\nimport { useCurrency } from '../../hooks/Tokens';\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback';\nimport { useWalletModalToggle } from '../../state/application/hooks';\nimport { Field } from '../../state/mint/actions';\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks';\nimport { useTransactionAdder } from '../../state/transactions/hooks';\nimport { useIsExpertMode, useUserDeadline, useUserSlippageTolerance } from '../../state/user/hooks';\nimport { TYPE } from '../../theme';\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils';\nimport { maxAmountSpend } from '../../utils/maxAmountSpend';\nimport { wrappedCurrency } from '../../utils/wrappedCurrency';\nimport AppBody from '../AppBody';\nimport { Dots, Wrapper } from '../Pool/styleds';\nimport { ConfirmAddModalBottom } from './ConfirmAddModalBottom';\nimport { currencyId } from '../../utils/currencyId';\nimport { PoolPriceBar } from './PoolPriceBar';\nexport default function AddLiquidity({\n  match: {\n    params: {\n      currencyIdA,\n      currencyIdB\n    }\n  },\n  history\n}) {\n  var _parsedAmounts$depend, _parsedAmounts$depend2, _parsedAmounts$Field$3, _currencies$Field$CUR9, _parsedAmounts$Field$4, _currencies$Field$CUR10, _currencies$Field$CUR11, _currencies$Field$CUR12, _currencies$Field$CUR13, _currencies$Field$CUR14;\n  const {\n    account,\n    chainId,\n    library\n  } = useActiveWeb3React();\n  const theme = useContext(ThemeContext);\n  const currencyA = useCurrency(currencyIdA);\n  const currencyB = useCurrency(currencyIdB);\n  const oneCurrencyIsWETH = Boolean(chainId && (currencyA && currencyEquals(currencyA, WETH[chainId]) || currencyB && currencyEquals(currencyB, WETH[chainId])));\n  const toggleWalletModal = useWalletModalToggle(); // toggle wallet when disconnected\n\n  const expertMode = useIsExpertMode();\n\n  // mint state\n  const {\n    independentField,\n    typedValue,\n    otherTypedValue\n  } = useMintState();\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error\n  } = useDerivedMintInfo(currencyA !== null && currencyA !== void 0 ? currencyA : undefined, currencyB !== null && currencyB !== void 0 ? currencyB : undefined);\n  const {\n    onFieldAInput,\n    onFieldBInput\n  } = useMintActionHandlers(noLiquidity);\n  const isValid = !error;\n\n  // modal and loading\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [attemptingTxn, setAttemptingTxn] = useState(false); // clicked confirm\n\n  // txn values\n  const [deadline] = useUserDeadline(); // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance(); // custom from users\n  const [txHash, setTxHash] = useState('');\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : (_parsedAmounts$depend = (_parsedAmounts$depend2 = parsedAmounts[dependentField]) === null || _parsedAmounts$depend2 === void 0 ? void 0 : _parsedAmounts$depend2.toSignificant(6)) !== null && _parsedAmounts$depend !== void 0 ? _parsedAmounts$depend : ''\n  };\n\n  // get the max amounts user can add\n  const maxAmounts = [Field.CURRENCY_A, Field.CURRENCY_B].reduce((accumulator, field) => {\n    return {\n      ...accumulator,\n      [field]: maxAmountSpend(currencyBalances[field])\n    };\n  }, {});\n  const atMaxAmounts = [Field.CURRENCY_A, Field.CURRENCY_B].reduce((accumulator, field) => {\n    var _maxAmounts$field, _parsedAmounts$field;\n    return {\n      ...accumulator,\n      [field]: (_maxAmounts$field = maxAmounts[field]) === null || _maxAmounts$field === void 0 ? void 0 : _maxAmounts$field.equalTo((_parsedAmounts$field = parsedAmounts[field]) !== null && _parsedAmounts$field !== void 0 ? _parsedAmounts$field : '0')\n    };\n  }, {});\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS);\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS);\n  const addTransaction = useTransactionAdder();\n  async function onAdd() {\n    if (!chainId || !library || !account) return;\n    const router = getRouterContract(chainId, library, account);\n    const {\n      [Field.CURRENCY_A]: parsedAmountA,\n      [Field.CURRENCY_B]: parsedAmountB\n    } = parsedAmounts;\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB) {\n      return;\n    }\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0]\n    };\n    const deadlineFromNow = Math.ceil(Date.now() / 1000) + deadline;\n    let estimate, method, args, value;\n    if (currencyA === ETHER || currencyB === ETHER) {\n      var _wrappedCurrency$addr, _wrappedCurrency;\n      const tokenBIsETH = currencyB === ETHER;\n      estimate = router.estimateGas.addLiquidityETH;\n      method = router.addLiquidityETH;\n      args = [(_wrappedCurrency$addr = (_wrappedCurrency = wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)) === null || _wrappedCurrency === void 0 ? void 0 : _wrappedCurrency.address) !== null && _wrappedCurrency$addr !== void 0 ? _wrappedCurrency$addr : '',\n      // token\n      (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(),\n      // token desired\n      amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\n      // token min\n      amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\n      // eth min\n      account, deadlineFromNow];\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString());\n    } else {\n      var _wrappedCurrency$addr2, _wrappedCurrency2, _wrappedCurrency$addr3, _wrappedCurrency3;\n      estimate = router.estimateGas.addLiquidity;\n      method = router.addLiquidity;\n      args = [(_wrappedCurrency$addr2 = (_wrappedCurrency2 = wrappedCurrency(currencyA, chainId)) === null || _wrappedCurrency2 === void 0 ? void 0 : _wrappedCurrency2.address) !== null && _wrappedCurrency$addr2 !== void 0 ? _wrappedCurrency$addr2 : '', (_wrappedCurrency$addr3 = (_wrappedCurrency3 = wrappedCurrency(currencyB, chainId)) === null || _wrappedCurrency3 === void 0 ? void 0 : _wrappedCurrency3.address) !== null && _wrappedCurrency$addr3 !== void 0 ? _wrappedCurrency$addr3 : '', parsedAmountA.raw.toString(), parsedAmountB.raw.toString(), amountsMin[Field.CURRENCY_A].toString(), amountsMin[Field.CURRENCY_B].toString(), account, deadlineFromNow];\n      value = null;\n    }\n    setAttemptingTxn(true);\n    await estimate(...args, value ? {\n      value\n    } : {}).then(estimatedGasLimit => method(...args, {\n      ...(value ? {\n        value\n      } : {}),\n      gasLimit: calculateGasMargin(estimatedGasLimit)\n    }).then(response => {\n      var _parsedAmounts$Field$, _currencies$Field$CUR, _parsedAmounts$Field$2, _currencies$Field$CUR2, _currencies$Field$CUR3, _currencies$Field$CUR4;\n      setAttemptingTxn(false);\n      addTransaction(response, {\n        summary: 'Add ' + ((_parsedAmounts$Field$ = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$ === void 0 ? void 0 : _parsedAmounts$Field$.toSignificant(3)) + ' ' + ((_currencies$Field$CUR = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR === void 0 ? void 0 : _currencies$Field$CUR.symbol) + ' and ' + ((_parsedAmounts$Field$2 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$2 === void 0 ? void 0 : _parsedAmounts$Field$2.toSignificant(3)) + ' ' + ((_currencies$Field$CUR2 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR2 === void 0 ? void 0 : _currencies$Field$CUR2.symbol)\n      });\n      setTxHash(response.hash);\n      ReactGA.event({\n        category: 'Liquidity',\n        action: 'Add',\n        label: [(_currencies$Field$CUR3 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR3 === void 0 ? void 0 : _currencies$Field$CUR3.symbol, (_currencies$Field$CUR4 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR4 === void 0 ? void 0 : _currencies$Field$CUR4.symbol].join('/')\n      });\n    })).catch(error => {\n      setAttemptingTxn(false);\n      // we only care if the error is something _other_ than the user rejected the tx\n      if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n        console.error(error);\n      }\n    });\n  }\n  const modalHeader = () => {\n    var _currencies$Field$CUR5, _currencies$Field$CUR6, _currencies$Field$CUR7, _currencies$Field$CUR8;\n    return noLiquidity ? /*#__PURE__*/React.createElement(AutoColumn, {\n      gap: \"20px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(LightCard, {\n      mt: \"20px\",\n      borderRadius: \"20px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(RowFlat, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      fontSize: \"48px\",\n      fontWeight: 500,\n      lineHeight: \"42px\",\n      marginRight: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }\n    }, ((_currencies$Field$CUR5 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR5 === void 0 ? void 0 : _currencies$Field$CUR5.symbol) + '/' + ((_currencies$Field$CUR6 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR6 === void 0 ? void 0 : _currencies$Field$CUR6.symbol)), /*#__PURE__*/React.createElement(DoubleCurrencyLogo, {\n      currency0: currencies[Field.CURRENCY_A],\n      currency1: currencies[Field.CURRENCY_B],\n      size: 30,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }\n    })))) : /*#__PURE__*/React.createElement(AutoColumn, {\n      gap: \"20px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(RowFlat, {\n      style: {\n        marginTop: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      fontSize: \"48px\",\n      fontWeight: 500,\n      lineHeight: \"42px\",\n      marginRight: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }\n    }, liquidityMinted === null || liquidityMinted === void 0 ? void 0 : liquidityMinted.toSignificant(6)), /*#__PURE__*/React.createElement(DoubleCurrencyLogo, {\n      currency0: currencies[Field.CURRENCY_A],\n      currency1: currencies[Field.CURRENCY_B],\n      size: 30,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      fontSize: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }\n    }, ((_currencies$Field$CUR7 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR7 === void 0 ? void 0 : _currencies$Field$CUR7.symbol) + '/' + ((_currencies$Field$CUR8 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR8 === void 0 ? void 0 : _currencies$Field$CUR8.symbol) + ' Pool Tokens')), /*#__PURE__*/React.createElement(TYPE.italic, {\n      fontSize: 12,\n      textAlign: \"left\",\n      padding: '8px 0 0 0 ',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }\n    }, `Output is estimated. If the price changes by more than ${allowedSlippage / 100}% your transaction will revert.`));\n  };\n  const modalBottom = () => {\n    return /*#__PURE__*/React.createElement(ConfirmAddModalBottom, {\n      price: price,\n      currencies: currencies,\n      parsedAmounts: parsedAmounts,\n      noLiquidity: noLiquidity,\n      onAdd: onAdd,\n      poolTokenPercentage: poolTokenPercentage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 7\n      }\n    });\n  };\n  const pendingText = `Supplying ${(_parsedAmounts$Field$3 = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$3 === void 0 ? void 0 : _parsedAmounts$Field$3.toSignificant(6)} ${(_currencies$Field$CUR9 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR9 === void 0 ? void 0 : _currencies$Field$CUR9.symbol} and ${(_parsedAmounts$Field$4 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$4 === void 0 ? void 0 : _parsedAmounts$Field$4.toSignificant(6)} ${(_currencies$Field$CUR10 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR10 === void 0 ? void 0 : _currencies$Field$CUR10.symbol}`;\n  const handleCurrencyASelect = useCallback(currencyA => {\n    const newCurrencyIdA = currencyId(currencyA);\n    if (newCurrencyIdA === currencyIdB) {\n      history.push(`/add/${currencyIdB}/${currencyIdA}`);\n    } else {\n      history.push(`/add/${newCurrencyIdA}/${currencyIdB}`);\n    }\n  }, [currencyIdB, history, currencyIdA]);\n  const handleCurrencyBSelect = useCallback(currencyB => {\n    const newCurrencyIdB = currencyId(currencyB);\n    if (currencyIdA === newCurrencyIdB) {\n      if (currencyIdB) {\n        history.push(`/add/${currencyIdB}/${newCurrencyIdB}`);\n      } else {\n        history.push(`/add/${newCurrencyIdB}`);\n      }\n    } else {\n      history.push(`/add/${currencyIdA ? currencyIdA : 'ETH'}/${newCurrencyIdB}`);\n    }\n  }, [currencyIdA, history, currencyIdB]);\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false);\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('');\n    }\n    setTxHash('');\n  }, [onFieldAInput, txHash]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AppBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AddRemoveTabs, {\n    adding: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TransactionConfirmationModal, {\n    isOpen: showConfirm,\n    onDismiss: handleDismissConfirmation,\n    attemptingTxn: attemptingTxn,\n    hash: txHash,\n    content: () => /*#__PURE__*/React.createElement(ConfirmationModalContent, {\n      title: noLiquidity ? 'You are creating a pool' : 'You will receive',\n      onDismiss: handleDismissConfirmation,\n      topContent: modalHeader,\n      bottomContent: modalBottom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 15\n      }\n    }),\n    pendingText: pendingText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 11\n    }\n  }, noLiquidity && /*#__PURE__*/React.createElement(ColumnCenter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(BlueCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.link, {\n    fontWeight: 600,\n    color: 'primaryText1',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 21\n    }\n  }, \"You are the first liquidity provider.\"), /*#__PURE__*/React.createElement(TYPE.link, {\n    fontWeight: 400,\n    color: 'primaryText1',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 21\n    }\n  }, \"The ratio of tokens you add will set the price of this pool.\"), /*#__PURE__*/React.createElement(TYPE.link, {\n    fontWeight: 400,\n    color: 'primaryText1',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 21\n    }\n  }, \"Once you are happy with the rate click supply to review.\")))), /*#__PURE__*/React.createElement(CurrencyInputPanel, {\n    value: formattedAmounts[Field.CURRENCY_A],\n    onUserInput: onFieldAInput,\n    onMax: () => {\n      var _maxAmounts$Field$CUR, _maxAmounts$Field$CUR2;\n      onFieldAInput((_maxAmounts$Field$CUR = (_maxAmounts$Field$CUR2 = maxAmounts[Field.CURRENCY_A]) === null || _maxAmounts$Field$CUR2 === void 0 ? void 0 : _maxAmounts$Field$CUR2.toExact()) !== null && _maxAmounts$Field$CUR !== void 0 ? _maxAmounts$Field$CUR : '');\n    },\n    onCurrencySelect: handleCurrencyASelect,\n    showMaxButton: !atMaxAmounts[Field.CURRENCY_A],\n    currency: currencies[Field.CURRENCY_A],\n    id: \"add-liquidity-input-tokena\",\n    showCommonBases: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ColumnCenter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Plus, {\n    size: \"16\",\n    color: theme.text2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(CurrencyInputPanel, {\n    value: formattedAmounts[Field.CURRENCY_B],\n    onUserInput: onFieldBInput,\n    onCurrencySelect: handleCurrencyBSelect,\n    onMax: () => {\n      var _maxAmounts$Field$CUR3, _maxAmounts$Field$CUR4;\n      onFieldBInput((_maxAmounts$Field$CUR3 = (_maxAmounts$Field$CUR4 = maxAmounts[Field.CURRENCY_B]) === null || _maxAmounts$Field$CUR4 === void 0 ? void 0 : _maxAmounts$Field$CUR4.toExact()) !== null && _maxAmounts$Field$CUR3 !== void 0 ? _maxAmounts$Field$CUR3 : '');\n    },\n    showMaxButton: !atMaxAmounts[Field.CURRENCY_B],\n    currency: currencies[Field.CURRENCY_B],\n    id: \"add-liquidity-input-tokenb\",\n    showCommonBases: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 13\n    }\n  }), currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(GreyCard, {\n    padding: \"0px\",\n    borderRadius: '20px',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    padding: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.subHeader, {\n    fontWeight: 500,\n    fontSize: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 21\n    }\n  }, noLiquidity ? 'Initial prices' : 'Prices', \" and pool share\")), ' ', /*#__PURE__*/React.createElement(LightCard, {\n    padding: \"1rem\",\n    borderRadius: '20px',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(PoolPriceBar, {\n    currencies: currencies,\n    poolTokenPercentage: poolTokenPercentage,\n    noLiquidity: noLiquidity,\n    price: price,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 21\n    }\n  })))), !account ? /*#__PURE__*/React.createElement(ButtonLight, {\n    onClick: toggleWalletModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 15\n    }\n  }, \"Connect Wallet\") : /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: 'md',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 15\n    }\n  }, (approvalA === ApprovalState.NOT_APPROVED || approvalA === ApprovalState.PENDING || approvalB === ApprovalState.NOT_APPROVED || approvalB === ApprovalState.PENDING) && isValid && /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 21\n    }\n  }, approvalA !== ApprovalState.APPROVED && /*#__PURE__*/React.createElement(ButtonPrimary, {\n    onClick: approveACallback,\n    disabled: approvalA === ApprovalState.PENDING,\n    width: approvalB !== ApprovalState.APPROVED ? '48%' : '100%',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 25\n    }\n  }, approvalA === ApprovalState.PENDING ? /*#__PURE__*/React.createElement(Dots, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 29\n    }\n  }, \"Approving \", (_currencies$Field$CUR11 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR11 === void 0 ? void 0 : _currencies$Field$CUR11.symbol) : 'Approve ' + ((_currencies$Field$CUR12 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR12 === void 0 ? void 0 : _currencies$Field$CUR12.symbol)), approvalB !== ApprovalState.APPROVED && /*#__PURE__*/React.createElement(ButtonPrimary, {\n    onClick: approveBCallback,\n    disabled: approvalB === ApprovalState.PENDING,\n    width: approvalA !== ApprovalState.APPROVED ? '48%' : '100%',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 25\n    }\n  }, approvalB === ApprovalState.PENDING ? /*#__PURE__*/React.createElement(Dots, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 29\n    }\n  }, \"Approving \", (_currencies$Field$CUR13 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR13 === void 0 ? void 0 : _currencies$Field$CUR13.symbol) : 'Approve ' + ((_currencies$Field$CUR14 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR14 === void 0 ? void 0 : _currencies$Field$CUR14.symbol))), /*#__PURE__*/React.createElement(ButtonError, {\n    onClick: () => {\n      expertMode ? onAdd() : setShowConfirm(true);\n    },\n    disabled: !isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED,\n    error: !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontSize: 20,\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 19\n    }\n  }, error !== null && error !== void 0 ? error : 'Supply')))))), pair && !noLiquidity && pairState !== PairState.INVALID ? /*#__PURE__*/React.createElement(AutoColumn, {\n    style: {\n      minWidth: '20rem',\n      marginTop: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MinimalPositionCard, {\n    showUnwrapped: oneCurrencyIsWETH,\n    pair: pair,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 11\n    }\n  })) : null);\n}","map":{"version":3,"names":["BigNumber","currencyEquals","ETHER","WETH","React","useCallback","useContext","useState","Plus","ReactGA","Text","ThemeContext","ButtonError","ButtonLight","ButtonPrimary","BlueCard","GreyCard","LightCard","AutoColumn","ColumnCenter","TransactionConfirmationModal","ConfirmationModalContent","CurrencyInputPanel","DoubleCurrencyLogo","AddRemoveTabs","MinimalPositionCard","Row","RowBetween","RowFlat","ROUTER_ADDRESS","PairState","useActiveWeb3React","useCurrency","ApprovalState","useApproveCallback","useWalletModalToggle","Field","useDerivedMintInfo","useMintActionHandlers","useMintState","useTransactionAdder","useIsExpertMode","useUserDeadline","useUserSlippageTolerance","TYPE","calculateGasMargin","calculateSlippageAmount","getRouterContract","maxAmountSpend","wrappedCurrency","AppBody","Dots","Wrapper","ConfirmAddModalBottom","currencyId","PoolPriceBar","AddLiquidity","match","params","currencyIdA","currencyIdB","history","_parsedAmounts$depend","_parsedAmounts$depend2","_parsedAmounts$Field$3","_currencies$Field$CUR9","_parsedAmounts$Field$4","_currencies$Field$CUR10","_currencies$Field$CUR11","_currencies$Field$CUR12","_currencies$Field$CUR13","_currencies$Field$CUR14","account","chainId","library","theme","currencyA","currencyB","oneCurrencyIsWETH","Boolean","toggleWalletModal","expertMode","independentField","typedValue","otherTypedValue","dependentField","currencies","pair","pairState","currencyBalances","parsedAmounts","price","noLiquidity","liquidityMinted","poolTokenPercentage","error","undefined","onFieldAInput","onFieldBInput","isValid","showConfirm","setShowConfirm","attemptingTxn","setAttemptingTxn","deadline","allowedSlippage","txHash","setTxHash","formattedAmounts","toSignificant","maxAmounts","CURRENCY_A","CURRENCY_B","reduce","accumulator","field","atMaxAmounts","_maxAmounts$field","_parsedAmounts$field","equalTo","approvalA","approveACallback","approvalB","approveBCallback","addTransaction","onAdd","router","parsedAmountA","parsedAmountB","amountsMin","deadlineFromNow","Math","ceil","Date","now","estimate","method","args","value","_wrappedCurrency$addr","_wrappedCurrency","tokenBIsETH","estimateGas","addLiquidityETH","address","raw","toString","from","_wrappedCurrency$addr2","_wrappedCurrency2","_wrappedCurrency$addr3","_wrappedCurrency3","addLiquidity","then","estimatedGasLimit","gasLimit","response","_parsedAmounts$Field$","_currencies$Field$CUR","_parsedAmounts$Field$2","_currencies$Field$CUR2","_currencies$Field$CUR3","_currencies$Field$CUR4","summary","symbol","hash","event","category","action","label","join","catch","code","console","modalHeader","_currencies$Field$CUR5","_currencies$Field$CUR6","_currencies$Field$CUR7","_currencies$Field$CUR8","createElement","gap","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","mt","borderRadius","fontSize","fontWeight","lineHeight","marginRight","currency0","currency1","size","style","marginTop","italic","textAlign","padding","modalBottom","pendingText","handleCurrencyASelect","newCurrencyIdA","push","handleCurrencyBSelect","newCurrencyIdB","handleDismissConfirmation","Fragment","adding","isOpen","onDismiss","content","title","topContent","bottomContent","link","color","onUserInput","onMax","_maxAmounts$Field$CUR","_maxAmounts$Field$CUR2","toExact","onCurrencySelect","showMaxButton","currency","id","showCommonBases","text2","_maxAmounts$Field$CUR3","_maxAmounts$Field$CUR4","INVALID","subHeader","onClick","NOT_APPROVED","PENDING","APPROVED","disabled","width","minWidth","showUnwrapped"],"sources":["/Users/synallage/Desktop/fomoswap-uni/interface-73580de922ce3ff642430d71aa24f5c053e6dd4d/src/pages/AddLiquidity/index.tsx"],"sourcesContent":["import { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from 'fomoswap-storytestnet'\nimport React, { useCallback, useContext, useState } from 'react'\nimport { Plus } from 'react-feather'\nimport ReactGA from 'react-ga'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { Text } from 'rebass'\nimport { ThemeContext } from 'styled-components'\nimport { ButtonError, ButtonLight, ButtonPrimary } from '../../components/Button'\nimport { BlueCard, GreyCard, LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport DoubleCurrencyLogo from '../../components/DoubleLogo'\nimport { AddRemoveTabs } from '../../components/NavigationTabs'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport Row, { RowBetween, RowFlat } from '../../components/Row'\n\nimport { ROUTER_ADDRESS } from '../../constants'\nimport { PairState } from '../../data/Reserves'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport { useWalletModalToggle } from '../../state/application/hooks'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { useIsExpertMode, useUserDeadline, useUserSlippageTolerance } from '../../state/user/hooks'\nimport { TYPE } from '../../theme'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport AppBody from '../AppBody'\nimport { Dots, Wrapper } from '../Pool/styleds'\nimport { ConfirmAddModalBottom } from './ConfirmAddModalBottom'\nimport { currencyId } from '../../utils/currencyId'\nimport { PoolPriceBar } from './PoolPriceBar'\n\nexport default function AddLiquidity({\n  match: {\n    params: { currencyIdA, currencyIdB }\n  },\n  history\n}: RouteComponentProps<{ currencyIdA?: string; currencyIdB?: string }>) {\n  const { account, chainId, library } = useActiveWeb3React()\n  const theme = useContext(ThemeContext)\n\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId])))\n  )\n\n  const toggleWalletModal = useWalletModalToggle() // toggle wallet when disconnected\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [showConfirm, setShowConfirm] = useState<boolean>(false)\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const [deadline] = useUserDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? ''\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field])\n      }\n    },\n    {}\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0')\n      }\n    },\n    {}\n  )\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0]\n    }\n\n    const deadlineFromNow = Math.ceil(Date.now() / 1000) + deadline\n\n    let estimate,\n      method: (...args: any) => Promise<TransactionResponse>,\n      args: Array<string | string[] | number>,\n      value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadlineFromNow\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadlineFromNow\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then(estimatedGasLimit =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit)\n        }).then(response => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary:\n              'Add ' +\n              parsedAmounts[Field.CURRENCY_A]?.toSignificant(3) +\n              ' ' +\n              currencies[Field.CURRENCY_A]?.symbol +\n              ' and ' +\n              parsedAmounts[Field.CURRENCY_B]?.toSignificant(3) +\n              ' ' +\n              currencies[Field.CURRENCY_B]?.symbol\n          })\n\n          setTxHash(response.hash)\n\n          ReactGA.event({\n            category: 'Liquidity',\n            action: 'Add',\n            label: [currencies[Field.CURRENCY_A]?.symbol, currencies[Field.CURRENCY_B]?.symbol].join('/')\n          })\n        })\n      )\n      .catch(error => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (error?.code !== 4001) {\n          console.error(error)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <AutoColumn gap=\"20px\">\n        <LightCard mt=\"20px\" borderRadius=\"20px\">\n          <RowFlat>\n            <Text fontSize=\"48px\" fontWeight={500} lineHeight=\"42px\" marginRight={10}>\n              {currencies[Field.CURRENCY_A]?.symbol + '/' + currencies[Field.CURRENCY_B]?.symbol}\n            </Text>\n            <DoubleCurrencyLogo\n              currency0={currencies[Field.CURRENCY_A]}\n              currency1={currencies[Field.CURRENCY_B]}\n              size={30}\n            />\n          </RowFlat>\n        </LightCard>\n      </AutoColumn>\n    ) : (\n      <AutoColumn gap=\"20px\">\n        <RowFlat style={{ marginTop: '20px' }}>\n          <Text fontSize=\"48px\" fontWeight={500} lineHeight=\"42px\" marginRight={10}>\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </RowFlat>\n        <Row>\n          <Text fontSize=\"24px\">\n            {currencies[Field.CURRENCY_A]?.symbol + '/' + currencies[Field.CURRENCY_B]?.symbol + ' Pool Tokens'}\n          </Text>\n        </Row>\n        <TYPE.italic fontSize={12} textAlign=\"left\" padding={'8px 0 0 0 '}>\n          {`Output is estimated. If the price changes by more than ${allowedSlippage /\n            100}% your transaction will revert.`}\n        </TYPE.italic>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = `Supplying ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)} ${\n    currencies[Field.CURRENCY_A]?.symbol\n  } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)} ${currencies[Field.CURRENCY_B]?.symbol}`\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/add/${currencyIdB}/${currencyIdA}`)\n      } else {\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA]\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/add/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/add/${currencyIdA ? currencyIdA : 'ETH'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB]\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false)\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  return (\n    <>\n      <AppBody>\n        <AddRemoveTabs adding={true} />\n        <Wrapper>\n          <TransactionConfirmationModal\n            isOpen={showConfirm}\n            onDismiss={handleDismissConfirmation}\n            attemptingTxn={attemptingTxn}\n            hash={txHash}\n            content={() => (\n              <ConfirmationModalContent\n                title={noLiquidity ? 'You are creating a pool' : 'You will receive'}\n                onDismiss={handleDismissConfirmation}\n                topContent={modalHeader}\n                bottomContent={modalBottom}\n              />\n            )}\n            pendingText={pendingText}\n          />\n          <AutoColumn gap=\"20px\">\n            {noLiquidity && (\n              <ColumnCenter>\n                <BlueCard>\n                  <AutoColumn gap=\"10px\">\n                    <TYPE.link fontWeight={600} color={'primaryText1'}>\n                      You are the first liquidity provider.\n                    </TYPE.link>\n                    <TYPE.link fontWeight={400} color={'primaryText1'}>\n                      The ratio of tokens you add will set the price of this pool.\n                    </TYPE.link>\n                    <TYPE.link fontWeight={400} color={'primaryText1'}>\n                      Once you are happy with the rate click supply to review.\n                    </TYPE.link>\n                  </AutoColumn>\n                </BlueCard>\n              </ColumnCenter>\n            )}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n              showCommonBases\n            />\n            <ColumnCenter>\n              <Plus size=\"16\" color={theme.text2} />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n              showCommonBases\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <GreyCard padding=\"0px\" borderRadius={'20px'}>\n                  <RowBetween padding=\"1rem\">\n                    <TYPE.subHeader fontWeight={500} fontSize={14}>\n                      {noLiquidity ? 'Initial prices' : 'Prices'} and pool share\n                    </TYPE.subHeader>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" borderRadius={'20px'}>\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </GreyCard>\n              </>\n            )}\n\n            {!account ? (\n              <ButtonLight onClick={toggleWalletModal}>Connect Wallet</ButtonLight>\n            ) : (\n              <AutoColumn gap={'md'}>\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <ButtonPrimary\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>Approving {currencies[Field.CURRENCY_A]?.symbol}</Dots>\n                          ) : (\n                            'Approve ' + currencies[Field.CURRENCY_A]?.symbol\n                          )}\n                        </ButtonPrimary>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <ButtonPrimary\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>Approving {currencies[Field.CURRENCY_B]?.symbol}</Dots>\n                          ) : (\n                            'Approve ' + currencies[Field.CURRENCY_B]?.symbol\n                          )}\n                        </ButtonPrimary>\n                      )}\n                    </RowBetween>\n                  )}\n                <ButtonError\n                  onClick={() => {\n                    expertMode ? onAdd() : setShowConfirm(true)\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                  error={!isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]}\n                >\n                  <Text fontSize={20} fontWeight={500}>\n                    {error ?? 'Supply'}\n                  </Text>\n                </ButtonError>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </Wrapper>\n      </AppBody>\n\n      {pair && !noLiquidity && pairState !== PairState.INVALID ? (\n        <AutoColumn style={{ minWidth: '20rem', marginTop: '1rem' }}>\n          <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n        </AutoColumn>\n      ) : null}\n    </>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}