{"ast":null,"code":"var _jsxFileName = \"/Users/synallage/Desktop/fomoswap-uni/interface-73580de922ce3ff642430d71aa24f5c053e6dd4d/src/components/WalletModal/PendingView.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport Option from './Option';\nimport { SUPPORTED_WALLETS } from '../../constants';\nimport { injected } from '../../connectors';\nimport { darken } from 'polished';\nimport Loader from '../Loader';\nconst PendingSection = styled.div`\n  ${({\n  theme\n}) => theme.flexColumnNoWrap};\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  & > * {\n    width: 100%;\n  }\n`;\nconst StyledLoader = styled(Loader)`\n  margin-right: 1rem;\n`;\nconst LoadingMessage = styled.div`\n  ${({\n  theme\n}) => theme.flexRowNoWrap};\n  align-items: center;\n  justify-content: flex-start;\n  border-radius: 12px;\n  margin-bottom: 20px;\n  color: ${({\n  theme,\n  error\n}) => error ? theme.red1 : 'inherit'};\n  border: 1px solid ${({\n  theme,\n  error\n}) => error ? theme.red1 : theme.text4};\n\n  & > * {\n    padding: 1rem;\n  }\n`;\nconst ErrorGroup = styled.div`\n  ${({\n  theme\n}) => theme.flexRowNoWrap};\n  align-items: center;\n  justify-content: flex-start;\n`;\nconst ErrorButton = styled.div`\n  border-radius: 8px;\n  font-size: 12px;\n  color: ${({\n  theme\n}) => theme.text1};\n  background-color: ${({\n  theme\n}) => theme.bg4};\n  margin-left: 1rem;\n  padding: 0.5rem;\n  font-weight: 600;\n  user-select: none;\n\n  &:hover {\n    cursor: pointer;\n    background-color: ${({\n  theme\n}) => darken(0.1, theme.text4)};\n  }\n`;\nconst LoadingWrapper = styled.div`\n  ${({\n  theme\n}) => theme.flexRowNoWrap};\n  align-items: center;\n  justify-content: center;\n`;\nexport default function PendingView({\n  connector,\n  error = false,\n  setPendingError,\n  tryActivation\n}) {\n  var _window, _window$ethereum;\n  const isMetamask = (_window = window) === null || _window === void 0 ? void 0 : (_window$ethereum = _window.ethereum) === null || _window$ethereum === void 0 ? void 0 : _window$ethereum.isMetaMask;\n  return /*#__PURE__*/React.createElement(PendingSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LoadingMessage, {\n    error: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LoadingWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, error ? /*#__PURE__*/React.createElement(ErrorGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, \"Error connecting.\"), /*#__PURE__*/React.createElement(ErrorButton, {\n    onClick: () => {\n      setPendingError(false);\n      tryActivation(connector);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, \"Try Again\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StyledLoader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }), \"Initializing...\"))), Object.keys(SUPPORTED_WALLETS).map(key => {\n    const option = SUPPORTED_WALLETS[key];\n    if (option.connector === connector) {\n      if (option.connector === injected) {\n        if (isMetamask && option.name !== 'MetaMask') {\n          return null;\n        }\n        if (!isMetamask && option.name === 'MetaMask') {\n          return null;\n        }\n      }\n      return /*#__PURE__*/React.createElement(Option, {\n        id: `connect-${key}`,\n        key: key,\n        clickable: false,\n        color: option.color,\n        header: option.name,\n        subheader: option.description,\n        icon: require('../../assets/images/' + option.iconName),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }\n      });\n    }\n    return null;\n  }));\n}","map":{"version":3,"names":["React","styled","Option","SUPPORTED_WALLETS","injected","darken","Loader","PendingSection","div","theme","flexColumnNoWrap","StyledLoader","LoadingMessage","flexRowNoWrap","error","red1","text4","ErrorGroup","ErrorButton","text1","bg4","LoadingWrapper","PendingView","connector","setPendingError","tryActivation","_window","_window$ethereum","isMetamask","window","ethereum","isMetaMask","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Fragment","Object","keys","map","key","option","name","id","clickable","color","header","subheader","description","icon","require","iconName"],"sources":["/Users/synallage/Desktop/fomoswap-uni/interface-73580de922ce3ff642430d71aa24f5c053e6dd4d/src/components/WalletModal/PendingView.tsx"],"sourcesContent":["import { AbstractConnector } from '@web3-react/abstract-connector'\nimport React from 'react'\nimport styled from 'styled-components'\nimport Option from './Option'\nimport { SUPPORTED_WALLETS } from '../../constants'\nimport { injected } from '../../connectors'\nimport { darken } from 'polished'\nimport Loader from '../Loader'\n\nconst PendingSection = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap};\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  & > * {\n    width: 100%;\n  }\n`\n\nconst StyledLoader = styled(Loader)`\n  margin-right: 1rem;\n`\n\nconst LoadingMessage = styled.div<{ error?: boolean }>`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  justify-content: flex-start;\n  border-radius: 12px;\n  margin-bottom: 20px;\n  color: ${({ theme, error }) => (error ? theme.red1 : 'inherit')};\n  border: 1px solid ${({ theme, error }) => (error ? theme.red1 : theme.text4)};\n\n  & > * {\n    padding: 1rem;\n  }\n`\n\nconst ErrorGroup = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  justify-content: flex-start;\n`\n\nconst ErrorButton = styled.div`\n  border-radius: 8px;\n  font-size: 12px;\n  color: ${({ theme }) => theme.text1};\n  background-color: ${({ theme }) => theme.bg4};\n  margin-left: 1rem;\n  padding: 0.5rem;\n  font-weight: 600;\n  user-select: none;\n\n  &:hover {\n    cursor: pointer;\n    background-color: ${({ theme }) => darken(0.1, theme.text4)};\n  }\n`\n\nconst LoadingWrapper = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  justify-content: center;\n`\n\nexport default function PendingView({\n  connector,\n  error = false,\n  setPendingError,\n  tryActivation\n}: {\n  connector?: AbstractConnector\n  error?: boolean\n  setPendingError: (error: boolean) => void\n  tryActivation: (connector: AbstractConnector) => void\n}) {\n  const isMetamask = window?.ethereum?.isMetaMask\n\n  return (\n    <PendingSection>\n      <LoadingMessage error={error}>\n        <LoadingWrapper>\n          {error ? (\n            <ErrorGroup>\n              <div>Error connecting.</div>\n              <ErrorButton\n                onClick={() => {\n                  setPendingError(false)\n                  tryActivation(connector)\n                }}\n              >\n                Try Again\n              </ErrorButton>\n            </ErrorGroup>\n          ) : (\n            <>\n              <StyledLoader />\n              Initializing...\n            </>\n          )}\n        </LoadingWrapper>\n      </LoadingMessage>\n      {Object.keys(SUPPORTED_WALLETS).map(key => {\n        const option = SUPPORTED_WALLETS[key]\n        if (option.connector === connector) {\n          if (option.connector === injected) {\n            if (isMetamask && option.name !== 'MetaMask') {\n              return null\n            }\n            if (!isMetamask && option.name === 'MetaMask') {\n              return null\n            }\n          }\n          return (\n            <Option\n              id={`connect-${key}`}\n              key={key}\n              clickable={false}\n              color={option.color}\n              header={option.name}\n              subheader={option.description}\n              icon={require('../../assets/images/' + option.iconName)}\n            />\n          )\n        }\n        return null\n      })}\n    </PendingSection>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}