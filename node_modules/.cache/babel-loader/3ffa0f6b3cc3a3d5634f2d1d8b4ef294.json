{"ast":null,"code":"import React,{useCallback,useContext,useEffect,useMemo,useRef,useState}from'react';import{isMobile}from'react-device-detect';import{useTranslation}from'react-i18next';import{Text}from'rebass';import{ThemeContext}from'styled-components';import Card from'../../components/Card';import{useActiveWeb3React}from'../../hooks';import{useAllTokens,useToken}from'../../hooks/Tokens';import useInterval from'../../hooks/useInterval';import{useAllTokenBalances,useTokenBalance}from'../../state/wallet/hooks';import{CloseIcon,LinkStyledButton}from'../../theme';import{isAddress}from'../../utils';import Column from'../Column';import Modal from'../Modal';import QuestionHelper from'../QuestionHelper';import{AutoRow,RowBetween}from'../Row';import Tooltip from'../Tooltip';import CommonBases from'./CommonBases';import{filterTokens}from'./filtering';import{useTokenComparator}from'./sorting';import{PaddedColumn,SearchInput}from'./styleds';import CurrencyList from'./CurrencyList';import SortButton from'./SortButton';export default function CurrencySearchModal(_ref){let{isOpen,onDismiss,onCurrencySelect,hiddenCurrency,showSendWithSwap,otherSelectedCurrency,showCommonBases=false}=_ref;const{t}=useTranslation();const{account,chainId}=useActiveWeb3React();const theme=useContext(ThemeContext);const[searchQuery,setSearchQuery]=useState('');const[tooltipOpen,setTooltipOpen]=useState(false);const[invertSearchOrder,setInvertSearchOrder]=useState(false);const allTokens=useAllTokens();// if the current input is an address, and we don't have the token in context, try to fetch it and import\nconst searchToken=useToken(searchQuery);const searchTokenBalance=useTokenBalance(account,searchToken);const allTokenBalances_=useAllTokenBalances();const allTokenBalances=searchToken?{[searchToken.address]:searchTokenBalance}:allTokenBalances_!==null&&allTokenBalances_!==void 0?allTokenBalances_:{};const tokenComparator=useTokenComparator(invertSearchOrder);const filteredTokens=useMemo(()=>{if(searchToken)return[searchToken];return filterTokens(Object.values(allTokens),searchQuery);},[searchToken,allTokens,searchQuery]);const filteredSortedTokens=useMemo(()=>{if(searchToken)return[searchToken];const sorted=filteredTokens.sort(tokenComparator);const symbolMatch=searchQuery.toLowerCase().split(/\\s+/).filter(s=>s.length>0);if(symbolMatch.length>1)return sorted;return[...(searchToken?[searchToken]:[]),// sort any exact symbol matches first\n...sorted.filter(token=>token.symbol.toLowerCase()===symbolMatch[0]),...sorted.filter(token=>token.symbol.toLowerCase()!==symbolMatch[0])];},[filteredTokens,searchQuery,searchToken,tokenComparator]);const handleCurrencySelect=useCallback(currency=>{onCurrencySelect(currency);onDismiss();},[onDismiss,onCurrencySelect]);// clear the input on open\nuseEffect(()=>{if(isOpen)setSearchQuery('');},[isOpen,setSearchQuery]);// manage focus on modal show\nconst inputRef=useRef();const handleInput=useCallback(event=>{const input=event.target.value;const checksummedInput=isAddress(input);setSearchQuery(checksummedInput||input);setTooltipOpen(false);},[]);const openTooltip=useCallback(()=>{setTooltipOpen(true);},[setTooltipOpen]);const closeTooltip=useCallback(()=>setTooltipOpen(false),[setTooltipOpen]);useInterval(()=>{setTooltipOpen(false);},tooltipOpen?4000:null,false);const handleEnter=useCallback(e=>{if(e.key==='Enter'&&filteredSortedTokens.length>0){if(filteredSortedTokens[0].symbol.toLowerCase()===searchQuery.trim().toLowerCase()||filteredSortedTokens.length===1){handleCurrencySelect(filteredSortedTokens[0]);}}},[filteredSortedTokens,handleCurrencySelect,searchQuery]);return/*#__PURE__*/React.createElement(Modal,{isOpen:isOpen,onDismiss:onDismiss,maxHeight:70,initialFocusRef:isMobile?undefined:inputRef,minHeight:70},/*#__PURE__*/React.createElement(Column,{style:{width:'100%'}},/*#__PURE__*/React.createElement(PaddedColumn,{gap:\"14px\"},/*#__PURE__*/React.createElement(RowBetween,null,/*#__PURE__*/React.createElement(Text,{fontWeight:500,fontSize:16},\"Select a token\",/*#__PURE__*/React.createElement(QuestionHelper,{disabled:tooltipOpen,text:\"Find a token by searching for its name or symbol or by pasting its address below.\"})),/*#__PURE__*/React.createElement(CloseIcon,{onClick:onDismiss})),/*#__PURE__*/React.createElement(Tooltip,{text:\"Import any token into your list by pasting the token address into the search field.\",show:tooltipOpen,placement:\"bottom\"},/*#__PURE__*/React.createElement(SearchInput,{type:\"text\",id:\"token-search-input\",placeholder:t('tokenSearchPlaceholder'),value:searchQuery,ref:inputRef,onChange:handleInput,onFocus:closeTooltip,onBlur:closeTooltip,onKeyDown:handleEnter})),showCommonBases&&/*#__PURE__*/React.createElement(CommonBases,{chainId:chainId,onSelect:handleCurrencySelect,selectedCurrency:hiddenCurrency}),/*#__PURE__*/React.createElement(RowBetween,null,/*#__PURE__*/React.createElement(Text,{fontSize:14,fontWeight:500},\"Token Name\"),/*#__PURE__*/React.createElement(SortButton,{ascending:invertSearchOrder,toggleSortOrder:()=>setInvertSearchOrder(iso=>!iso)}))),/*#__PURE__*/React.createElement(\"div\",{style:{width:'100%',height:'1px',backgroundColor:theme.bg2}}),/*#__PURE__*/React.createElement(CurrencyList,{currencies:filteredSortedTokens,allBalances:allTokenBalances,onCurrencySelect:handleCurrencySelect,otherCurrency:otherSelectedCurrency,selectedCurrency:hiddenCurrency,showSendWithSwap:showSendWithSwap}),/*#__PURE__*/React.createElement(\"div\",{style:{width:'100%',height:'1px',backgroundColor:theme.bg2}}),/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(AutoRow,{justify:'center'},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(LinkStyledButton,{style:{fontWeight:500,color:theme.text2,fontSize:16},onClick:openTooltip},\"Having trouble finding a token?\"))))));}","map":{"version":3,"names":["React","useCallback","useContext","useEffect","useMemo","useRef","useState","isMobile","useTranslation","Text","ThemeContext","Card","useActiveWeb3React","useAllTokens","useToken","useInterval","useAllTokenBalances","useTokenBalance","CloseIcon","LinkStyledButton","isAddress","Column","Modal","QuestionHelper","AutoRow","RowBetween","Tooltip","CommonBases","filterTokens","useTokenComparator","PaddedColumn","SearchInput","CurrencyList","SortButton","CurrencySearchModal","_ref","isOpen","onDismiss","onCurrencySelect","hiddenCurrency","showSendWithSwap","otherSelectedCurrency","showCommonBases","t","account","chainId","theme","searchQuery","setSearchQuery","tooltipOpen","setTooltipOpen","invertSearchOrder","setInvertSearchOrder","allTokens","searchToken","searchTokenBalance","allTokenBalances_","allTokenBalances","address","tokenComparator","filteredTokens","Object","values","filteredSortedTokens","sorted","sort","symbolMatch","toLowerCase","split","filter","s","length","token","symbol","handleCurrencySelect","currency","inputRef","handleInput","event","input","target","value","checksummedInput","openTooltip","closeTooltip","handleEnter","e","key","trim","createElement","maxHeight","initialFocusRef","undefined","minHeight","style","width","gap","fontWeight","fontSize","disabled","text","onClick","show","placement","type","id","placeholder","ref","onChange","onFocus","onBlur","onKeyDown","onSelect","selectedCurrency","ascending","toggleSortOrder","iso","height","backgroundColor","bg2","currencies","allBalances","otherCurrency","justify","color","text2"],"sources":["/Users/synallage/Desktop/fomoswap-uni/interface-73580de922ce3ff642430d71aa24f5c053e6dd4d/src/components/SearchModal/CurrencySearchModal.tsx"],"sourcesContent":["import { Currency, Token } from 'fomoswap-storytestnet'\nimport React, { KeyboardEvent, useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react'\nimport { isMobile } from 'react-device-detect'\nimport { useTranslation } from 'react-i18next'\nimport { Text } from 'rebass'\nimport { ThemeContext } from 'styled-components'\nimport Card from '../../components/Card'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useAllTokens, useToken } from '../../hooks/Tokens'\nimport useInterval from '../../hooks/useInterval'\nimport { useAllTokenBalances, useTokenBalance } from '../../state/wallet/hooks'\nimport { CloseIcon, LinkStyledButton } from '../../theme'\nimport { isAddress } from '../../utils'\nimport Column from '../Column'\nimport Modal from '../Modal'\nimport QuestionHelper from '../QuestionHelper'\nimport { AutoRow, RowBetween } from '../Row'\nimport Tooltip from '../Tooltip'\nimport CommonBases from './CommonBases'\nimport { filterTokens } from './filtering'\nimport { useTokenComparator } from './sorting'\nimport { PaddedColumn, SearchInput } from './styleds'\nimport CurrencyList from './CurrencyList'\nimport SortButton from './SortButton'\n\ninterface CurrencySearchModalProps {\n  isOpen?: boolean\n  onDismiss?: () => void\n  hiddenCurrency?: Currency\n  showSendWithSwap?: boolean\n  onCurrencySelect?: (currency: Currency) => void\n  otherSelectedCurrency?: Currency\n  showCommonBases?: boolean\n}\n\nexport default function CurrencySearchModal({\n  isOpen,\n  onDismiss,\n  onCurrencySelect,\n  hiddenCurrency,\n  showSendWithSwap,\n  otherSelectedCurrency,\n  showCommonBases = false\n}: CurrencySearchModalProps) {\n  const { t } = useTranslation()\n  const { account, chainId } = useActiveWeb3React()\n  const theme = useContext(ThemeContext)\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const [tooltipOpen, setTooltipOpen] = useState<boolean>(false)\n  const [invertSearchOrder, setInvertSearchOrder] = useState<boolean>(false)\n  const allTokens = useAllTokens()\n\n  // if the current input is an address, and we don't have the token in context, try to fetch it and import\n  const searchToken = useToken(searchQuery)\n  const searchTokenBalance = useTokenBalance(account, searchToken)\n  const allTokenBalances_ = useAllTokenBalances()\n  const allTokenBalances = searchToken\n    ? {\n        [searchToken.address]: searchTokenBalance\n      }\n    : allTokenBalances_ ?? {}\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    if (searchToken) return [searchToken]\n    return filterTokens(Object.values(allTokens), searchQuery)\n  }, [searchToken, allTokens, searchQuery])\n\n  const filteredSortedTokens: Token[] = useMemo(() => {\n    if (searchToken) return [searchToken]\n    const sorted = filteredTokens.sort(tokenComparator)\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter(s => s.length > 0)\n    if (symbolMatch.length > 1) return sorted\n\n    return [\n      ...(searchToken ? [searchToken] : []),\n      // sort any exact symbol matches first\n      ...sorted.filter(token => token.symbol.toLowerCase() === symbolMatch[0]),\n      ...sorted.filter(token => token.symbol.toLowerCase() !== symbolMatch[0])\n    ]\n  }, [filteredTokens, searchQuery, searchToken, tokenComparator])\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      onDismiss()\n    },\n    [onDismiss, onCurrencySelect]\n  )\n\n  // clear the input on open\n  useEffect(() => {\n    if (isOpen) setSearchQuery('')\n  }, [isOpen, setSearchQuery])\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback(event => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    setTooltipOpen(false)\n  }, [])\n\n  const openTooltip = useCallback(() => {\n    setTooltipOpen(true)\n  }, [setTooltipOpen])\n  const closeTooltip = useCallback(() => setTooltipOpen(false), [setTooltipOpen])\n\n  useInterval(\n    () => {\n      setTooltipOpen(false)\n    },\n    tooltipOpen ? 4000 : null,\n    false\n  )\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter' && filteredSortedTokens.length > 0) {\n        if (\n          filteredSortedTokens[0].symbol.toLowerCase() === searchQuery.trim().toLowerCase() ||\n          filteredSortedTokens.length === 1\n        ) {\n          handleCurrencySelect(filteredSortedTokens[0])\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, searchQuery]\n  )\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onDismiss={onDismiss}\n      maxHeight={70}\n      initialFocusRef={isMobile ? undefined : inputRef}\n      minHeight={70}\n    >\n      <Column style={{ width: '100%' }}>\n        <PaddedColumn gap=\"14px\">\n          <RowBetween>\n            <Text fontWeight={500} fontSize={16}>\n              Select a token\n              <QuestionHelper\n                disabled={tooltipOpen}\n                text=\"Find a token by searching for its name or symbol or by pasting its address below.\"\n              />\n            </Text>\n            <CloseIcon onClick={onDismiss} />\n          </RowBetween>\n          <Tooltip\n            text=\"Import any token into your list by pasting the token address into the search field.\"\n            show={tooltipOpen}\n            placement=\"bottom\"\n          >\n            <SearchInput\n              type=\"text\"\n              id=\"token-search-input\"\n              placeholder={t('tokenSearchPlaceholder')}\n              value={searchQuery}\n              ref={inputRef}\n              onChange={handleInput}\n              onFocus={closeTooltip}\n              onBlur={closeTooltip}\n              onKeyDown={handleEnter}\n            />\n          </Tooltip>\n          {showCommonBases && (\n            <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={hiddenCurrency} />\n          )}\n          <RowBetween>\n            <Text fontSize={14} fontWeight={500}>\n              Token Name\n            </Text>\n            <SortButton ascending={invertSearchOrder} toggleSortOrder={() => setInvertSearchOrder(iso => !iso)} />\n          </RowBetween>\n        </PaddedColumn>\n        <div style={{ width: '100%', height: '1px', backgroundColor: theme.bg2 }} />\n        <CurrencyList\n          currencies={filteredSortedTokens}\n          allBalances={allTokenBalances}\n          onCurrencySelect={handleCurrencySelect}\n          otherCurrency={otherSelectedCurrency}\n          selectedCurrency={hiddenCurrency}\n          showSendWithSwap={showSendWithSwap}\n        />\n        <div style={{ width: '100%', height: '1px', backgroundColor: theme.bg2 }} />\n        <Card>\n          <AutoRow justify={'center'}>\n            <div>\n              <LinkStyledButton style={{ fontWeight: 500, color: theme.text2, fontSize: 16 }} onClick={openTooltip}>\n                Having trouble finding a token?\n              </LinkStyledButton>\n            </div>\n          </AutoRow>\n        </Card>\n      </Column>\n    </Modal>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}