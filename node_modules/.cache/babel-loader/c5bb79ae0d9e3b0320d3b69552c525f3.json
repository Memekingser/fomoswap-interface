{"ast":null,"code":"import{JSBI,Percent,TokenAmount}from'fomoswap-bera1';import{useCallback}from'react';import{useDispatch,useSelector}from'react-redux';import{usePair}from'../../data/Reserves';import{useTotalSupply}from'../../data/TotalSupply';import{useActiveWeb3React}from'../../hooks';import{wrappedCurrency}from'../../utils/wrappedCurrency';import{tryParseAmount}from'../swap/hooks';import{useTokenBalances}from'../wallet/hooks';import{Field,typeInput}from'./actions';export function useBurnState(){return useSelector(state=>state.burn);}export function useDerivedBurnInfo(currencyA,currencyB){var _pair$liquidityToken$,_pair$liquidityToken;const{account,chainId}=useActiveWeb3React();const{independentField,typedValue}=useBurnState();// pair + totalsupply\nconst[,pair]=usePair(currencyA,currencyB);// balances\nconst relevantTokenBalances=useTokenBalances(account!==null&&account!==void 0?account:undefined,[pair===null||pair===void 0?void 0:pair.liquidityToken]);const userLiquidity=relevantTokenBalances===null||relevantTokenBalances===void 0?void 0:relevantTokenBalances[(_pair$liquidityToken$=pair===null||pair===void 0?void 0:(_pair$liquidityToken=pair.liquidityToken)===null||_pair$liquidityToken===void 0?void 0:_pair$liquidityToken.address)!==null&&_pair$liquidityToken$!==void 0?_pair$liquidityToken$:''];const[tokenA,tokenB]=[wrappedCurrency(currencyA,chainId),wrappedCurrency(currencyB,chainId)];const tokens={[Field.CURRENCY_A]:tokenA,[Field.CURRENCY_B]:tokenB,[Field.LIQUIDITY]:pair===null||pair===void 0?void 0:pair.liquidityToken};// liquidity values\nconst totalSupply=useTotalSupply(pair===null||pair===void 0?void 0:pair.liquidityToken);const liquidityValueA=pair&&totalSupply&&userLiquidity&&tokenA&&// this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\nJSBI.greaterThanOrEqual(totalSupply.raw,userLiquidity.raw)?new TokenAmount(tokenA,pair.getLiquidityValue(tokenA,totalSupply,userLiquidity,false).raw):undefined;const liquidityValueB=pair&&totalSupply&&userLiquidity&&tokenB&&// this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\nJSBI.greaterThanOrEqual(totalSupply.raw,userLiquidity.raw)?new TokenAmount(tokenB,pair.getLiquidityValue(tokenB,totalSupply,userLiquidity,false).raw):undefined;const liquidityValues={[Field.CURRENCY_A]:liquidityValueA,[Field.CURRENCY_B]:liquidityValueB};let percentToRemove=new Percent('0','100');// user specified a %\nif(independentField===Field.LIQUIDITY_PERCENT){percentToRemove=new Percent(typedValue,'100');}// user specified a specific amount of liquidity tokens\nelse if(independentField===Field.LIQUIDITY){if(pair===null||pair===void 0?void 0:pair.liquidityToken){const independentAmount=tryParseAmount(typedValue,pair.liquidityToken);if(independentAmount&&userLiquidity&&!independentAmount.greaterThan(userLiquidity)){percentToRemove=new Percent(independentAmount.raw,userLiquidity.raw);}}}// user specified a specific amount of token a or b\nelse{if(tokens[independentField]){const independentAmount=tryParseAmount(typedValue,tokens[independentField]);const liquidityValue=liquidityValues[independentField];if(independentAmount&&liquidityValue&&!independentAmount.greaterThan(liquidityValue)){percentToRemove=new Percent(independentAmount.raw,liquidityValue.raw);}}}const parsedAmounts={[Field.LIQUIDITY_PERCENT]:percentToRemove,[Field.LIQUIDITY]:userLiquidity&&percentToRemove&&percentToRemove.greaterThan('0')?new TokenAmount(userLiquidity.token,percentToRemove.multiply(userLiquidity.raw).quotient):undefined,[Field.CURRENCY_A]:tokenA&&percentToRemove&&percentToRemove.greaterThan('0')&&liquidityValueA?new TokenAmount(tokenA,percentToRemove.multiply(liquidityValueA.raw).quotient):undefined,[Field.CURRENCY_B]:tokenB&&percentToRemove&&percentToRemove.greaterThan('0')&&liquidityValueB?new TokenAmount(tokenB,percentToRemove.multiply(liquidityValueB.raw).quotient):undefined};let error;if(!account){error='Connect Wallet';}if(!parsedAmounts[Field.LIQUIDITY]||!parsedAmounts[Field.CURRENCY_A]||!parsedAmounts[Field.CURRENCY_B]){var _error;error=(_error=error)!==null&&_error!==void 0?_error:'Enter an amount';}return{pair,parsedAmounts,error};}export function useBurnActionHandlers(){const dispatch=useDispatch();const onUserInput=useCallback((field,typedValue)=>{dispatch(typeInput({field,typedValue}));},[dispatch]);return{onUserInput};}","map":{"version":3,"names":["JSBI","Percent","TokenAmount","useCallback","useDispatch","useSelector","usePair","useTotalSupply","useActiveWeb3React","wrappedCurrency","tryParseAmount","useTokenBalances","Field","typeInput","useBurnState","state","burn","useDerivedBurnInfo","currencyA","currencyB","_pair$liquidityToken$","_pair$liquidityToken","account","chainId","independentField","typedValue","pair","relevantTokenBalances","undefined","liquidityToken","userLiquidity","address","tokenA","tokenB","tokens","CURRENCY_A","CURRENCY_B","LIQUIDITY","totalSupply","liquidityValueA","greaterThanOrEqual","raw","getLiquidityValue","liquidityValueB","liquidityValues","percentToRemove","LIQUIDITY_PERCENT","independentAmount","greaterThan","liquidityValue","parsedAmounts","token","multiply","quotient","error","_error","useBurnActionHandlers","dispatch","onUserInput","field"],"sources":["/Users/synallage/Desktop/fomoswap-uni/interface-73580de922ce3ff642430d71aa24f5c053e6dd4d/src/state/burn/hooks.ts"],"sourcesContent":["import { Currency, CurrencyAmount, JSBI, Pair, Percent, TokenAmount } from 'fomoswap-bera1'\nimport { useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { usePair } from '../../data/Reserves'\nimport { useTotalSupply } from '../../data/TotalSupply'\n\nimport { useActiveWeb3React } from '../../hooks'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks'\nimport { useTokenBalances } from '../wallet/hooks'\nimport { Field, typeInput } from './actions'\n\nexport function useBurnState(): AppState['burn'] {\n  return useSelector<AppState, AppState['burn']>(state => state.burn)\n}\n\nexport function useDerivedBurnInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined\n): {\n  pair?: Pair | null\n  parsedAmounts: {\n    [Field.LIQUIDITY_PERCENT]: Percent\n    [Field.LIQUIDITY]?: TokenAmount\n    [Field.CURRENCY_A]?: CurrencyAmount\n    [Field.CURRENCY_B]?: CurrencyAmount\n  }\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { independentField, typedValue } = useBurnState()\n\n  // pair + totalsupply\n  const [, pair] = usePair(currencyA, currencyB)\n\n  // balances\n  const relevantTokenBalances = useTokenBalances(account ?? undefined, [pair?.liquidityToken])\n  const userLiquidity: undefined | TokenAmount = relevantTokenBalances?.[pair?.liquidityToken?.address ?? '']\n\n  const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n  const tokens = {\n    [Field.CURRENCY_A]: tokenA,\n    [Field.CURRENCY_B]: tokenB,\n    [Field.LIQUIDITY]: pair?.liquidityToken\n  }\n\n  // liquidity values\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n  const liquidityValueA =\n    pair &&\n    totalSupply &&\n    userLiquidity &&\n    tokenA &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalSupply.raw, userLiquidity.raw)\n      ? new TokenAmount(tokenA, pair.getLiquidityValue(tokenA, totalSupply, userLiquidity, false).raw)\n      : undefined\n  const liquidityValueB =\n    pair &&\n    totalSupply &&\n    userLiquidity &&\n    tokenB &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalSupply.raw, userLiquidity.raw)\n      ? new TokenAmount(tokenB, pair.getLiquidityValue(tokenB, totalSupply, userLiquidity, false).raw)\n      : undefined\n  const liquidityValues: { [Field.CURRENCY_A]?: TokenAmount; [Field.CURRENCY_B]?: TokenAmount } = {\n    [Field.CURRENCY_A]: liquidityValueA,\n    [Field.CURRENCY_B]: liquidityValueB\n  }\n\n  let percentToRemove: Percent = new Percent('0', '100')\n  // user specified a %\n  if (independentField === Field.LIQUIDITY_PERCENT) {\n    percentToRemove = new Percent(typedValue, '100')\n  }\n  // user specified a specific amount of liquidity tokens\n  else if (independentField === Field.LIQUIDITY) {\n    if (pair?.liquidityToken) {\n      const independentAmount = tryParseAmount(typedValue, pair.liquidityToken)\n      if (independentAmount && userLiquidity && !independentAmount.greaterThan(userLiquidity)) {\n        percentToRemove = new Percent(independentAmount.raw, userLiquidity.raw)\n      }\n    }\n  }\n  // user specified a specific amount of token a or b\n  else {\n    if (tokens[independentField]) {\n      const independentAmount = tryParseAmount(typedValue, tokens[independentField])\n      const liquidityValue = liquidityValues[independentField]\n      if (independentAmount && liquidityValue && !independentAmount.greaterThan(liquidityValue)) {\n        percentToRemove = new Percent(independentAmount.raw, liquidityValue.raw)\n      }\n    }\n  }\n\n  const parsedAmounts: {\n    [Field.LIQUIDITY_PERCENT]: Percent\n    [Field.LIQUIDITY]?: TokenAmount\n    [Field.CURRENCY_A]?: TokenAmount\n    [Field.CURRENCY_B]?: TokenAmount\n  } = {\n    [Field.LIQUIDITY_PERCENT]: percentToRemove,\n    [Field.LIQUIDITY]:\n      userLiquidity && percentToRemove && percentToRemove.greaterThan('0')\n        ? new TokenAmount(userLiquidity.token, percentToRemove.multiply(userLiquidity.raw).quotient)\n        : undefined,\n    [Field.CURRENCY_A]:\n      tokenA && percentToRemove && percentToRemove.greaterThan('0') && liquidityValueA\n        ? new TokenAmount(tokenA, percentToRemove.multiply(liquidityValueA.raw).quotient)\n        : undefined,\n    [Field.CURRENCY_B]:\n      tokenB && percentToRemove && percentToRemove.greaterThan('0') && liquidityValueB\n        ? new TokenAmount(tokenB, percentToRemove.multiply(liquidityValueB.raw).quotient)\n        : undefined\n  }\n\n  let error: string | undefined\n  if (!account) {\n    error = 'Connect Wallet'\n  }\n\n  if (!parsedAmounts[Field.LIQUIDITY] || !parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? 'Enter an amount'\n  }\n\n  return { pair, parsedAmounts, error }\n}\n\nexport function useBurnActionHandlers(): {\n  onUserInput: (field: Field, typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch]\n  )\n\n  return {\n    onUserInput\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}