{"ast":null,"code":"import { getCommonParent, getTabbableNodes, getAllTabbableNodes, parentAutofocusables } from './utils/DOMutils';\nimport pickFirstFocus, { pickFocusable } from './utils/firstFocus';\nimport getAllAffectedNodes from './utils/all-affected';\nimport { asArray } from './utils/array';\nimport { correctNodes } from './utils/correctFocus';\nvar findAutoFocused = function findAutoFocused(autoFocusables) {\n  return function (node) {\n    return !!node.autofocus || node.dataset && !!node.dataset.autofocus || autoFocusables.indexOf(node) >= 0;\n  };\n};\nvar isGuard = function isGuard(node) {\n  return node && node.dataset && node.dataset.focusGuard;\n};\nvar notAGuard = function notAGuard(node) {\n  return !isGuard(node);\n};\nexport var NEW_FOCUS = 'NEW_FOCUS';\nexport var newFocus = function newFocus(innerNodes, outerNodes, activeElement, lastNode) {\n  var cnt = innerNodes.length;\n  var firstFocus = innerNodes[0];\n  var lastFocus = innerNodes[cnt - 1];\n  var isOnGuard = isGuard(activeElement);\n\n  // focus is inside\n  if (innerNodes.indexOf(activeElement) >= 0) {\n    return undefined;\n  }\n  var activeIndex = outerNodes.indexOf(activeElement);\n  var lastIndex = outerNodes.indexOf(lastNode || activeIndex);\n  var lastNodeInside = innerNodes.indexOf(lastNode);\n  var indexDiff = activeIndex - lastIndex;\n  var firstNodeIndex = outerNodes.indexOf(firstFocus);\n  var lastNodeIndex = outerNodes.indexOf(lastFocus);\n  var correctedNodes = correctNodes(outerNodes);\n  var correctedIndexDiff = correctedNodes.indexOf(activeElement) - correctedNodes.indexOf(lastNode || activeIndex);\n  var returnFirstNode = pickFocusable(innerNodes, 0);\n  var returnLastNode = pickFocusable(innerNodes, cnt - 1);\n\n  // new focus\n  if (activeIndex === -1 || lastNodeInside === -1) {\n    return NEW_FOCUS;\n  }\n  // old focus\n  if (!indexDiff && lastNodeInside >= 0) {\n    return lastNodeInside;\n  }\n  // first element\n  if (activeIndex <= firstNodeIndex && isOnGuard && Math.abs(indexDiff) > 1) {\n    return returnLastNode;\n  }\n  // last element\n  if (activeIndex >= lastNodeIndex && isOnGuard && Math.abs(indexDiff) > 1) {\n    return returnFirstNode;\n  }\n  // jump out, but not on the guard\n  if (indexDiff && Math.abs(correctedIndexDiff) > 1) {\n    return lastNodeInside;\n  }\n  // focus above lock\n  if (activeIndex <= firstNodeIndex) {\n    return returnLastNode;\n  }\n  // focus below lock\n  if (activeIndex > lastNodeIndex) {\n    return returnFirstNode;\n  }\n  // index is inside tab order, but outside Lock\n  if (indexDiff) {\n    if (Math.abs(indexDiff) > 1) {\n      return lastNodeInside;\n    }\n    return (cnt + lastNodeInside + indexDiff) % cnt;\n  }\n  // do nothing\n  return undefined;\n};\nvar getTopCommonParent = function getTopCommonParent(baseActiveElement, leftEntry, rightEntries) {\n  var activeElements = asArray(baseActiveElement);\n  var leftEntries = asArray(leftEntry);\n  var activeElement = activeElements[0];\n  var topCommon = null;\n  leftEntries.filter(Boolean).forEach(function (entry) {\n    topCommon = getCommonParent(topCommon || entry, entry) || topCommon;\n    rightEntries.filter(Boolean).forEach(function (subEntry) {\n      var common = getCommonParent(activeElement, subEntry);\n      if (common) {\n        if (!topCommon || common.contains(topCommon)) {\n          topCommon = common;\n        } else {\n          topCommon = getCommonParent(common, topCommon);\n        }\n      }\n    });\n  });\n  return topCommon;\n};\nvar allParentAutofocusables = function allParentAutofocusables(entries) {\n  return entries.reduce(function (acc, node) {\n    return acc.concat(parentAutofocusables(node));\n  }, []);\n};\nvar reorderNodes = function reorderNodes(srcNodes, dstNodes) {\n  var remap = new Map();\n  // no Set(dstNodes) for IE11 :(\n  dstNodes.forEach(function (entity) {\n    return remap.set(entity.node, entity);\n  });\n  // remap to dstNodes\n  return srcNodes.map(function (node) {\n    return remap.get(node);\n  }).filter(Boolean);\n};\nexport var getFocusabledIn = function getFocusabledIn(topNode) {\n  var entries = getAllAffectedNodes(topNode).filter(notAGuard);\n  var commonParent = getTopCommonParent(topNode, topNode, entries);\n  var outerNodes = getTabbableNodes([commonParent], true);\n  var innerElements = getTabbableNodes(entries).filter(function (_ref) {\n    var node = _ref.node;\n    return notAGuard(node);\n  }).map(function (_ref2) {\n    var node = _ref2.node;\n    return node;\n  });\n  return outerNodes.map(function (_ref3) {\n    var node = _ref3.node,\n      index = _ref3.index;\n    return {\n      node: node,\n      index: index,\n      lockItem: innerElements.indexOf(node) >= 0,\n      guard: isGuard(node)\n    };\n  });\n};\nvar getFocusMerge = function getFocusMerge(topNode, lastNode) {\n  var activeElement = document && document.activeElement;\n  var entries = getAllAffectedNodes(topNode).filter(notAGuard);\n  var commonParent = getTopCommonParent(activeElement || topNode, topNode, entries);\n  var anyFocusable = getAllTabbableNodes(entries);\n  var innerElements = getTabbableNodes(entries).filter(function (_ref4) {\n    var node = _ref4.node;\n    return notAGuard(node);\n  });\n  if (!innerElements[0]) {\n    innerElements = anyFocusable;\n    if (!innerElements[0]) {\n      return undefined;\n    }\n  }\n  var outerNodes = getAllTabbableNodes([commonParent]).map(function (_ref5) {\n    var node = _ref5.node;\n    return node;\n  });\n  var orderedInnerElements = reorderNodes(outerNodes, innerElements);\n  var innerNodes = orderedInnerElements.map(function (_ref6) {\n    var node = _ref6.node;\n    return node;\n  });\n  var newId = newFocus(innerNodes, outerNodes, activeElement, lastNode);\n  if (newId === \"NEW_FOCUS\") {\n    var autoFocusable = anyFocusable.map(function (_ref7) {\n      var node = _ref7.node;\n      return node;\n    }).filter(findAutoFocused(allParentAutofocusables(entries)));\n    return {\n      node: autoFocusable && autoFocusable.length ? pickFirstFocus(autoFocusable) : pickFirstFocus(innerNodes)\n    };\n  }\n  if (newId === undefined) {\n    return newId;\n  }\n  return orderedInnerElements[newId];\n};\nexport default getFocusMerge;","map":{"version":3,"names":["getCommonParent","getTabbableNodes","getAllTabbableNodes","parentAutofocusables","pickFirstFocus","pickFocusable","getAllAffectedNodes","asArray","correctNodes","findAutoFocused","autoFocusables","node","autofocus","dataset","indexOf","isGuard","focusGuard","notAGuard","NEW_FOCUS","newFocus","innerNodes","outerNodes","activeElement","lastNode","cnt","length","firstFocus","lastFocus","isOnGuard","undefined","activeIndex","lastIndex","lastNodeInside","indexDiff","firstNodeIndex","lastNodeIndex","correctedNodes","correctedIndexDiff","returnFirstNode","returnLastNode","Math","abs","getTopCommonParent","baseActiveElement","leftEntry","rightEntries","activeElements","leftEntries","topCommon","filter","Boolean","forEach","entry","subEntry","common","contains","allParentAutofocusables","entries","reduce","acc","concat","reorderNodes","srcNodes","dstNodes","remap","Map","entity","set","map","get","getFocusabledIn","topNode","commonParent","innerElements","_ref","_ref2","_ref3","index","lockItem","guard","getFocusMerge","document","anyFocusable","_ref4","_ref5","orderedInnerElements","_ref6","newId","autoFocusable","_ref7"],"sources":["/Users/synallage/Desktop/fomoswap-uni/interface-73580de922ce3ff642430d71aa24f5c053e6dd4d/node_modules/focus-lock/dist/es2015/focusMerge.js"],"sourcesContent":["import { getCommonParent, getTabbableNodes, getAllTabbableNodes, parentAutofocusables } from './utils/DOMutils';\nimport pickFirstFocus, { pickFocusable } from './utils/firstFocus';\nimport getAllAffectedNodes from './utils/all-affected';\nimport { asArray } from './utils/array';\nimport { correctNodes } from './utils/correctFocus';\n\nvar findAutoFocused = function findAutoFocused(autoFocusables) {\n  return function (node) {\n    return !!node.autofocus || node.dataset && !!node.dataset.autofocus || autoFocusables.indexOf(node) >= 0;\n  };\n};\n\nvar isGuard = function isGuard(node) {\n  return node && node.dataset && node.dataset.focusGuard;\n};\nvar notAGuard = function notAGuard(node) {\n  return !isGuard(node);\n};\n\nexport var NEW_FOCUS = 'NEW_FOCUS';\n\nexport var newFocus = function newFocus(innerNodes, outerNodes, activeElement, lastNode) {\n  var cnt = innerNodes.length;\n  var firstFocus = innerNodes[0];\n  var lastFocus = innerNodes[cnt - 1];\n  var isOnGuard = isGuard(activeElement);\n\n  // focus is inside\n  if (innerNodes.indexOf(activeElement) >= 0) {\n    return undefined;\n  }\n\n  var activeIndex = outerNodes.indexOf(activeElement);\n  var lastIndex = outerNodes.indexOf(lastNode || activeIndex);\n  var lastNodeInside = innerNodes.indexOf(lastNode);\n  var indexDiff = activeIndex - lastIndex;\n  var firstNodeIndex = outerNodes.indexOf(firstFocus);\n  var lastNodeIndex = outerNodes.indexOf(lastFocus);\n\n  var correctedNodes = correctNodes(outerNodes);\n  var correctedIndexDiff = correctedNodes.indexOf(activeElement) - correctedNodes.indexOf(lastNode || activeIndex);\n\n  var returnFirstNode = pickFocusable(innerNodes, 0);\n  var returnLastNode = pickFocusable(innerNodes, cnt - 1);\n\n  // new focus\n  if (activeIndex === -1 || lastNodeInside === -1) {\n    return NEW_FOCUS;\n  }\n  // old focus\n  if (!indexDiff && lastNodeInside >= 0) {\n    return lastNodeInside;\n  }\n  // first element\n  if (activeIndex <= firstNodeIndex && isOnGuard && Math.abs(indexDiff) > 1) {\n    return returnLastNode;\n  }\n  // last element\n  if (activeIndex >= lastNodeIndex && isOnGuard && Math.abs(indexDiff) > 1) {\n    return returnFirstNode;\n  }\n  // jump out, but not on the guard\n  if (indexDiff && Math.abs(correctedIndexDiff) > 1) {\n    return lastNodeInside;\n  }\n  // focus above lock\n  if (activeIndex <= firstNodeIndex) {\n    return returnLastNode;\n  }\n  // focus below lock\n  if (activeIndex > lastNodeIndex) {\n    return returnFirstNode;\n  }\n  // index is inside tab order, but outside Lock\n  if (indexDiff) {\n    if (Math.abs(indexDiff) > 1) {\n      return lastNodeInside;\n    }\n    return (cnt + lastNodeInside + indexDiff) % cnt;\n  }\n  // do nothing\n  return undefined;\n};\n\nvar getTopCommonParent = function getTopCommonParent(baseActiveElement, leftEntry, rightEntries) {\n  var activeElements = asArray(baseActiveElement);\n  var leftEntries = asArray(leftEntry);\n  var activeElement = activeElements[0];\n  var topCommon = null;\n  leftEntries.filter(Boolean).forEach(function (entry) {\n    topCommon = getCommonParent(topCommon || entry, entry) || topCommon;\n    rightEntries.filter(Boolean).forEach(function (subEntry) {\n      var common = getCommonParent(activeElement, subEntry);\n      if (common) {\n        if (!topCommon || common.contains(topCommon)) {\n          topCommon = common;\n        } else {\n          topCommon = getCommonParent(common, topCommon);\n        }\n      }\n    });\n  });\n  return topCommon;\n};\n\nvar allParentAutofocusables = function allParentAutofocusables(entries) {\n  return entries.reduce(function (acc, node) {\n    return acc.concat(parentAutofocusables(node));\n  }, []);\n};\n\nvar reorderNodes = function reorderNodes(srcNodes, dstNodes) {\n  var remap = new Map();\n  // no Set(dstNodes) for IE11 :(\n  dstNodes.forEach(function (entity) {\n    return remap.set(entity.node, entity);\n  });\n  // remap to dstNodes\n  return srcNodes.map(function (node) {\n    return remap.get(node);\n  }).filter(Boolean);\n};\n\nexport var getFocusabledIn = function getFocusabledIn(topNode) {\n  var entries = getAllAffectedNodes(topNode).filter(notAGuard);\n  var commonParent = getTopCommonParent(topNode, topNode, entries);\n  var outerNodes = getTabbableNodes([commonParent], true);\n  var innerElements = getTabbableNodes(entries).filter(function (_ref) {\n    var node = _ref.node;\n    return notAGuard(node);\n  }).map(function (_ref2) {\n    var node = _ref2.node;\n    return node;\n  });\n\n  return outerNodes.map(function (_ref3) {\n    var node = _ref3.node,\n        index = _ref3.index;\n    return {\n      node: node,\n      index: index,\n      lockItem: innerElements.indexOf(node) >= 0,\n      guard: isGuard(node)\n    };\n  });\n};\n\nvar getFocusMerge = function getFocusMerge(topNode, lastNode) {\n  var activeElement = document && document.activeElement;\n  var entries = getAllAffectedNodes(topNode).filter(notAGuard);\n\n  var commonParent = getTopCommonParent(activeElement || topNode, topNode, entries);\n\n  var anyFocusable = getAllTabbableNodes(entries);\n  var innerElements = getTabbableNodes(entries).filter(function (_ref4) {\n    var node = _ref4.node;\n    return notAGuard(node);\n  });\n\n  if (!innerElements[0]) {\n    innerElements = anyFocusable;\n    if (!innerElements[0]) {\n      return undefined;\n    }\n  }\n\n  var outerNodes = getAllTabbableNodes([commonParent]).map(function (_ref5) {\n    var node = _ref5.node;\n    return node;\n  });\n  var orderedInnerElements = reorderNodes(outerNodes, innerElements);\n  var innerNodes = orderedInnerElements.map(function (_ref6) {\n    var node = _ref6.node;\n    return node;\n  });\n\n  var newId = newFocus(innerNodes, outerNodes, activeElement, lastNode);\n\n  if (newId === \"NEW_FOCUS\") {\n    var autoFocusable = anyFocusable.map(function (_ref7) {\n      var node = _ref7.node;\n      return node;\n    }).filter(findAutoFocused(allParentAutofocusables(entries)));\n\n    return {\n      node: autoFocusable && autoFocusable.length ? pickFirstFocus(autoFocusable) : pickFirstFocus(innerNodes)\n    };\n  }\n\n  if (newId === undefined) {\n    return newId;\n  }\n  return orderedInnerElements[newId];\n};\n\nexport default getFocusMerge;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}