{"ast":null,"code":"import { createAction } from '@reduxjs/toolkit';\nexport let Field;\n(function (Field) {\n  Field[\"INPUT\"] = \"INPUT\";\n  Field[\"OUTPUT\"] = \"OUTPUT\";\n})(Field || (Field = {}));\nexport const selectCurrency = createAction('selectCurrency');\nexport const switchCurrencies = createAction('switchCurrencies');\nexport const typeInput = createAction('typeInput');\nexport const replaceSwapState = createAction('replaceSwapState');\nexport const setRecipient = createAction('setRecipient');","map":{"version":3,"names":["createAction","Field","selectCurrency","switchCurrencies","typeInput","replaceSwapState","setRecipient"],"sources":["/Users/synallage/Desktop/fomoswap-uni/interface-73580de922ce3ff642430d71aa24f5c053e6dd4d/src/state/swap/actions.ts"],"sourcesContent":["import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT'\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('selectCurrency')\nexport const switchCurrencies = createAction<void>('switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('setRecipient')\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,kBAAkB;AAE/C,WAAYC,KAAK;AAGhB,WAHWA,KAAK;EAALA,KAAK;EAALA,KAAK;AAAA,GAALA,KAAK,KAALA,KAAK;AAKjB,OAAO,MAAMC,cAAc,GAAGF,YAAY,CAAuC,gBAAgB,CAAC;AAClG,OAAO,MAAMG,gBAAgB,GAAGH,YAAY,CAAO,kBAAkB,CAAC;AACtE,OAAO,MAAMI,SAAS,GAAGJ,YAAY,CAAuC,WAAW,CAAC;AACxF,OAAO,MAAMK,gBAAgB,GAAGL,YAAY,CAMzC,kBAAkB,CAAC;AACtB,OAAO,MAAMM,YAAY,GAAGN,YAAY,CAA+B,cAAc,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}