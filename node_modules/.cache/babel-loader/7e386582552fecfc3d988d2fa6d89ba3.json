{"ast":null,"code":"var _jsxFileName = \"/Users/synallage/Desktop/fomoswap-uni/interface-73580de922ce3ff642430d71aa24f5c053e6dd4d/src/components/SearchModal/CurrencySearchModal.tsx\";\nimport React, { useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { isMobile } from 'react-device-detect';\nimport { useTranslation } from 'react-i18next';\nimport { Text } from 'rebass';\nimport { ThemeContext } from 'styled-components';\nimport Card from '../../components/Card';\nimport { useActiveWeb3React } from '../../hooks';\nimport { useAllTokens, useToken } from '../../hooks/Tokens';\nimport useInterval from '../../hooks/useInterval';\nimport { useAllTokenBalances, useTokenBalance } from '../../state/wallet/hooks';\nimport { CloseIcon, LinkStyledButton } from '../../theme';\nimport { isAddress } from '../../utils';\nimport Column from '../Column';\nimport Modal from '../Modal';\nimport QuestionHelper from '../QuestionHelper';\nimport { AutoRow, RowBetween } from '../Row';\nimport Tooltip from '../Tooltip';\nimport CommonBases from './CommonBases';\nimport { filterTokens } from './filtering';\nimport { useTokenComparator } from './sorting';\nimport { PaddedColumn, SearchInput } from './styleds';\nimport CurrencyList from './CurrencyList';\nimport SortButton from './SortButton';\nexport default function CurrencySearchModal({\n  isOpen,\n  onDismiss,\n  onCurrencySelect,\n  hiddenCurrency,\n  showSendWithSwap,\n  otherSelectedCurrency,\n  showCommonBases = false\n}) {\n  const {\n    t\n  } = useTranslation();\n  const {\n    account,\n    chainId\n  } = useActiveWeb3React();\n  const theme = useContext(ThemeContext);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [tooltipOpen, setTooltipOpen] = useState(false);\n  const [invertSearchOrder, setInvertSearchOrder] = useState(false);\n  const allTokens = useAllTokens();\n\n  // if the current input is an address, and we don't have the token in context, try to fetch it and import\n  const searchToken = useToken(searchQuery);\n  const searchTokenBalance = useTokenBalance(account, searchToken);\n  const allTokenBalances_ = useAllTokenBalances();\n  const allTokenBalances = searchToken ? {\n    [searchToken.address]: searchTokenBalance\n  } : allTokenBalances_ !== null && allTokenBalances_ !== void 0 ? allTokenBalances_ : {};\n  const tokenComparator = useTokenComparator(invertSearchOrder);\n  const filteredTokens = useMemo(() => {\n    if (searchToken) return [searchToken];\n    return filterTokens(Object.values(allTokens), searchQuery);\n  }, [searchToken, allTokens, searchQuery]);\n  const filteredSortedTokens = useMemo(() => {\n    if (searchToken) return [searchToken];\n    const sorted = filteredTokens.sort(tokenComparator);\n    const symbolMatch = searchQuery.toLowerCase().split(/\\s+/).filter(s => s.length > 0);\n    if (symbolMatch.length > 1) return sorted;\n    return [...(searchToken ? [searchToken] : []),\n    // sort any exact symbol matches first\n    ...sorted.filter(token => token.symbol.toLowerCase() === symbolMatch[0]), ...sorted.filter(token => token.symbol.toLowerCase() !== symbolMatch[0])];\n  }, [filteredTokens, searchQuery, searchToken, tokenComparator]);\n  const handleCurrencySelect = useCallback(currency => {\n    onCurrencySelect(currency);\n    onDismiss();\n  }, [onDismiss, onCurrencySelect]);\n\n  // clear the input on open\n  useEffect(() => {\n    if (isOpen) setSearchQuery('');\n  }, [isOpen, setSearchQuery]);\n\n  // manage focus on modal show\n  const inputRef = useRef();\n  const handleInput = useCallback(event => {\n    const input = event.target.value;\n    const checksummedInput = isAddress(input);\n    setSearchQuery(checksummedInput || input);\n    setTooltipOpen(false);\n  }, []);\n  const openTooltip = useCallback(() => {\n    setTooltipOpen(true);\n  }, [setTooltipOpen]);\n  const closeTooltip = useCallback(() => setTooltipOpen(false), [setTooltipOpen]);\n  useInterval(() => {\n    setTooltipOpen(false);\n  }, tooltipOpen ? 4000 : null, false);\n  const handleEnter = useCallback(e => {\n    if (e.key === 'Enter' && filteredSortedTokens.length > 0) {\n      if (filteredSortedTokens[0].symbol.toLowerCase() === searchQuery.trim().toLowerCase() || filteredSortedTokens.length === 1) {\n        handleCurrencySelect(filteredSortedTokens[0]);\n      }\n    }\n  }, [filteredSortedTokens, handleCurrencySelect, searchQuery]);\n  return /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpen,\n    onDismiss: onDismiss,\n    maxHeight: 70,\n    initialFocusRef: isMobile ? undefined : inputRef,\n    minHeight: 70,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Column, {\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PaddedColumn, {\n    gap: \"14px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontWeight: 500,\n    fontSize: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, \"Select a token\", /*#__PURE__*/React.createElement(QuestionHelper, {\n    disabled: tooltipOpen,\n    text: \"Find a token by searching for its name or symbol or by pasting its address below.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(CloseIcon, {\n    onClick: onDismiss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Tooltip, {\n    text: \"Import any token into your list by pasting the token address into the search field.\",\n    show: tooltipOpen,\n    placement: \"bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SearchInput, {\n    type: \"text\",\n    id: \"token-search-input\",\n    placeholder: t('tokenSearchPlaceholder'),\n    value: searchQuery,\n    ref: inputRef,\n    onChange: handleInput,\n    onFocus: closeTooltip,\n    onBlur: closeTooltip,\n    onKeyDown: handleEnter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  })), showCommonBases && /*#__PURE__*/React.createElement(CommonBases, {\n    chainId: chainId,\n    onSelect: handleCurrencySelect,\n    selectedCurrency: hiddenCurrency,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontSize: 14,\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, \"Token Name\"), /*#__PURE__*/React.createElement(SortButton, {\n    ascending: invertSearchOrder,\n    toggleSortOrder: () => setInvertSearchOrder(iso => !iso),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      height: '1px',\n      backgroundColor: theme.bg2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CurrencyList, {\n    currencies: filteredSortedTokens,\n    allBalances: allTokenBalances,\n    onCurrencySelect: handleCurrencySelect,\n    otherCurrency: otherSelectedCurrency,\n    selectedCurrency: hiddenCurrency,\n    showSendWithSwap: showSendWithSwap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      height: '1px',\n      backgroundColor: theme.bg2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AutoRow, {\n    justify: 'center',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LinkStyledButton, {\n    style: {\n      fontWeight: 500,\n      color: theme.text2,\n      fontSize: 16\n    },\n    onClick: openTooltip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  }, \"Having trouble finding a token?\"))))));\n}","map":{"version":3,"names":["React","useCallback","useContext","useEffect","useMemo","useRef","useState","isMobile","useTranslation","Text","ThemeContext","Card","useActiveWeb3React","useAllTokens","useToken","useInterval","useAllTokenBalances","useTokenBalance","CloseIcon","LinkStyledButton","isAddress","Column","Modal","QuestionHelper","AutoRow","RowBetween","Tooltip","CommonBases","filterTokens","useTokenComparator","PaddedColumn","SearchInput","CurrencyList","SortButton","CurrencySearchModal","isOpen","onDismiss","onCurrencySelect","hiddenCurrency","showSendWithSwap","otherSelectedCurrency","showCommonBases","t","account","chainId","theme","searchQuery","setSearchQuery","tooltipOpen","setTooltipOpen","invertSearchOrder","setInvertSearchOrder","allTokens","searchToken","searchTokenBalance","allTokenBalances_","allTokenBalances","address","tokenComparator","filteredTokens","Object","values","filteredSortedTokens","sorted","sort","symbolMatch","toLowerCase","split","filter","s","length","token","symbol","handleCurrencySelect","currency","inputRef","handleInput","event","input","target","value","checksummedInput","openTooltip","closeTooltip","handleEnter","e","key","trim","createElement","maxHeight","initialFocusRef","undefined","minHeight","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","width","gap","fontWeight","fontSize","disabled","text","onClick","show","placement","type","id","placeholder","ref","onChange","onFocus","onBlur","onKeyDown","onSelect","selectedCurrency","ascending","toggleSortOrder","iso","height","backgroundColor","bg2","currencies","allBalances","otherCurrency","justify","color","text2"],"sources":["/Users/synallage/Desktop/fomoswap-uni/interface-73580de922ce3ff642430d71aa24f5c053e6dd4d/src/components/SearchModal/CurrencySearchModal.tsx"],"sourcesContent":["import { Currency, Token } from 'fomoswap-bera1'\nimport React, { KeyboardEvent, useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react'\nimport { isMobile } from 'react-device-detect'\nimport { useTranslation } from 'react-i18next'\nimport { Text } from 'rebass'\nimport { ThemeContext } from 'styled-components'\nimport Card from '../../components/Card'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useAllTokens, useToken } from '../../hooks/Tokens'\nimport useInterval from '../../hooks/useInterval'\nimport { useAllTokenBalances, useTokenBalance } from '../../state/wallet/hooks'\nimport { CloseIcon, LinkStyledButton } from '../../theme'\nimport { isAddress } from '../../utils'\nimport Column from '../Column'\nimport Modal from '../Modal'\nimport QuestionHelper from '../QuestionHelper'\nimport { AutoRow, RowBetween } from '../Row'\nimport Tooltip from '../Tooltip'\nimport CommonBases from './CommonBases'\nimport { filterTokens } from './filtering'\nimport { useTokenComparator } from './sorting'\nimport { PaddedColumn, SearchInput } from './styleds'\nimport CurrencyList from './CurrencyList'\nimport SortButton from './SortButton'\n\ninterface CurrencySearchModalProps {\n  isOpen?: boolean\n  onDismiss?: () => void\n  hiddenCurrency?: Currency\n  showSendWithSwap?: boolean\n  onCurrencySelect?: (currency: Currency) => void\n  otherSelectedCurrency?: Currency\n  showCommonBases?: boolean\n}\n\nexport default function CurrencySearchModal({\n  isOpen,\n  onDismiss,\n  onCurrencySelect,\n  hiddenCurrency,\n  showSendWithSwap,\n  otherSelectedCurrency,\n  showCommonBases = false\n}: CurrencySearchModalProps) {\n  const { t } = useTranslation()\n  const { account, chainId } = useActiveWeb3React()\n  const theme = useContext(ThemeContext)\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const [tooltipOpen, setTooltipOpen] = useState<boolean>(false)\n  const [invertSearchOrder, setInvertSearchOrder] = useState<boolean>(false)\n  const allTokens = useAllTokens()\n\n  // if the current input is an address, and we don't have the token in context, try to fetch it and import\n  const searchToken = useToken(searchQuery)\n  const searchTokenBalance = useTokenBalance(account, searchToken)\n  const allTokenBalances_ = useAllTokenBalances()\n  const allTokenBalances = searchToken\n    ? {\n        [searchToken.address]: searchTokenBalance\n      }\n    : allTokenBalances_ ?? {}\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    if (searchToken) return [searchToken]\n    return filterTokens(Object.values(allTokens), searchQuery)\n  }, [searchToken, allTokens, searchQuery])\n\n  const filteredSortedTokens: Token[] = useMemo(() => {\n    if (searchToken) return [searchToken]\n    const sorted = filteredTokens.sort(tokenComparator)\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter(s => s.length > 0)\n    if (symbolMatch.length > 1) return sorted\n\n    return [\n      ...(searchToken ? [searchToken] : []),\n      // sort any exact symbol matches first\n      ...sorted.filter(token => token.symbol.toLowerCase() === symbolMatch[0]),\n      ...sorted.filter(token => token.symbol.toLowerCase() !== symbolMatch[0])\n    ]\n  }, [filteredTokens, searchQuery, searchToken, tokenComparator])\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      onDismiss()\n    },\n    [onDismiss, onCurrencySelect]\n  )\n\n  // clear the input on open\n  useEffect(() => {\n    if (isOpen) setSearchQuery('')\n  }, [isOpen, setSearchQuery])\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback(event => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    setTooltipOpen(false)\n  }, [])\n\n  const openTooltip = useCallback(() => {\n    setTooltipOpen(true)\n  }, [setTooltipOpen])\n  const closeTooltip = useCallback(() => setTooltipOpen(false), [setTooltipOpen])\n\n  useInterval(\n    () => {\n      setTooltipOpen(false)\n    },\n    tooltipOpen ? 4000 : null,\n    false\n  )\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter' && filteredSortedTokens.length > 0) {\n        if (\n          filteredSortedTokens[0].symbol.toLowerCase() === searchQuery.trim().toLowerCase() ||\n          filteredSortedTokens.length === 1\n        ) {\n          handleCurrencySelect(filteredSortedTokens[0])\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, searchQuery]\n  )\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onDismiss={onDismiss}\n      maxHeight={70}\n      initialFocusRef={isMobile ? undefined : inputRef}\n      minHeight={70}\n    >\n      <Column style={{ width: '100%' }}>\n        <PaddedColumn gap=\"14px\">\n          <RowBetween>\n            <Text fontWeight={500} fontSize={16}>\n              Select a token\n              <QuestionHelper\n                disabled={tooltipOpen}\n                text=\"Find a token by searching for its name or symbol or by pasting its address below.\"\n              />\n            </Text>\n            <CloseIcon onClick={onDismiss} />\n          </RowBetween>\n          <Tooltip\n            text=\"Import any token into your list by pasting the token address into the search field.\"\n            show={tooltipOpen}\n            placement=\"bottom\"\n          >\n            <SearchInput\n              type=\"text\"\n              id=\"token-search-input\"\n              placeholder={t('tokenSearchPlaceholder')}\n              value={searchQuery}\n              ref={inputRef}\n              onChange={handleInput}\n              onFocus={closeTooltip}\n              onBlur={closeTooltip}\n              onKeyDown={handleEnter}\n            />\n          </Tooltip>\n          {showCommonBases && (\n            <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={hiddenCurrency} />\n          )}\n          <RowBetween>\n            <Text fontSize={14} fontWeight={500}>\n              Token Name\n            </Text>\n            <SortButton ascending={invertSearchOrder} toggleSortOrder={() => setInvertSearchOrder(iso => !iso)} />\n          </RowBetween>\n        </PaddedColumn>\n        <div style={{ width: '100%', height: '1px', backgroundColor: theme.bg2 }} />\n        <CurrencyList\n          currencies={filteredSortedTokens}\n          allBalances={allTokenBalances}\n          onCurrencySelect={handleCurrencySelect}\n          otherCurrency={otherSelectedCurrency}\n          selectedCurrency={hiddenCurrency}\n          showSendWithSwap={showSendWithSwap}\n        />\n        <div style={{ width: '100%', height: '1px', backgroundColor: theme.bg2 }} />\n        <Card>\n          <AutoRow justify={'center'}>\n            <div>\n              <LinkStyledButton style={{ fontWeight: 500, color: theme.text2, fontSize: 16 }} onClick={openTooltip}>\n                Having trouble finding a token?\n              </LinkStyledButton>\n            </div>\n          </AutoRow>\n        </Card>\n      </Column>\n    </Modal>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}