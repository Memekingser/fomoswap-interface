{"ast":null,"code":"import{ChainId}from'fomoswap-artio';import{FortmaticConnector as FortmaticConnectorCore}from'@web3-react/fortmatic-connector';export const OVERLAY_READY='OVERLAY_READY';const CHAIN_ID_NETWORK_ARGUMENT={[ChainId.MAINNET]:undefined,[ChainId.ROPSTEN]:'ropsten',[ChainId.RINKEBY]:'rinkeby',[ChainId.KOVAN]:'kovan'};export class FortmaticConnector extends FortmaticConnectorCore{async activate(){if(!this.fortmatic){const{default:Fortmatic}=await import('fortmatic');const{apiKey,chainId}=this;if(chainId in CHAIN_ID_NETWORK_ARGUMENT){this.fortmatic=new Fortmatic(apiKey,CHAIN_ID_NETWORK_ARGUMENT[chainId]);}else{throw new Error(\"Unsupported network ID: \".concat(chainId));}}const provider=this.fortmatic.getProvider();const pollForOverlayReady=new Promise(resolve=>{const interval=setInterval(()=>{if(provider.overlayReady){clearInterval(interval);this.emit(OVERLAY_READY);resolve();}},200);});const[account]=await Promise.all([provider.enable().then(accounts=>accounts[0]),pollForOverlayReady]);return{provider:this.fortmatic.getProvider(),chainId:this.chainId,account};}}","map":{"version":3,"names":["ChainId","FortmaticConnector","FortmaticConnectorCore","OVERLAY_READY","CHAIN_ID_NETWORK_ARGUMENT","MAINNET","undefined","ROPSTEN","RINKEBY","KOVAN","activate","fortmatic","default","Fortmatic","apiKey","chainId","Error","concat","provider","getProvider","pollForOverlayReady","Promise","resolve","interval","setInterval","overlayReady","clearInterval","emit","account","all","enable","then","accounts"],"sources":["/Users/synallage/Desktop/fomoswap-uni/interface-73580de922ce3ff642430d71aa24f5c053e6dd4d/src/connectors/Fortmatic.ts"],"sourcesContent":["import { ChainId } from 'fomoswap-artio'\nimport { FortmaticConnector as FortmaticConnectorCore } from '@web3-react/fortmatic-connector'\n\nexport const OVERLAY_READY = 'OVERLAY_READY'\n\ntype FormaticSupportedChains = Extract<ChainId, ChainId.MAINNET | ChainId.ROPSTEN | ChainId.RINKEBY | ChainId.KOVAN>\n\nconst CHAIN_ID_NETWORK_ARGUMENT: { readonly [chainId in FormaticSupportedChains]: string | undefined } = {\n  [ChainId.MAINNET]: undefined,\n  [ChainId.ROPSTEN]: 'ropsten',\n  [ChainId.RINKEBY]: 'rinkeby',\n  [ChainId.KOVAN]: 'kovan'\n}\n\nexport class FortmaticConnector extends FortmaticConnectorCore {\n  async activate() {\n    if (!this.fortmatic) {\n      const { default: Fortmatic } = await import('fortmatic')\n      const { apiKey, chainId } = this as any\n      if (chainId in CHAIN_ID_NETWORK_ARGUMENT) {\n        this.fortmatic = new Fortmatic(apiKey, CHAIN_ID_NETWORK_ARGUMENT[chainId as FormaticSupportedChains])\n      } else {\n        throw new Error(`Unsupported network ID: ${chainId}`)\n      }\n    }\n\n    const provider = this.fortmatic.getProvider()\n\n    const pollForOverlayReady = new Promise(resolve => {\n      const interval = setInterval(() => {\n        if (provider.overlayReady) {\n          clearInterval(interval)\n          this.emit(OVERLAY_READY)\n          resolve()\n        }\n      }, 200)\n    })\n\n    const [account] = await Promise.all([\n      provider.enable().then((accounts: string[]) => accounts[0]),\n      pollForOverlayReady\n    ])\n\n    return { provider: this.fortmatic.getProvider(), chainId: (this as any).chainId, account }\n  }\n}\n"],"mappings":"AAAA,OAASA,OAAO,KAAQ,gBAAgB,CACxC,OAASC,kBAAkB,GAAI,CAAAC,sBAAsB,KAAQ,iCAAiC,CAE9F,MAAO,MAAM,CAAAC,aAAa,CAAG,eAAe,CAI5C,KAAM,CAAAC,yBAAgG,CAAG,CACvG,CAACJ,OAAO,CAACK,OAAO,EAAGC,SAAS,CAC5B,CAACN,OAAO,CAACO,OAAO,EAAG,SAAS,CAC5B,CAACP,OAAO,CAACQ,OAAO,EAAG,SAAS,CAC5B,CAACR,OAAO,CAACS,KAAK,EAAG,OACnB,CAAC,CAED,MAAO,MAAM,CAAAR,kBAAkB,QAAS,CAAAC,sBAAuB,CAC7D,KAAM,CAAAQ,QAAQA,CAAA,CAAG,CACf,GAAI,CAAC,IAAI,CAACC,SAAS,CAAE,CACnB,KAAM,CAAEC,OAAO,CAAEC,SAAU,CAAC,CAAG,KAAM,OAAM,CAAC,WAAW,CAAC,CACxD,KAAM,CAAEC,MAAM,CAAEC,OAAQ,CAAC,CAAG,IAAW,CACvC,GAAIA,OAAO,GAAI,CAAAX,yBAAyB,CAAE,CACxC,IAAI,CAACO,SAAS,CAAG,GAAI,CAAAE,SAAS,CAACC,MAAM,CAAEV,yBAAyB,CAACW,OAAO,CAA4B,CAAC,CACvG,CAAC,IAAM,CACL,KAAM,IAAI,CAAAC,KAAK,4BAAAC,MAAA,CAA4BF,OAAO,CAAE,CAAC,CACvD,CACF,CAEA,KAAM,CAAAG,QAAQ,CAAG,IAAI,CAACP,SAAS,CAACQ,WAAW,CAAC,CAAC,CAE7C,KAAM,CAAAC,mBAAmB,CAAG,GAAI,CAAAC,OAAO,CAACC,OAAO,EAAI,CACjD,KAAM,CAAAC,QAAQ,CAAGC,WAAW,CAAC,IAAM,CACjC,GAAIN,QAAQ,CAACO,YAAY,CAAE,CACzBC,aAAa,CAACH,QAAQ,CAAC,CACvB,IAAI,CAACI,IAAI,CAACxB,aAAa,CAAC,CACxBmB,OAAO,CAAC,CAAC,CACX,CACF,CAAC,CAAE,GAAG,CAAC,CACT,CAAC,CAAC,CAEF,KAAM,CAACM,OAAO,CAAC,CAAG,KAAM,CAAAP,OAAO,CAACQ,GAAG,CAAC,CAClCX,QAAQ,CAACY,MAAM,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAkB,EAAKA,QAAQ,CAAC,CAAC,CAAC,CAAC,CAC3DZ,mBAAmB,CACpB,CAAC,CAEF,MAAO,CAAEF,QAAQ,CAAE,IAAI,CAACP,SAAS,CAACQ,WAAW,CAAC,CAAC,CAAEJ,OAAO,CAAG,IAAI,CAASA,OAAO,CAAEa,OAAQ,CAAC,CAC5F,CACF","ignoreList":[]},"metadata":{},"sourceType":"module"}