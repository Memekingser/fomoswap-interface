{"ast":null,"code":"import{isAddress}from'../../utils';export function filterTokens(tokens,search){if(search.length===0)return tokens;const searchingAddress=isAddress(search);if(searchingAddress){return tokens.filter(token=>token.address===searchingAddress);}const lowerSearchParts=search.toLowerCase().split(/\\s+/).filter(s=>s.length>0);if(lowerSearchParts.length===0){return tokens;}const matchesSearch=s=>{const sParts=s.toLowerCase().split(/\\s+/).filter(s=>s.length>0);return lowerSearchParts.every(p=>p.length===0||sParts.some(sp=>sp.startsWith(p)||sp.endsWith(p)));};return tokens.filter(token=>{const{symbol,name}=token;return matchesSearch(symbol)||matchesSearch(name);});}","map":{"version":3,"names":["isAddress","filterTokens","tokens","search","length","searchingAddress","filter","token","address","lowerSearchParts","toLowerCase","split","s","matchesSearch","sParts","every","p","some","sp","startsWith","endsWith","symbol","name"],"sources":["/Users/synallage/Desktop/fomoswap-uni/interface-73580de922ce3ff642430d71aa24f5c053e6dd4d/src/components/SearchModal/filtering.ts"],"sourcesContent":["import { isAddress } from '../../utils'\nimport { Token } from 'fomoswap-artio'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter(token => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter(s => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter(s => s.length > 0)\n\n    return lowerSearchParts.every(p => p.length === 0 || sParts.some(sp => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter(token => {\n    const { symbol, name } = token\n\n    return matchesSearch(symbol) || matchesSearch(name)\n  })\n}\n"],"mappings":"AAAA,OAASA,SAAS,KAAQ,aAAa,CAGvC,MAAO,SAAS,CAAAC,YAAYA,CAACC,MAAe,CAAEC,MAAc,CAAW,CACrE,GAAIA,MAAM,CAACC,MAAM,GAAK,CAAC,CAAE,MAAO,CAAAF,MAAM,CAEtC,KAAM,CAAAG,gBAAgB,CAAGL,SAAS,CAACG,MAAM,CAAC,CAE1C,GAAIE,gBAAgB,CAAE,CACpB,MAAO,CAAAH,MAAM,CAACI,MAAM,CAACC,KAAK,EAAIA,KAAK,CAACC,OAAO,GAAKH,gBAAgB,CAAC,CACnE,CAEA,KAAM,CAAAI,gBAAgB,CAAGN,MAAM,CAC5BO,WAAW,CAAC,CAAC,CACbC,KAAK,CAAC,KAAK,CAAC,CACZL,MAAM,CAACM,CAAC,EAAIA,CAAC,CAACR,MAAM,CAAG,CAAC,CAAC,CAE5B,GAAIK,gBAAgB,CAACL,MAAM,GAAK,CAAC,CAAE,CACjC,MAAO,CAAAF,MAAM,CACf,CAEA,KAAM,CAAAW,aAAa,CAAID,CAAS,EAAc,CAC5C,KAAM,CAAAE,MAAM,CAAGF,CAAC,CACbF,WAAW,CAAC,CAAC,CACbC,KAAK,CAAC,KAAK,CAAC,CACZL,MAAM,CAACM,CAAC,EAAIA,CAAC,CAACR,MAAM,CAAG,CAAC,CAAC,CAE5B,MAAO,CAAAK,gBAAgB,CAACM,KAAK,CAACC,CAAC,EAAIA,CAAC,CAACZ,MAAM,GAAK,CAAC,EAAIU,MAAM,CAACG,IAAI,CAACC,EAAE,EAAIA,EAAE,CAACC,UAAU,CAACH,CAAC,CAAC,EAAIE,EAAE,CAACE,QAAQ,CAACJ,CAAC,CAAC,CAAC,CAAC,CAC7G,CAAC,CAED,MAAO,CAAAd,MAAM,CAACI,MAAM,CAACC,KAAK,EAAI,CAC5B,KAAM,CAAEc,MAAM,CAAEC,IAAK,CAAC,CAAGf,KAAK,CAE9B,MAAO,CAAAM,aAAa,CAACQ,MAAM,CAAC,EAAIR,aAAa,CAACS,IAAI,CAAC,CACrD,CAAC,CAAC,CACJ","ignoreList":[]},"metadata":{},"sourceType":"module"}