{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_util_subscribeToResult,_OuterSubscriber,_InnerSubscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nexport function mergeScan(accumulator, seed, concurrent) {\n  if (concurrent === void 0) {\n    concurrent = Number.POSITIVE_INFINITY;\n  }\n  return function (source) {\n    return source.lift(new MergeScanOperator(accumulator, seed, concurrent));\n  };\n}\nvar MergeScanOperator = /*@__PURE__*/function () {\n  function MergeScanOperator(accumulator, seed, concurrent) {\n    this.accumulator = accumulator;\n    this.seed = seed;\n    this.concurrent = concurrent;\n  }\n  MergeScanOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new MergeScanSubscriber(subscriber, this.accumulator, this.seed, this.concurrent));\n  };\n  return MergeScanOperator;\n}();\nexport { MergeScanOperator };\nvar MergeScanSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(MergeScanSubscriber, _super);\n  function MergeScanSubscriber(destination, accumulator, acc, concurrent) {\n    var _this = _super.call(this, destination) || this;\n    _this.accumulator = accumulator;\n    _this.acc = acc;\n    _this.concurrent = concurrent;\n    _this.hasValue = false;\n    _this.hasCompleted = false;\n    _this.buffer = [];\n    _this.active = 0;\n    _this.index = 0;\n    return _this;\n  }\n  MergeScanSubscriber.prototype._next = function (value) {\n    if (this.active < this.concurrent) {\n      var index = this.index++;\n      var destination = this.destination;\n      var ish = void 0;\n      try {\n        var accumulator = this.accumulator;\n        ish = accumulator(this.acc, value, index);\n      } catch (e) {\n        return destination.error(e);\n      }\n      this.active++;\n      this._innerSub(ish, value, index);\n    } else {\n      this.buffer.push(value);\n    }\n  };\n  MergeScanSubscriber.prototype._innerSub = function (ish, value, index) {\n    var innerSubscriber = new InnerSubscriber(this, value, index);\n    var destination = this.destination;\n    destination.add(innerSubscriber);\n    var innerSubscription = subscribeToResult(this, ish, undefined, undefined, innerSubscriber);\n    if (innerSubscription !== innerSubscriber) {\n      destination.add(innerSubscription);\n    }\n  };\n  MergeScanSubscriber.prototype._complete = function () {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      if (this.hasValue === false) {\n        this.destination.next(this.acc);\n      }\n      this.destination.complete();\n    }\n    this.unsubscribe();\n  };\n  MergeScanSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n    var destination = this.destination;\n    this.acc = innerValue;\n    this.hasValue = true;\n    destination.next(innerValue);\n  };\n  MergeScanSubscriber.prototype.notifyComplete = function (innerSub) {\n    var buffer = this.buffer;\n    var destination = this.destination;\n    destination.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      if (this.hasValue === false) {\n        this.destination.next(this.acc);\n      }\n      this.destination.complete();\n    }\n  };\n  return MergeScanSubscriber;\n}(OuterSubscriber);\nexport { MergeScanSubscriber };","map":{"version":3,"names":["tslib_1","subscribeToResult","OuterSubscriber","InnerSubscriber","mergeScan","accumulator","seed","concurrent","Number","POSITIVE_INFINITY","source","lift","MergeScanOperator","prototype","call","subscriber","subscribe","MergeScanSubscriber","_super","__extends","destination","acc","_this","hasValue","hasCompleted","active","index","_next","value","ish","e","error","_innerSub","buffer","push","innerSubscriber","add","innerSubscription","undefined","_complete","length","next","complete","unsubscribe","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","notifyComplete","remove","shift"],"sources":["../../../src/internal/operators/mergeScan.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}