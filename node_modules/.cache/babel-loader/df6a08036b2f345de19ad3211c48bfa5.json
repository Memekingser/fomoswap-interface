{"ast":null,"code":"import{AddressZero}from'@ethersproject/constants';import{Currency,CurrencyAmount,Fraction,JSBI,Percent,Token,TokenAmount,WETH}from'fomoswap-storytestnet';import React,{useCallback,useMemo,useState}from'react';import ReactGA from'react-ga';import{Redirect}from'react-router';import{Text}from'rebass';import{ButtonConfirmed}from'../../components/Button';import{LightCard,PinkCard,YellowCard}from'../../components/Card';import{AutoColumn}from'../../components/Column';import CurrencyLogo from'../../components/CurrencyLogo';import QuestionHelper from'../../components/QuestionHelper';import{AutoRow,RowBetween,RowFixed}from'../../components/Row';import{Dots}from'../../components/swap/styleds';import{DEFAULT_DEADLINE_FROM_NOW,INITIAL_ALLOWED_SLIPPAGE}from'../../constants';import{MIGRATOR_ADDRESS}from'../../constants/abis/migrator';import{PairState,usePair}from'../../data/Reserves';import{useTotalSupply}from'../../data/TotalSupply';import{useActiveWeb3React}from'../../hooks';import{useToken}from'../../hooks/Tokens';import{ApprovalState,useApproveCallback}from'../../hooks/useApproveCallback';import{useV1ExchangeContract,useV2MigratorContract}from'../../hooks/useContract';import{NEVER_RELOAD,useSingleCallResult}from'../../state/multicall/hooks';import{useIsTransactionPending,useTransactionAdder}from'../../state/transactions/hooks';import{useETHBalances,useTokenBalance}from'../../state/wallet/hooks';import{BackArrow,ExternalLink,TYPE}from'../../theme';import{getEtherscanLink,isAddress}from'../../utils';import{BodyWrapper}from'../AppBody';import{EmptyState}from'./EmptyState';const POOL_CURRENCY_AMOUNT_MIN=new Fraction(JSBI.BigInt(1),JSBI.BigInt(1000000));const WEI_DENOM=JSBI.exponentiate(JSBI.BigInt(10),JSBI.BigInt(18));const ZERO=JSBI.BigInt(0);const ONE=JSBI.BigInt(1);const ZERO_FRACTION=new Fraction(ZERO,ONE);const ALLOWED_OUTPUT_MIN_PERCENT=new Percent(JSBI.BigInt(10000-INITIAL_ALLOWED_SLIPPAGE),JSBI.BigInt(10000));function FormattedPoolCurrencyAmount(_ref){let{currencyAmount}=_ref;return/*#__PURE__*/React.createElement(React.Fragment,null,currencyAmount.equalTo(JSBI.BigInt(0))?'0':currencyAmount.greaterThan(POOL_CURRENCY_AMOUNT_MIN)?currencyAmount.toSignificant(4):\"<\".concat(POOL_CURRENCY_AMOUNT_MIN.toSignificant(1)));}export function V1LiquidityInfo(_ref2){let{token,liquidityTokenAmount,tokenWorth,ethWorth}=_ref2;const{chainId}=useActiveWeb3React();return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(AutoRow,{style:{justifyContent:'flex-start',width:'fit-content'}},/*#__PURE__*/React.createElement(CurrencyLogo,{size:\"24px\",currency:token}),/*#__PURE__*/React.createElement(\"div\",{style:{marginLeft:'.75rem'}},/*#__PURE__*/React.createElement(TYPE.mediumHeader,null,/*#__PURE__*/React.createElement(FormattedPoolCurrencyAmount,{currencyAmount:liquidityTokenAmount}),' ',token.equals(WETH[chainId])?'WETH':token.symbol,\"/ETH\"))),/*#__PURE__*/React.createElement(RowBetween,{my:\"1rem\"},/*#__PURE__*/React.createElement(Text,{fontSize:16,fontWeight:500},\"Pooled \",token.equals(WETH[chainId])?'WETH':token.symbol,\":\"),/*#__PURE__*/React.createElement(RowFixed,null,/*#__PURE__*/React.createElement(Text,{fontSize:16,fontWeight:500,marginLeft:'6px'},tokenWorth.toSignificant(4)),/*#__PURE__*/React.createElement(CurrencyLogo,{size:\"20px\",style:{marginLeft:'8px'},currency:token}))),/*#__PURE__*/React.createElement(RowBetween,{mb:\"1rem\"},/*#__PURE__*/React.createElement(Text,{fontSize:16,fontWeight:500},\"Pooled ETH:\"),/*#__PURE__*/React.createElement(RowFixed,null,/*#__PURE__*/React.createElement(Text,{fontSize:16,fontWeight:500,marginLeft:'6px'},/*#__PURE__*/React.createElement(FormattedPoolCurrencyAmount,{currencyAmount:ethWorth})),/*#__PURE__*/React.createElement(CurrencyLogo,{size:\"20px\",style:{marginLeft:'8px'},currency:Currency.ETHER}))));}function V1PairMigration(_ref3){var _useETHBalances,_v2Pair$reserveOf,_v1SpotPrice$invert,_v2SpotPrice$invert,_v1SpotPrice$invert2;let{liquidityTokenAmount,token}=_ref3;const{account,chainId}=useActiveWeb3React();const totalSupply=useTotalSupply(liquidityTokenAmount.token);const exchangeETHBalance=(_useETHBalances=useETHBalances([liquidityTokenAmount.token.address]))===null||_useETHBalances===void 0?void 0:_useETHBalances[liquidityTokenAmount.token.address];const exchangeTokenBalance=useTokenBalance(liquidityTokenAmount.token.address,token);const[v2PairState,v2Pair]=usePair(chainId?WETH[chainId]:undefined,token);const isFirstLiquidityProvider=v2PairState===PairState.NOT_EXISTS;const v2SpotPrice=v2Pair===null||v2Pair===void 0?void 0:(_v2Pair$reserveOf=v2Pair.reserveOf(token))===null||_v2Pair$reserveOf===void 0?void 0:_v2Pair$reserveOf.divide(v2Pair===null||v2Pair===void 0?void 0:v2Pair.reserveOf(WETH[chainId]));const[confirmingMigration,setConfirmingMigration]=useState(false);const[pendingMigrationHash,setPendingMigrationHash]=useState(null);const shareFraction=totalSupply?new Percent(liquidityTokenAmount.raw,totalSupply.raw):ZERO_FRACTION;const ethWorth=exchangeETHBalance?CurrencyAmount.ether(exchangeETHBalance.multiply(shareFraction).multiply(WEI_DENOM).quotient):CurrencyAmount.ether(ZERO);const tokenWorth=exchangeTokenBalance?new TokenAmount(token,shareFraction.multiply(exchangeTokenBalance.raw).quotient):new TokenAmount(token,ZERO);const[approval,approve]=useApproveCallback(liquidityTokenAmount,MIGRATOR_ADDRESS);const v1SpotPrice=exchangeTokenBalance&&exchangeETHBalance?exchangeTokenBalance.divide(new Fraction(exchangeETHBalance.raw,WEI_DENOM)):null;const priceDifferenceFraction=v1SpotPrice&&v2SpotPrice?v1SpotPrice.divide(v2SpotPrice).multiply('100').subtract('100'):undefined;const priceDifferenceAbs=(priceDifferenceFraction===null||priceDifferenceFraction===void 0?void 0:priceDifferenceFraction.lessThan(ZERO))?priceDifferenceFraction===null||priceDifferenceFraction===void 0?void 0:priceDifferenceFraction.multiply('-1'):priceDifferenceFraction;const minAmountETH=v2SpotPrice&&tokenWorth?tokenWorth.divide(v2SpotPrice).multiply(WEI_DENOM).multiply(ALLOWED_OUTPUT_MIN_PERCENT).quotient:ethWorth===null||ethWorth===void 0?void 0:ethWorth.numerator;const minAmountToken=v2SpotPrice&&ethWorth?ethWorth.multiply(v2SpotPrice).multiply(JSBI.exponentiate(JSBI.BigInt(10),JSBI.BigInt(token.decimals))).multiply(ALLOWED_OUTPUT_MIN_PERCENT).quotient:tokenWorth===null||tokenWorth===void 0?void 0:tokenWorth.numerator;const addTransaction=useTransactionAdder();const isMigrationPending=useIsTransactionPending(pendingMigrationHash);const migrator=useV2MigratorContract();const migrate=useCallback(()=>{if(!minAmountToken||!minAmountETH)return;setConfirmingMigration(true);migrator.migrate(token.address,minAmountToken.toString(),minAmountETH.toString(),account,Math.floor(new Date().getTime()/1000)+DEFAULT_DEADLINE_FROM_NOW).then(response=>{ReactGA.event({category:'Migrate',action:'V1->V2',label:token===null||token===void 0?void 0:token.symbol});addTransaction(response,{summary:\"Migrate \".concat(token.symbol,\" liquidity to V2\")});setPendingMigrationHash(response.hash);}).catch(()=>{setConfirmingMigration(false);});},[minAmountToken,minAmountETH,migrator,token,account,addTransaction]);const noLiquidityTokens=!!liquidityTokenAmount&&liquidityTokenAmount.equalTo(ZERO);const largePriceDifference=!!priceDifferenceAbs&&!priceDifferenceAbs.lessThan(JSBI.BigInt(5));const isSuccessfullyMigrated=!!pendingMigrationHash&&!!noLiquidityTokens;return/*#__PURE__*/React.createElement(AutoColumn,{gap:\"20px\"},/*#__PURE__*/React.createElement(TYPE.body,{my:9,style:{fontWeight:400}},\"This tool will safely migrate your V1 liquidity to V2 with minimal price risk. The process is completely trustless thanks to the\",' ',/*#__PURE__*/React.createElement(ExternalLink,{href:getEtherscanLink(chainId,MIGRATOR_ADDRESS,'address')},/*#__PURE__*/React.createElement(TYPE.blue,{display:\"inline\"},\"Uniswap migration contract\\u2197\")),\".\"),!isFirstLiquidityProvider&&largePriceDifference?/*#__PURE__*/React.createElement(YellowCard,null,/*#__PURE__*/React.createElement(TYPE.body,{style:{marginBottom:8,fontWeight:400}},\"It\",\"'\",\"s best to deposit liquidity into Uniswap V2 at a price you believe is correct. If the V2 price seems incorrect, you can either make a swap to move the price or wait for someone else to do so.\"),/*#__PURE__*/React.createElement(AutoColumn,{gap:\"8px\"},/*#__PURE__*/React.createElement(RowBetween,null,/*#__PURE__*/React.createElement(TYPE.body,null,\"V1 Price:\"),/*#__PURE__*/React.createElement(TYPE.black,null,v1SpotPrice===null||v1SpotPrice===void 0?void 0:v1SpotPrice.toSignificant(6),\" \",token.symbol,\"/ETH\")),/*#__PURE__*/React.createElement(RowBetween,null,/*#__PURE__*/React.createElement(\"div\",null),/*#__PURE__*/React.createElement(TYPE.black,null,v1SpotPrice===null||v1SpotPrice===void 0?void 0:(_v1SpotPrice$invert=v1SpotPrice.invert())===null||_v1SpotPrice$invert===void 0?void 0:_v1SpotPrice$invert.toSignificant(6),\" ETH/\",token.symbol)),/*#__PURE__*/React.createElement(RowBetween,null,/*#__PURE__*/React.createElement(TYPE.body,null,\"V2 Price:\"),/*#__PURE__*/React.createElement(TYPE.black,null,v2SpotPrice===null||v2SpotPrice===void 0?void 0:v2SpotPrice.toSignificant(6),\" \",token.symbol,\"/ETH\")),/*#__PURE__*/React.createElement(RowBetween,null,/*#__PURE__*/React.createElement(\"div\",null),/*#__PURE__*/React.createElement(TYPE.black,null,v2SpotPrice===null||v2SpotPrice===void 0?void 0:(_v2SpotPrice$invert=v2SpotPrice.invert())===null||_v2SpotPrice$invert===void 0?void 0:_v2SpotPrice$invert.toSignificant(6),\" ETH/\",token.symbol)),/*#__PURE__*/React.createElement(RowBetween,null,/*#__PURE__*/React.createElement(TYPE.body,{color:\"inherit\"},\"Price Difference:\"),/*#__PURE__*/React.createElement(TYPE.black,{color:\"inherit\"},priceDifferenceAbs.toSignificant(4),\"%\")))):null,isFirstLiquidityProvider&&/*#__PURE__*/React.createElement(PinkCard,null,/*#__PURE__*/React.createElement(TYPE.body,{style:{marginBottom:8,fontWeight:400}},\"You are the first liquidity provider for this pair on Uniswap V2. Your liquidity will be migrated at the current V1 price. Your transaction cost also includes the gas to create the pool.\"),/*#__PURE__*/React.createElement(AutoColumn,{gap:\"8px\"},/*#__PURE__*/React.createElement(RowBetween,null,/*#__PURE__*/React.createElement(TYPE.body,null,\"V1 Price:\"),/*#__PURE__*/React.createElement(TYPE.black,null,v1SpotPrice===null||v1SpotPrice===void 0?void 0:v1SpotPrice.toSignificant(6),\" \",token.symbol,\"/ETH\")),/*#__PURE__*/React.createElement(RowBetween,null,/*#__PURE__*/React.createElement(\"div\",null),/*#__PURE__*/React.createElement(TYPE.black,null,v1SpotPrice===null||v1SpotPrice===void 0?void 0:(_v1SpotPrice$invert2=v1SpotPrice.invert())===null||_v1SpotPrice$invert2===void 0?void 0:_v1SpotPrice$invert2.toSignificant(6),\" ETH/\",token.symbol)))),/*#__PURE__*/React.createElement(LightCard,null,/*#__PURE__*/React.createElement(V1LiquidityInfo,{token:token,liquidityTokenAmount:liquidityTokenAmount,tokenWorth:tokenWorth,ethWorth:ethWorth}),/*#__PURE__*/React.createElement(\"div\",{style:{display:'flex',marginTop:'1rem'}},/*#__PURE__*/React.createElement(AutoColumn,{gap:\"12px\",style:{flex:'1',marginRight:12}},/*#__PURE__*/React.createElement(ButtonConfirmed,{confirmed:approval===ApprovalState.APPROVED,disabled:approval!==ApprovalState.NOT_APPROVED,onClick:approve},approval===ApprovalState.PENDING?/*#__PURE__*/React.createElement(Dots,null,\"Approving\"):approval===ApprovalState.APPROVED?'Approved':'Approve')),/*#__PURE__*/React.createElement(AutoColumn,{gap:\"12px\",style:{flex:'1'}},/*#__PURE__*/React.createElement(ButtonConfirmed,{confirmed:isSuccessfullyMigrated,disabled:isSuccessfullyMigrated||noLiquidityTokens||isMigrationPending||approval!==ApprovalState.APPROVED||confirmingMigration,onClick:migrate},isSuccessfullyMigrated?'Success':isMigrationPending?/*#__PURE__*/React.createElement(Dots,null,\"Migrating\"):'Migrate')))),/*#__PURE__*/React.createElement(TYPE.darkGray,{style:{textAlign:'center'}},\"Your Uniswap V1 \".concat(token.symbol,\"/ETH liquidity will become Uniswap V2 \").concat(token.symbol,\"/ETH liquidity.\")));}export default function MigrateV1Exchange(_ref4){var _useSingleCallResult,_useSingleCallResult$;let{history,match:{params:{address}}}=_ref4;const validatedAddress=isAddress(address);const{chainId,account}=useActiveWeb3React();const exchangeContract=useV1ExchangeContract(validatedAddress?validatedAddress:undefined);const tokenAddress=(_useSingleCallResult=useSingleCallResult(exchangeContract,'tokenAddress',undefined,NEVER_RELOAD))===null||_useSingleCallResult===void 0?void 0:(_useSingleCallResult$=_useSingleCallResult.result)===null||_useSingleCallResult$===void 0?void 0:_useSingleCallResult$[0];const token=useToken(tokenAddress);const liquidityToken=useMemo(()=>validatedAddress&&token?new Token(chainId,validatedAddress,18,\"UNI-V1-\".concat(token.symbol),'Uniswap V1'):undefined,[chainId,validatedAddress,token]);const userLiquidityBalance=useTokenBalance(account,liquidityToken);// redirect for invalid url params\nif(!validatedAddress||tokenAddress===AddressZero){console.error('Invalid address in path',address);return/*#__PURE__*/React.createElement(Redirect,{to:\"/migrate/v1\"});}return/*#__PURE__*/React.createElement(BodyWrapper,{style:{padding:24}},/*#__PURE__*/React.createElement(AutoColumn,{gap:\"16px\"},/*#__PURE__*/React.createElement(AutoRow,{style:{alignItems:'center',justifyContent:'space-between'},gap:\"8px\"},/*#__PURE__*/React.createElement(BackArrow,{to:\"/migrate/v1\"}),/*#__PURE__*/React.createElement(TYPE.mediumHeader,null,\"Migrate V1 Liquidity\"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(QuestionHelper,{text:\"Migrate your liquidity tokens from Uniswap V1 to Uniswap V2.\"}))),!account?/*#__PURE__*/React.createElement(TYPE.largeHeader,null,\"You must connect an account.\"):validatedAddress&&(token===null||token===void 0?void 0:token.equals(WETH[chainId]))?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(TYPE.body,{my:9,style:{fontWeight:400}},\"Because Uniswap V2 uses WETH under the hood, your Uniswap V1 WETH/ETH liquidity cannot be migrated. You may want to remove your liquidity instead.\"),/*#__PURE__*/React.createElement(ButtonConfirmed,{onClick:()=>{history.push(\"/remove/v1/\".concat(validatedAddress));}},\"Remove\")):userLiquidityBalance&&token?/*#__PURE__*/React.createElement(V1PairMigration,{liquidityTokenAmount:userLiquidityBalance,token:token}):/*#__PURE__*/React.createElement(EmptyState,{message:\"Loading...\"})));}","map":{"version":3,"names":["AddressZero","Currency","CurrencyAmount","Fraction","JSBI","Percent","Token","TokenAmount","WETH","React","useCallback","useMemo","useState","ReactGA","Redirect","Text","ButtonConfirmed","LightCard","PinkCard","YellowCard","AutoColumn","CurrencyLogo","QuestionHelper","AutoRow","RowBetween","RowFixed","Dots","DEFAULT_DEADLINE_FROM_NOW","INITIAL_ALLOWED_SLIPPAGE","MIGRATOR_ADDRESS","PairState","usePair","useTotalSupply","useActiveWeb3React","useToken","ApprovalState","useApproveCallback","useV1ExchangeContract","useV2MigratorContract","NEVER_RELOAD","useSingleCallResult","useIsTransactionPending","useTransactionAdder","useETHBalances","useTokenBalance","BackArrow","ExternalLink","TYPE","getEtherscanLink","isAddress","BodyWrapper","EmptyState","POOL_CURRENCY_AMOUNT_MIN","BigInt","WEI_DENOM","exponentiate","ZERO","ONE","ZERO_FRACTION","ALLOWED_OUTPUT_MIN_PERCENT","FormattedPoolCurrencyAmount","_ref","currencyAmount","createElement","Fragment","equalTo","greaterThan","toSignificant","concat","V1LiquidityInfo","_ref2","token","liquidityTokenAmount","tokenWorth","ethWorth","chainId","style","justifyContent","width","size","currency","marginLeft","mediumHeader","equals","symbol","my","fontSize","fontWeight","mb","ETHER","V1PairMigration","_ref3","_useETHBalances","_v2Pair$reserveOf","_v1SpotPrice$invert","_v2SpotPrice$invert","_v1SpotPrice$invert2","account","totalSupply","exchangeETHBalance","address","exchangeTokenBalance","v2PairState","v2Pair","undefined","isFirstLiquidityProvider","NOT_EXISTS","v2SpotPrice","reserveOf","divide","confirmingMigration","setConfirmingMigration","pendingMigrationHash","setPendingMigrationHash","shareFraction","raw","ether","multiply","quotient","approval","approve","v1SpotPrice","priceDifferenceFraction","subtract","priceDifferenceAbs","lessThan","minAmountETH","numerator","minAmountToken","decimals","addTransaction","isMigrationPending","migrator","migrate","toString","Math","floor","Date","getTime","then","response","event","category","action","label","summary","hash","catch","noLiquidityTokens","largePriceDifference","isSuccessfullyMigrated","gap","body","href","blue","display","marginBottom","black","invert","color","marginTop","flex","marginRight","confirmed","APPROVED","disabled","NOT_APPROVED","onClick","PENDING","darkGray","textAlign","MigrateV1Exchange","_ref4","_useSingleCallResult","_useSingleCallResult$","history","match","params","validatedAddress","exchangeContract","tokenAddress","result","liquidityToken","userLiquidityBalance","console","error","to","padding","alignItems","text","largeHeader","push","message"],"sources":["/Users/synallage/Desktop/fomoswap-uni/interface-73580de922ce3ff642430d71aa24f5c053e6dd4d/src/pages/MigrateV1/MigrateV1Exchange.tsx"],"sourcesContent":["import { TransactionResponse } from '@ethersproject/abstract-provider'\nimport { AddressZero } from '@ethersproject/constants'\nimport { Currency, CurrencyAmount, Fraction, JSBI, Percent, Token, TokenAmount, WETH } from 'fomoswap-storytestnet'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport ReactGA from 'react-ga'\nimport { Redirect, RouteComponentProps } from 'react-router'\nimport { Text } from 'rebass'\nimport { ButtonConfirmed } from '../../components/Button'\nimport { LightCard, PinkCard, YellowCard } from '../../components/Card'\nimport { AutoColumn } from '../../components/Column'\nimport CurrencyLogo from '../../components/CurrencyLogo'\nimport QuestionHelper from '../../components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from '../../components/Row'\nimport { Dots } from '../../components/swap/styleds'\nimport { DEFAULT_DEADLINE_FROM_NOW, INITIAL_ALLOWED_SLIPPAGE } from '../../constants'\nimport { MIGRATOR_ADDRESS } from '../../constants/abis/migrator'\nimport { PairState, usePair } from '../../data/Reserves'\nimport { useTotalSupply } from '../../data/TotalSupply'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useToken } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport { useV1ExchangeContract, useV2MigratorContract } from '../../hooks/useContract'\nimport { NEVER_RELOAD, useSingleCallResult } from '../../state/multicall/hooks'\nimport { useIsTransactionPending, useTransactionAdder } from '../../state/transactions/hooks'\nimport { useETHBalances, useTokenBalance } from '../../state/wallet/hooks'\nimport { BackArrow, ExternalLink, TYPE } from '../../theme'\nimport { getEtherscanLink, isAddress } from '../../utils'\nimport { BodyWrapper } from '../AppBody'\nimport { EmptyState } from './EmptyState'\n\nconst POOL_CURRENCY_AMOUNT_MIN = new Fraction(JSBI.BigInt(1), JSBI.BigInt(1000000))\nconst WEI_DENOM = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(18))\nconst ZERO = JSBI.BigInt(0)\nconst ONE = JSBI.BigInt(1)\nconst ZERO_FRACTION = new Fraction(ZERO, ONE)\nconst ALLOWED_OUTPUT_MIN_PERCENT = new Percent(JSBI.BigInt(10000 - INITIAL_ALLOWED_SLIPPAGE), JSBI.BigInt(10000))\n\nfunction FormattedPoolCurrencyAmount({ currencyAmount }: { currencyAmount: CurrencyAmount }) {\n  return (\n    <>\n      {currencyAmount.equalTo(JSBI.BigInt(0))\n        ? '0'\n        : currencyAmount.greaterThan(POOL_CURRENCY_AMOUNT_MIN)\n        ? currencyAmount.toSignificant(4)\n        : `<${POOL_CURRENCY_AMOUNT_MIN.toSignificant(1)}`}\n    </>\n  )\n}\n\nexport function V1LiquidityInfo({\n  token,\n  liquidityTokenAmount,\n  tokenWorth,\n  ethWorth\n}: {\n  token: Token\n  liquidityTokenAmount: TokenAmount\n  tokenWorth: TokenAmount\n  ethWorth: CurrencyAmount\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  return (\n    <>\n      <AutoRow style={{ justifyContent: 'flex-start', width: 'fit-content' }}>\n        <CurrencyLogo size=\"24px\" currency={token} />\n        <div style={{ marginLeft: '.75rem' }}>\n          <TYPE.mediumHeader>\n            {<FormattedPoolCurrencyAmount currencyAmount={liquidityTokenAmount} />}{' '}\n            {token.equals(WETH[chainId]) ? 'WETH' : token.symbol}/ETH\n          </TYPE.mediumHeader>\n        </div>\n      </AutoRow>\n\n      <RowBetween my=\"1rem\">\n        <Text fontSize={16} fontWeight={500}>\n          Pooled {token.equals(WETH[chainId]) ? 'WETH' : token.symbol}:\n        </Text>\n        <RowFixed>\n          <Text fontSize={16} fontWeight={500} marginLeft={'6px'}>\n            {tokenWorth.toSignificant(4)}\n          </Text>\n          <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={token} />\n        </RowFixed>\n      </RowBetween>\n      <RowBetween mb=\"1rem\">\n        <Text fontSize={16} fontWeight={500}>\n          Pooled ETH:\n        </Text>\n        <RowFixed>\n          <Text fontSize={16} fontWeight={500} marginLeft={'6px'}>\n            <FormattedPoolCurrencyAmount currencyAmount={ethWorth} />\n          </Text>\n          <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={Currency.ETHER} />\n        </RowFixed>\n      </RowBetween>\n    </>\n  )\n}\n\nfunction V1PairMigration({ liquidityTokenAmount, token }: { liquidityTokenAmount: TokenAmount; token: Token }) {\n  const { account, chainId } = useActiveWeb3React()\n  const totalSupply = useTotalSupply(liquidityTokenAmount.token)\n  const exchangeETHBalance = useETHBalances([liquidityTokenAmount.token.address])?.[liquidityTokenAmount.token.address]\n  const exchangeTokenBalance = useTokenBalance(liquidityTokenAmount.token.address, token)\n\n  const [v2PairState, v2Pair] = usePair(chainId ? WETH[chainId] : undefined, token)\n  const isFirstLiquidityProvider: boolean = v2PairState === PairState.NOT_EXISTS\n\n  const v2SpotPrice = v2Pair?.reserveOf(token)?.divide(v2Pair?.reserveOf(WETH[chainId]))\n\n  const [confirmingMigration, setConfirmingMigration] = useState<boolean>(false)\n  const [pendingMigrationHash, setPendingMigrationHash] = useState<string | null>(null)\n\n  const shareFraction: Fraction = totalSupply ? new Percent(liquidityTokenAmount.raw, totalSupply.raw) : ZERO_FRACTION\n\n  const ethWorth: CurrencyAmount = exchangeETHBalance\n    ? CurrencyAmount.ether(exchangeETHBalance.multiply(shareFraction).multiply(WEI_DENOM).quotient)\n    : CurrencyAmount.ether(ZERO)\n\n  const tokenWorth: TokenAmount = exchangeTokenBalance\n    ? new TokenAmount(token, shareFraction.multiply(exchangeTokenBalance.raw).quotient)\n    : new TokenAmount(token, ZERO)\n\n  const [approval, approve] = useApproveCallback(liquidityTokenAmount, MIGRATOR_ADDRESS)\n\n  const v1SpotPrice =\n    exchangeTokenBalance && exchangeETHBalance\n      ? exchangeTokenBalance.divide(new Fraction(exchangeETHBalance.raw, WEI_DENOM))\n      : null\n\n  const priceDifferenceFraction: Fraction | undefined =\n    v1SpotPrice && v2SpotPrice\n      ? v1SpotPrice\n          .divide(v2SpotPrice)\n          .multiply('100')\n          .subtract('100')\n      : undefined\n\n  const priceDifferenceAbs: Fraction | undefined = priceDifferenceFraction?.lessThan(ZERO)\n    ? priceDifferenceFraction?.multiply('-1')\n    : priceDifferenceFraction\n\n  const minAmountETH: JSBI | undefined =\n    v2SpotPrice && tokenWorth\n      ? tokenWorth\n          .divide(v2SpotPrice)\n          .multiply(WEI_DENOM)\n          .multiply(ALLOWED_OUTPUT_MIN_PERCENT).quotient\n      : ethWorth?.numerator\n\n  const minAmountToken: JSBI | undefined =\n    v2SpotPrice && ethWorth\n      ? ethWorth\n          .multiply(v2SpotPrice)\n          .multiply(JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(token.decimals)))\n          .multiply(ALLOWED_OUTPUT_MIN_PERCENT).quotient\n      : tokenWorth?.numerator\n\n  const addTransaction = useTransactionAdder()\n  const isMigrationPending = useIsTransactionPending(pendingMigrationHash)\n\n  const migrator = useV2MigratorContract()\n  const migrate = useCallback(() => {\n    if (!minAmountToken || !minAmountETH) return\n\n    setConfirmingMigration(true)\n    migrator\n      .migrate(\n        token.address,\n        minAmountToken.toString(),\n        minAmountETH.toString(),\n        account,\n        Math.floor(new Date().getTime() / 1000) + DEFAULT_DEADLINE_FROM_NOW\n      )\n      .then((response: TransactionResponse) => {\n        ReactGA.event({\n          category: 'Migrate',\n          action: 'V1->V2',\n          label: token?.symbol\n        })\n\n        addTransaction(response, {\n          summary: `Migrate ${token.symbol} liquidity to V2`\n        })\n        setPendingMigrationHash(response.hash)\n      })\n      .catch(() => {\n        setConfirmingMigration(false)\n      })\n  }, [minAmountToken, minAmountETH, migrator, token, account, addTransaction])\n\n  const noLiquidityTokens = !!liquidityTokenAmount && liquidityTokenAmount.equalTo(ZERO)\n\n  const largePriceDifference = !!priceDifferenceAbs && !priceDifferenceAbs.lessThan(JSBI.BigInt(5))\n\n  const isSuccessfullyMigrated = !!pendingMigrationHash && !!noLiquidityTokens\n\n  return (\n    <AutoColumn gap=\"20px\">\n      <TYPE.body my={9} style={{ fontWeight: 400 }}>\n        This tool will safely migrate your V1 liquidity to V2 with minimal price risk. The process is completely\n        trustless thanks to the{' '}\n        <ExternalLink href={getEtherscanLink(chainId, MIGRATOR_ADDRESS, 'address')}>\n          <TYPE.blue display=\"inline\">Uniswap migration contract↗</TYPE.blue>\n        </ExternalLink>\n        .\n      </TYPE.body>\n\n      {!isFirstLiquidityProvider && largePriceDifference ? (\n        <YellowCard>\n          <TYPE.body style={{ marginBottom: 8, fontWeight: 400 }}>\n            It{\"'\"}s best to deposit liquidity into Uniswap V2 at a price you believe is correct. If the V2 price seems\n            incorrect, you can either make a swap to move the price or wait for someone else to do so.\n          </TYPE.body>\n          <AutoColumn gap=\"8px\">\n            <RowBetween>\n              <TYPE.body>V1 Price:</TYPE.body>\n              <TYPE.black>\n                {v1SpotPrice?.toSignificant(6)} {token.symbol}/ETH\n              </TYPE.black>\n            </RowBetween>\n            <RowBetween>\n              <div />\n              <TYPE.black>\n                {v1SpotPrice?.invert()?.toSignificant(6)} ETH/{token.symbol}\n              </TYPE.black>\n            </RowBetween>\n\n            <RowBetween>\n              <TYPE.body>V2 Price:</TYPE.body>\n              <TYPE.black>\n                {v2SpotPrice?.toSignificant(6)} {token.symbol}/ETH\n              </TYPE.black>\n            </RowBetween>\n            <RowBetween>\n              <div />\n              <TYPE.black>\n                {v2SpotPrice?.invert()?.toSignificant(6)} ETH/{token.symbol}\n              </TYPE.black>\n            </RowBetween>\n\n            <RowBetween>\n              <TYPE.body color=\"inherit\">Price Difference:</TYPE.body>\n              <TYPE.black color=\"inherit\">{priceDifferenceAbs.toSignificant(4)}%</TYPE.black>\n            </RowBetween>\n          </AutoColumn>\n        </YellowCard>\n      ) : null}\n\n      {isFirstLiquidityProvider && (\n        <PinkCard>\n          <TYPE.body style={{ marginBottom: 8, fontWeight: 400 }}>\n            You are the first liquidity provider for this pair on Uniswap V2. Your liquidity will be migrated at the\n            current V1 price. Your transaction cost also includes the gas to create the pool.\n          </TYPE.body>\n\n          <AutoColumn gap=\"8px\">\n            <RowBetween>\n              <TYPE.body>V1 Price:</TYPE.body>\n              <TYPE.black>\n                {v1SpotPrice?.toSignificant(6)} {token.symbol}/ETH\n              </TYPE.black>\n            </RowBetween>\n            <RowBetween>\n              <div />\n              <TYPE.black>\n                {v1SpotPrice?.invert()?.toSignificant(6)} ETH/{token.symbol}\n              </TYPE.black>\n            </RowBetween>\n          </AutoColumn>\n        </PinkCard>\n      )}\n\n      <LightCard>\n        <V1LiquidityInfo\n          token={token}\n          liquidityTokenAmount={liquidityTokenAmount}\n          tokenWorth={tokenWorth}\n          ethWorth={ethWorth}\n        />\n\n        <div style={{ display: 'flex', marginTop: '1rem' }}>\n          <AutoColumn gap=\"12px\" style={{ flex: '1', marginRight: 12 }}>\n            <ButtonConfirmed\n              confirmed={approval === ApprovalState.APPROVED}\n              disabled={approval !== ApprovalState.NOT_APPROVED}\n              onClick={approve}\n            >\n              {approval === ApprovalState.PENDING ? (\n                <Dots>Approving</Dots>\n              ) : approval === ApprovalState.APPROVED ? (\n                'Approved'\n              ) : (\n                'Approve'\n              )}\n            </ButtonConfirmed>\n          </AutoColumn>\n          <AutoColumn gap=\"12px\" style={{ flex: '1' }}>\n            <ButtonConfirmed\n              confirmed={isSuccessfullyMigrated}\n              disabled={\n                isSuccessfullyMigrated ||\n                noLiquidityTokens ||\n                isMigrationPending ||\n                approval !== ApprovalState.APPROVED ||\n                confirmingMigration\n              }\n              onClick={migrate}\n            >\n              {isSuccessfullyMigrated ? 'Success' : isMigrationPending ? <Dots>Migrating</Dots> : 'Migrate'}\n            </ButtonConfirmed>\n          </AutoColumn>\n        </div>\n      </LightCard>\n      <TYPE.darkGray style={{ textAlign: 'center' }}>\n        {`Your Uniswap V1 ${token.symbol}/ETH liquidity will become Uniswap V2 ${token.symbol}/ETH liquidity.`}\n      </TYPE.darkGray>\n    </AutoColumn>\n  )\n}\n\nexport default function MigrateV1Exchange({\n  history,\n  match: {\n    params: { address }\n  }\n}: RouteComponentProps<{ address: string }>) {\n  const validatedAddress = isAddress(address)\n  const { chainId, account } = useActiveWeb3React()\n\n  const exchangeContract = useV1ExchangeContract(validatedAddress ? validatedAddress : undefined)\n  const tokenAddress = useSingleCallResult(exchangeContract, 'tokenAddress', undefined, NEVER_RELOAD)?.result?.[0]\n\n  const token = useToken(tokenAddress)\n\n  const liquidityToken: Token | undefined = useMemo(\n    () =>\n      validatedAddress && token\n        ? new Token(chainId, validatedAddress, 18, `UNI-V1-${token.symbol}`, 'Uniswap V1')\n        : undefined,\n    [chainId, validatedAddress, token]\n  )\n  const userLiquidityBalance = useTokenBalance(account, liquidityToken)\n\n  // redirect for invalid url params\n  if (!validatedAddress || tokenAddress === AddressZero) {\n    console.error('Invalid address in path', address)\n    return <Redirect to=\"/migrate/v1\" />\n  }\n\n  return (\n    <BodyWrapper style={{ padding: 24 }}>\n      <AutoColumn gap=\"16px\">\n        <AutoRow style={{ alignItems: 'center', justifyContent: 'space-between' }} gap=\"8px\">\n          <BackArrow to=\"/migrate/v1\" />\n          <TYPE.mediumHeader>Migrate V1 Liquidity</TYPE.mediumHeader>\n          <div>\n            <QuestionHelper text=\"Migrate your liquidity tokens from Uniswap V1 to Uniswap V2.\" />\n          </div>\n        </AutoRow>\n\n        {!account ? (\n          <TYPE.largeHeader>You must connect an account.</TYPE.largeHeader>\n        ) : validatedAddress && token?.equals(WETH[chainId]) ? (\n          <>\n            <TYPE.body my={9} style={{ fontWeight: 400 }}>\n              Because Uniswap V2 uses WETH under the hood, your Uniswap V1 WETH/ETH liquidity cannot be migrated. You\n              may want to remove your liquidity instead.\n            </TYPE.body>\n\n            <ButtonConfirmed\n              onClick={() => {\n                history.push(`/remove/v1/${validatedAddress}`)\n              }}\n            >\n              Remove\n            </ButtonConfirmed>\n          </>\n        ) : userLiquidityBalance && token ? (\n          <V1PairMigration liquidityTokenAmount={userLiquidityBalance} token={token} />\n        ) : (\n          <EmptyState message=\"Loading...\" />\n        )}\n      </AutoColumn>\n    </BodyWrapper>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}