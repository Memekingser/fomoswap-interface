{"ast":null,"code":"import{INITIAL_ALLOWED_SLIPPAGE,DEFAULT_DEADLINE_FROM_NOW}from'../../constants';import{createReducer}from'@reduxjs/toolkit';import{addSerializedPair,addSerializedToken,dismissTokenWarning,removeSerializedPair,removeSerializedToken,updateMatchesDarkMode,updateUserDarkMode,updateVersion,updateUserExpertMode,updateUserSlippageTolerance,updateUserDeadline}from'./actions';const currentTimestamp=()=>new Date().getTime();function pairKey(token0Address,token1Address){return\"\".concat(token0Address,\";\").concat(token1Address);}export const initialState={userDarkMode:null,matchesDarkMode:false,userExpertMode:false,userSlippageTolerance:INITIAL_ALLOWED_SLIPPAGE,userDeadline:DEFAULT_DEADLINE_FROM_NOW,tokens:{},pairs:{},timestamp:currentTimestamp()};export default createReducer(initialState,builder=>builder.addCase(updateVersion,state=>{// slippage isnt being tracked in local storage, reset to default\nif(typeof state.userSlippageTolerance!=='number'){state.userSlippageTolerance=INITIAL_ALLOWED_SLIPPAGE;}// deadline isnt being tracked in local storage, reset to default\nif(typeof state.userDeadline!=='number'){state.userDeadline=DEFAULT_DEADLINE_FROM_NOW;}state.lastUpdateVersionTimestamp=currentTimestamp();}).addCase(updateUserDarkMode,(state,action)=>{state.userDarkMode=action.payload.userDarkMode;state.timestamp=currentTimestamp();}).addCase(updateMatchesDarkMode,(state,action)=>{state.matchesDarkMode=action.payload.matchesDarkMode;state.timestamp=currentTimestamp();}).addCase(updateUserExpertMode,(state,action)=>{state.userExpertMode=action.payload.userExpertMode;state.timestamp=currentTimestamp();}).addCase(updateUserSlippageTolerance,(state,action)=>{state.userSlippageTolerance=action.payload.userSlippageTolerance;state.timestamp=currentTimestamp();}).addCase(updateUserDeadline,(state,action)=>{state.userDeadline=action.payload.userDeadline;state.timestamp=currentTimestamp();}).addCase(addSerializedToken,(state,_ref)=>{let{payload:{serializedToken}}=_ref;state.tokens[serializedToken.chainId]=state.tokens[serializedToken.chainId]||{};state.tokens[serializedToken.chainId][serializedToken.address]=serializedToken;state.timestamp=currentTimestamp();}).addCase(removeSerializedToken,(state,_ref2)=>{let{payload:{address,chainId}}=_ref2;state.tokens[chainId]=state.tokens[chainId]||{};delete state.tokens[chainId][address];state.timestamp=currentTimestamp();}).addCase(dismissTokenWarning,(state,_ref3)=>{var _state$dismissedToken,_state$dismissedToken2;let{payload:{chainId,tokenAddress}}=_ref3;state.dismissedTokenWarnings=(_state$dismissedToken=state.dismissedTokenWarnings)!==null&&_state$dismissedToken!==void 0?_state$dismissedToken:{};state.dismissedTokenWarnings[chainId]=(_state$dismissedToken2=state.dismissedTokenWarnings[chainId])!==null&&_state$dismissedToken2!==void 0?_state$dismissedToken2:{};state.dismissedTokenWarnings[chainId][tokenAddress]=true;}).addCase(addSerializedPair,(state,_ref4)=>{let{payload:{serializedPair}}=_ref4;if(serializedPair.token0.chainId===serializedPair.token1.chainId&&serializedPair.token0.address!==serializedPair.token1.address){const chainId=serializedPair.token0.chainId;state.pairs[chainId]=state.pairs[chainId]||{};state.pairs[chainId][pairKey(serializedPair.token0.address,serializedPair.token1.address)]=serializedPair;}state.timestamp=currentTimestamp();}).addCase(removeSerializedPair,(state,_ref5)=>{let{payload:{chainId,tokenAAddress,tokenBAddress}}=_ref5;if(state.pairs[chainId]){// just delete both keys if either exists\ndelete state.pairs[chainId][pairKey(tokenAAddress,tokenBAddress)];delete state.pairs[chainId][pairKey(tokenBAddress,tokenAAddress)];}state.timestamp=currentTimestamp();}));","map":{"version":3,"names":["INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","createReducer","addSerializedPair","addSerializedToken","dismissTokenWarning","removeSerializedPair","removeSerializedToken","updateMatchesDarkMode","updateUserDarkMode","updateVersion","updateUserExpertMode","updateUserSlippageTolerance","updateUserDeadline","currentTimestamp","Date","getTime","pairKey","token0Address","token1Address","concat","initialState","userDarkMode","matchesDarkMode","userExpertMode","userSlippageTolerance","userDeadline","tokens","pairs","timestamp","builder","addCase","state","lastUpdateVersionTimestamp","action","payload","_ref","serializedToken","chainId","address","_ref2","_ref3","_state$dismissedToken","_state$dismissedToken2","tokenAddress","dismissedTokenWarnings","_ref4","serializedPair","token0","token1","_ref5","tokenAAddress","tokenBAddress"],"sources":["/Users/synallage/Desktop/fomoswap-uni/interface-73580de922ce3ff642430d71aa24f5c053e6dd4d/src/state/user/reducer.ts"],"sourcesContent":["import { INITIAL_ALLOWED_SLIPPAGE, DEFAULT_DEADLINE_FROM_NOW } from '../../constants'\nimport { createReducer } from '@reduxjs/toolkit'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  dismissTokenWarning,\n  removeSerializedPair,\n  removeSerializedToken,\n  SerializedPair,\n  SerializedToken,\n  updateMatchesDarkMode,\n  updateUserDarkMode,\n  updateVersion,\n  updateUserExpertMode,\n  updateUserSlippageTolerance,\n  updateUserDeadline\n} from './actions'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n  // the timestamp of the last updateVersion action\n  lastUpdateVersionTimestamp?: number\n\n  userDarkMode: boolean | null // the user's choice for dark mode or light mode\n  matchesDarkMode: boolean // whether the dark mode media query matches\n\n  userExpertMode: boolean\n\n  // user defined slippage tolerance in bips, used in all txns\n  userSlippageTolerance: number\n\n  // deadline set by user in minutes, used in all txns\n  userDeadline: number\n\n  tokens: {\n    [chainId: number]: {\n      [address: string]: SerializedToken\n    }\n  }\n\n  // the token warnings that the user has dismissed\n  dismissedTokenWarnings?: {\n    [chainId: number]: {\n      [tokenAddress: string]: true\n    }\n  }\n\n  pairs: {\n    [chainId: number]: {\n      // keyed by token0Address:token1Address\n      [key: string]: SerializedPair\n    }\n  }\n\n  timestamp: number\n}\n\nfunction pairKey(token0Address: string, token1Address: string) {\n  return `${token0Address};${token1Address}`\n}\n\nexport const initialState: UserState = {\n  userDarkMode: null,\n  matchesDarkMode: false,\n  userExpertMode: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp()\n}\n\nexport default createReducer(initialState, builder =>\n  builder\n    .addCase(updateVersion, state => {\n      // slippage isnt being tracked in local storage, reset to default\n      if (typeof state.userSlippageTolerance !== 'number') {\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\n      }\n\n      // deadline isnt being tracked in local storage, reset to default\n      if (typeof state.userDeadline !== 'number') {\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\n      }\n\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    })\n    .addCase(updateUserDarkMode, (state, action) => {\n      state.userDarkMode = action.payload.userDarkMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateMatchesDarkMode, (state, action) => {\n      state.matchesDarkMode = action.payload.matchesDarkMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserExpertMode, (state, action) => {\n      state.userExpertMode = action.payload.userExpertMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSlippageTolerance, (state, action) => {\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserDeadline, (state, action) => {\n      state.userDeadline = action.payload.userDeadline\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\n      state.tokens[chainId] = state.tokens[chainId] || {}\n      delete state.tokens[chainId][address]\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(dismissTokenWarning, (state, { payload: { chainId, tokenAddress } }) => {\n      state.dismissedTokenWarnings = state.dismissedTokenWarnings ?? {}\n      state.dismissedTokenWarnings[chainId] = state.dismissedTokenWarnings[chainId] ?? {}\n      state.dismissedTokenWarnings[chainId][tokenAddress] = true\n    })\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\n      if (\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\n        serializedPair.token0.address !== serializedPair.token1.address\n      ) {\n        const chainId = serializedPair.token0.chainId\n        state.pairs[chainId] = state.pairs[chainId] || {}\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\n      if (state.pairs[chainId]) {\n        // just delete both keys if either exists\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\n      }\n      state.timestamp = currentTimestamp()\n    })\n)\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}