{"ast":null,"code":"import { CurrencyAmount, ETHER, JSBI } from 'fomoswap-bera1';\nimport { MIN_ETH } from '../constants';\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount) {\n  if (!currencyAmount) return;\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_ETH)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_ETH));\n    } else {\n      return CurrencyAmount.ether(JSBI.BigInt(0));\n    }\n  }\n  return currencyAmount;\n}","map":{"version":3,"names":["CurrencyAmount","ETHER","JSBI","MIN_ETH","maxAmountSpend","currencyAmount","currency","greaterThan","raw","ether","subtract","BigInt"],"sources":["/Users/synallage/Desktop/fomoswap-uni/interface-73580de922ce3ff642430d71aa24f5c053e6dd4d/src/utils/maxAmountSpend.ts"],"sourcesContent":["import { CurrencyAmount, ETHER, JSBI } from 'fomoswap-bera1'\nimport { MIN_ETH } from '../constants'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_ETH)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_ETH))\n    } else {\n      return CurrencyAmount.ether(JSBI.BigInt(0))\n    }\n  }\n  return currencyAmount\n}\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,KAAK,EAAEC,IAAI,QAAQ,gBAAgB;AAC5D,SAASC,OAAO,QAAQ,cAAc;;AAEtC;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAcA,CAACC,cAA+B,EAA8B;EAC1F,IAAI,CAACA,cAAc,EAAE;EACrB,IAAIA,cAAc,CAACC,QAAQ,KAAKL,KAAK,EAAE;IACrC,IAAIC,IAAI,CAACK,WAAW,CAACF,cAAc,CAACG,GAAG,EAAEL,OAAO,CAAC,EAAE;MACjD,OAAOH,cAAc,CAACS,KAAK,CAACP,IAAI,CAACQ,QAAQ,CAACL,cAAc,CAACG,GAAG,EAAEL,OAAO,CAAC,CAAC;IACzE,CAAC,MAAM;MACL,OAAOH,cAAc,CAACS,KAAK,CAACP,IAAI,CAACS,MAAM,CAAC,CAAC,CAAC,CAAC;IAC7C;EACF;EACA,OAAON,cAAc;AACvB","ignoreList":[]},"metadata":{},"sourceType":"module"}