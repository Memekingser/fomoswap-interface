{"ast":null,"code":"import{JSBI,Token,TokenAmount,WETH,Fraction,Percent,CurrencyAmount}from'fomoswap-bera1';import React,{useCallback,useMemo,useState}from'react';import ReactGA from'react-ga';import{Redirect}from'react-router';import{ButtonConfirmed}from'../../components/Button';import{LightCard}from'../../components/Card';import{AutoColumn}from'../../components/Column';import QuestionHelper from'../../components/QuestionHelper';import{AutoRow}from'../../components/Row';import{DEFAULT_DEADLINE_FROM_NOW}from'../../constants';import{useActiveWeb3React}from'../../hooks';import{useToken}from'../../hooks/Tokens';import{useV1ExchangeContract}from'../../hooks/useContract';import{NEVER_RELOAD,useSingleCallResult}from'../../state/multicall/hooks';import{useIsTransactionPending,useTransactionAdder}from'../../state/transactions/hooks';import{useTokenBalance,useETHBalances}from'../../state/wallet/hooks';import{BackArrow,TYPE}from'../../theme';import{isAddress}from'../../utils';import{BodyWrapper}from'../AppBody';import{EmptyState}from'./EmptyState';import{V1LiquidityInfo}from'./MigrateV1Exchange';import{AddressZero}from'@ethersproject/constants';import{Dots}from'../../components/swap/styleds';import{useTotalSupply}from'../../data/TotalSupply';const WEI_DENOM=JSBI.exponentiate(JSBI.BigInt(10),JSBI.BigInt(18));const ZERO=JSBI.BigInt(0);const ONE=JSBI.BigInt(1);const ZERO_FRACTION=new Fraction(ZERO,ONE);function V1PairRemoval(_ref){var _useETHBalances;let{exchangeContract,liquidityTokenAmount,token}=_ref;const{chainId}=useActiveWeb3React();const totalSupply=useTotalSupply(liquidityTokenAmount.token);const exchangeETHBalance=(_useETHBalances=useETHBalances([liquidityTokenAmount.token.address]))===null||_useETHBalances===void 0?void 0:_useETHBalances[liquidityTokenAmount.token.address];const exchangeTokenBalance=useTokenBalance(liquidityTokenAmount.token.address,token);const[confirmingRemoval,setConfirmingRemoval]=useState(false);const[pendingRemovalHash,setPendingRemovalHash]=useState(null);const shareFraction=totalSupply?new Percent(liquidityTokenAmount.raw,totalSupply.raw):ZERO_FRACTION;const ethWorth=exchangeETHBalance?CurrencyAmount.ether(exchangeETHBalance.multiply(shareFraction).multiply(WEI_DENOM).quotient):CurrencyAmount.ether(ZERO);const tokenWorth=exchangeTokenBalance?new TokenAmount(token,shareFraction.multiply(exchangeTokenBalance.raw).quotient):new TokenAmount(token,ZERO);const addTransaction=useTransactionAdder();const isRemovalPending=useIsTransactionPending(pendingRemovalHash);const remove=useCallback(()=>{if(!liquidityTokenAmount)return;setConfirmingRemoval(true);exchangeContract.removeLiquidity(liquidityTokenAmount.raw.toString(),1,// min_eth, this is safe because we're removing liquidity\n1,// min_tokens, this is safe because we're removing liquidity\nMath.floor(new Date().getTime()/1000)+DEFAULT_DEADLINE_FROM_NOW).then(response=>{ReactGA.event({category:'Remove',action:'V1',label:token===null||token===void 0?void 0:token.symbol});addTransaction(response,{summary:\"Remove \".concat(token.equals(WETH[chainId])?'WETH':token.symbol,\"/ETH V1 liquidity\")});setPendingRemovalHash(response.hash);}).catch(error=>{console.error(error);setConfirmingRemoval(false);});},[exchangeContract,liquidityTokenAmount,token,chainId,addTransaction]);const noLiquidityTokens=!!liquidityTokenAmount&&liquidityTokenAmount.equalTo(ZERO);const isSuccessfullyRemoved=!!pendingRemovalHash&&!!noLiquidityTokens;return/*#__PURE__*/React.createElement(AutoColumn,{gap:\"20px\"},/*#__PURE__*/React.createElement(TYPE.body,{my:9,style:{fontWeight:400}},\"This tool will remove your V1 liquidity and send the underlying assets to your wallet.\"),/*#__PURE__*/React.createElement(LightCard,null,/*#__PURE__*/React.createElement(V1LiquidityInfo,{token:token,liquidityTokenAmount:liquidityTokenAmount,tokenWorth:tokenWorth,ethWorth:ethWorth}),/*#__PURE__*/React.createElement(\"div\",{style:{display:'flex',marginTop:'1rem'}},/*#__PURE__*/React.createElement(ButtonConfirmed,{confirmed:isSuccessfullyRemoved,disabled:isSuccessfullyRemoved||noLiquidityTokens||isRemovalPending||confirmingRemoval,onClick:remove},isSuccessfullyRemoved?'Success':isRemovalPending?/*#__PURE__*/React.createElement(Dots,null,\"Removing\"):'Remove'))),/*#__PURE__*/React.createElement(TYPE.darkGray,{style:{textAlign:'center'}},\"Your Uniswap V1 \".concat(token.equals(WETH[chainId])?'WETH':token.symbol,\"/ETH liquidity will be redeemed for underlying assets.\")));}export default function RemoveV1Exchange(_ref2){var _useSingleCallResult,_useSingleCallResult$;let{match:{params:{address}}}=_ref2;const validatedAddress=isAddress(address);const{chainId,account}=useActiveWeb3React();const exchangeContract=useV1ExchangeContract(validatedAddress?validatedAddress:undefined,true);const tokenAddress=(_useSingleCallResult=useSingleCallResult(exchangeContract,'tokenAddress',undefined,NEVER_RELOAD))===null||_useSingleCallResult===void 0?void 0:(_useSingleCallResult$=_useSingleCallResult.result)===null||_useSingleCallResult$===void 0?void 0:_useSingleCallResult$[0];const token=useToken(tokenAddress);const liquidityToken=useMemo(()=>validatedAddress&&token?new Token(chainId,validatedAddress,18,\"UNI-V1-\".concat(token.symbol),'Uniswap V1'):undefined,[chainId,validatedAddress,token]);const userLiquidityBalance=useTokenBalance(account,liquidityToken);// redirect for invalid url params\nif(!validatedAddress||tokenAddress===AddressZero){console.error('Invalid address in path',address);return/*#__PURE__*/React.createElement(Redirect,{to:\"/migrate/v1\"});}return/*#__PURE__*/React.createElement(BodyWrapper,{style:{padding:24},id:\"remove-v1-exchange\"},/*#__PURE__*/React.createElement(AutoColumn,{gap:\"16px\"},/*#__PURE__*/React.createElement(AutoRow,{style:{alignItems:'center',justifyContent:'space-between'},gap:\"8px\"},/*#__PURE__*/React.createElement(BackArrow,{to:\"/migrate/v1\"}),/*#__PURE__*/React.createElement(TYPE.mediumHeader,null,\"Remove V1 Liquidity\"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(QuestionHelper,{text:\"Remove your Uniswap V1 liquidity tokens.\"}))),!account?/*#__PURE__*/React.createElement(TYPE.largeHeader,null,\"You must connect an account.\"):userLiquidityBalance&&token?/*#__PURE__*/React.createElement(V1PairRemoval,{exchangeContract:exchangeContract,liquidityTokenAmount:userLiquidityBalance,token:token}):/*#__PURE__*/React.createElement(EmptyState,{message:\"Loading...\"})));}","map":{"version":3,"names":["JSBI","Token","TokenAmount","WETH","Fraction","Percent","CurrencyAmount","React","useCallback","useMemo","useState","ReactGA","Redirect","ButtonConfirmed","LightCard","AutoColumn","QuestionHelper","AutoRow","DEFAULT_DEADLINE_FROM_NOW","useActiveWeb3React","useToken","useV1ExchangeContract","NEVER_RELOAD","useSingleCallResult","useIsTransactionPending","useTransactionAdder","useTokenBalance","useETHBalances","BackArrow","TYPE","isAddress","BodyWrapper","EmptyState","V1LiquidityInfo","AddressZero","Dots","useTotalSupply","WEI_DENOM","exponentiate","BigInt","ZERO","ONE","ZERO_FRACTION","V1PairRemoval","_ref","_useETHBalances","exchangeContract","liquidityTokenAmount","token","chainId","totalSupply","exchangeETHBalance","address","exchangeTokenBalance","confirmingRemoval","setConfirmingRemoval","pendingRemovalHash","setPendingRemovalHash","shareFraction","raw","ethWorth","ether","multiply","quotient","tokenWorth","addTransaction","isRemovalPending","remove","removeLiquidity","toString","Math","floor","Date","getTime","then","response","event","category","action","label","symbol","summary","concat","equals","hash","catch","error","console","noLiquidityTokens","equalTo","isSuccessfullyRemoved","createElement","gap","body","my","style","fontWeight","display","marginTop","confirmed","disabled","onClick","darkGray","textAlign","RemoveV1Exchange","_ref2","_useSingleCallResult","_useSingleCallResult$","match","params","validatedAddress","account","undefined","tokenAddress","result","liquidityToken","userLiquidityBalance","to","padding","id","alignItems","justifyContent","mediumHeader","text","largeHeader","message"],"sources":["/Users/synallage/Desktop/fomoswap-uni/interface-73580de922ce3ff642430d71aa24f5c053e6dd4d/src/pages/MigrateV1/RemoveV1Exchange.tsx"],"sourcesContent":["import { TransactionResponse } from '@ethersproject/abstract-provider'\nimport { JSBI, Token, TokenAmount, WETH, Fraction, Percent, CurrencyAmount } from 'fomoswap-bera1'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport ReactGA from 'react-ga'\nimport { Redirect, RouteComponentProps } from 'react-router'\nimport { ButtonConfirmed } from '../../components/Button'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn } from '../../components/Column'\nimport QuestionHelper from '../../components/QuestionHelper'\nimport { AutoRow } from '../../components/Row'\nimport { DEFAULT_DEADLINE_FROM_NOW } from '../../constants'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useToken } from '../../hooks/Tokens'\nimport { useV1ExchangeContract } from '../../hooks/useContract'\nimport { NEVER_RELOAD, useSingleCallResult } from '../../state/multicall/hooks'\nimport { useIsTransactionPending, useTransactionAdder } from '../../state/transactions/hooks'\nimport { useTokenBalance, useETHBalances } from '../../state/wallet/hooks'\nimport { BackArrow, TYPE } from '../../theme'\nimport { isAddress } from '../../utils'\nimport { BodyWrapper } from '../AppBody'\nimport { EmptyState } from './EmptyState'\nimport { V1LiquidityInfo } from './MigrateV1Exchange'\nimport { AddressZero } from '@ethersproject/constants'\nimport { Dots } from '../../components/swap/styleds'\nimport { Contract } from '@ethersproject/contracts'\nimport { useTotalSupply } from '../../data/TotalSupply'\n\nconst WEI_DENOM = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(18))\nconst ZERO = JSBI.BigInt(0)\nconst ONE = JSBI.BigInt(1)\nconst ZERO_FRACTION = new Fraction(ZERO, ONE)\n\nfunction V1PairRemoval({\n  exchangeContract,\n  liquidityTokenAmount,\n  token\n}: {\n  exchangeContract: Contract\n  liquidityTokenAmount: TokenAmount\n  token: Token\n}) {\n  const { chainId } = useActiveWeb3React()\n  const totalSupply = useTotalSupply(liquidityTokenAmount.token)\n  const exchangeETHBalance = useETHBalances([liquidityTokenAmount.token.address])?.[liquidityTokenAmount.token.address]\n  const exchangeTokenBalance = useTokenBalance(liquidityTokenAmount.token.address, token)\n\n  const [confirmingRemoval, setConfirmingRemoval] = useState<boolean>(false)\n  const [pendingRemovalHash, setPendingRemovalHash] = useState<string | null>(null)\n\n  const shareFraction: Fraction = totalSupply ? new Percent(liquidityTokenAmount.raw, totalSupply.raw) : ZERO_FRACTION\n\n  const ethWorth: CurrencyAmount = exchangeETHBalance\n    ? CurrencyAmount.ether(exchangeETHBalance.multiply(shareFraction).multiply(WEI_DENOM).quotient)\n    : CurrencyAmount.ether(ZERO)\n\n  const tokenWorth: TokenAmount = exchangeTokenBalance\n    ? new TokenAmount(token, shareFraction.multiply(exchangeTokenBalance.raw).quotient)\n    : new TokenAmount(token, ZERO)\n\n  const addTransaction = useTransactionAdder()\n  const isRemovalPending = useIsTransactionPending(pendingRemovalHash)\n\n  const remove = useCallback(() => {\n    if (!liquidityTokenAmount) return\n\n    setConfirmingRemoval(true)\n    exchangeContract\n      .removeLiquidity(\n        liquidityTokenAmount.raw.toString(),\n        1, // min_eth, this is safe because we're removing liquidity\n        1, // min_tokens, this is safe because we're removing liquidity\n        Math.floor(new Date().getTime() / 1000) + DEFAULT_DEADLINE_FROM_NOW\n      )\n      .then((response: TransactionResponse) => {\n        ReactGA.event({\n          category: 'Remove',\n          action: 'V1',\n          label: token?.symbol\n        })\n\n        addTransaction(response, {\n          summary: `Remove ${token.equals(WETH[chainId]) ? 'WETH' : token.symbol}/ETH V1 liquidity`\n        })\n        setPendingRemovalHash(response.hash)\n      })\n      .catch(error => {\n        console.error(error)\n        setConfirmingRemoval(false)\n      })\n  }, [exchangeContract, liquidityTokenAmount, token, chainId, addTransaction])\n\n  const noLiquidityTokens = !!liquidityTokenAmount && liquidityTokenAmount.equalTo(ZERO)\n\n  const isSuccessfullyRemoved = !!pendingRemovalHash && !!noLiquidityTokens\n\n  return (\n    <AutoColumn gap=\"20px\">\n      <TYPE.body my={9} style={{ fontWeight: 400 }}>\n        This tool will remove your V1 liquidity and send the underlying assets to your wallet.\n      </TYPE.body>\n\n      <LightCard>\n        <V1LiquidityInfo\n          token={token}\n          liquidityTokenAmount={liquidityTokenAmount}\n          tokenWorth={tokenWorth}\n          ethWorth={ethWorth}\n        />\n\n        <div style={{ display: 'flex', marginTop: '1rem' }}>\n          <ButtonConfirmed\n            confirmed={isSuccessfullyRemoved}\n            disabled={isSuccessfullyRemoved || noLiquidityTokens || isRemovalPending || confirmingRemoval}\n            onClick={remove}\n          >\n            {isSuccessfullyRemoved ? 'Success' : isRemovalPending ? <Dots>Removing</Dots> : 'Remove'}\n          </ButtonConfirmed>\n        </div>\n      </LightCard>\n      <TYPE.darkGray style={{ textAlign: 'center' }}>\n        {`Your Uniswap V1 ${\n          token.equals(WETH[chainId]) ? 'WETH' : token.symbol\n        }/ETH liquidity will be redeemed for underlying assets.`}\n      </TYPE.darkGray>\n    </AutoColumn>\n  )\n}\n\nexport default function RemoveV1Exchange({\n  match: {\n    params: { address }\n  }\n}: RouteComponentProps<{ address: string }>) {\n  const validatedAddress = isAddress(address)\n  const { chainId, account } = useActiveWeb3React()\n\n  const exchangeContract = useV1ExchangeContract(validatedAddress ? validatedAddress : undefined, true)\n  const tokenAddress = useSingleCallResult(exchangeContract, 'tokenAddress', undefined, NEVER_RELOAD)?.result?.[0]\n  const token = useToken(tokenAddress)\n\n  const liquidityToken: Token | undefined = useMemo(\n    () =>\n      validatedAddress && token\n        ? new Token(chainId, validatedAddress, 18, `UNI-V1-${token.symbol}`, 'Uniswap V1')\n        : undefined,\n    [chainId, validatedAddress, token]\n  )\n  const userLiquidityBalance = useTokenBalance(account, liquidityToken)\n\n  // redirect for invalid url params\n  if (!validatedAddress || tokenAddress === AddressZero) {\n    console.error('Invalid address in path', address)\n    return <Redirect to=\"/migrate/v1\" />\n  }\n\n  return (\n    <BodyWrapper style={{ padding: 24 }} id=\"remove-v1-exchange\">\n      <AutoColumn gap=\"16px\">\n        <AutoRow style={{ alignItems: 'center', justifyContent: 'space-between' }} gap=\"8px\">\n          <BackArrow to=\"/migrate/v1\" />\n          <TYPE.mediumHeader>Remove V1 Liquidity</TYPE.mediumHeader>\n          <div>\n            <QuestionHelper text=\"Remove your Uniswap V1 liquidity tokens.\" />\n          </div>\n        </AutoRow>\n\n        {!account ? (\n          <TYPE.largeHeader>You must connect an account.</TYPE.largeHeader>\n        ) : userLiquidityBalance && token ? (\n          <V1PairRemoval\n            exchangeContract={exchangeContract}\n            liquidityTokenAmount={userLiquidityBalance}\n            token={token}\n          />\n        ) : (\n          <EmptyState message=\"Loading...\" />\n        )}\n      </AutoColumn>\n    </BodyWrapper>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}