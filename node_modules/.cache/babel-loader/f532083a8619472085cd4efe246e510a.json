{"ast":null,"code":"import{MaxUint256}from'@ethersproject/constants';import{TokenAmount,ETHER}from'fomoswap-storytestnet';import{useCallback,useMemo}from'react';import{ROUTER_ADDRESS}from'../constants';import{useTokenAllowance}from'../data/Allowances';import{getTradeVersion,useV1TradeExchangeAddress}from'../data/V1';import{Field}from'../state/swap/actions';import{useTransactionAdder,useHasPendingApproval}from'../state/transactions/hooks';import{computeSlippageAdjustedAmounts}from'../utils/prices';import{calculateGasMargin}from'../utils';import{useTokenContract}from'./useContract';import{useActiveWeb3React}from'./index';import{Version}from'./useToggledVersion';export let ApprovalState;// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\n(function(ApprovalState){ApprovalState[ApprovalState[\"UNKNOWN\"]=0]=\"UNKNOWN\";ApprovalState[ApprovalState[\"NOT_APPROVED\"]=1]=\"NOT_APPROVED\";ApprovalState[ApprovalState[\"PENDING\"]=2]=\"PENDING\";ApprovalState[ApprovalState[\"APPROVED\"]=3]=\"APPROVED\";})(ApprovalState||(ApprovalState={}));export function useApproveCallback(amountToApprove,spender){const{account}=useActiveWeb3React();const token=amountToApprove instanceof TokenAmount?amountToApprove.token:undefined;const currentAllowance=useTokenAllowance(token,account!==null&&account!==void 0?account:undefined,spender);const pendingApproval=useHasPendingApproval(token===null||token===void 0?void 0:token.address,spender);// check the current approval status\nconst approvalState=useMemo(()=>{if(!amountToApprove||!spender)return ApprovalState.UNKNOWN;if(amountToApprove.currency===ETHER)return ApprovalState.APPROVED;// we might not have enough data to know whether or not we need to approve\nif(!currentAllowance)return ApprovalState.UNKNOWN;// amountToApprove will be defined if currentAllowance is\nreturn currentAllowance.lessThan(amountToApprove)?pendingApproval?ApprovalState.PENDING:ApprovalState.NOT_APPROVED:ApprovalState.APPROVED;},[amountToApprove,currentAllowance,pendingApproval,spender]);const tokenContract=useTokenContract(token===null||token===void 0?void 0:token.address);const addTransaction=useTransactionAdder();const approve=useCallback(async()=>{if(approvalState!==ApprovalState.NOT_APPROVED){console.error('approve was called unnecessarily');return;}if(!token){console.error('no token');return;}if(!tokenContract){console.error('tokenContract is null');return;}if(!amountToApprove){console.error('missing amount to approve');return;}if(!spender){console.error('no spender');return;}let useExact=false;const estimatedGas=await tokenContract.estimateGas.approve(spender,MaxUint256).catch(()=>{// general fallback for tokens who restrict approval amounts\nuseExact=true;return tokenContract.estimateGas.approve(spender,amountToApprove.raw.toString());});return tokenContract.approve(spender,useExact?amountToApprove.raw.toString():MaxUint256,{gasLimit:calculateGasMargin(estimatedGas)}).then(response=>{addTransaction(response,{summary:'Approve '+amountToApprove.currency.symbol,approval:{tokenAddress:token.address,spender:spender}});}).catch(error=>{console.debug('Failed to approve token',error);throw error;});},[approvalState,token,tokenContract,amountToApprove,spender,addTransaction]);return[approvalState,approve];}// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade){let allowedSlippage=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;const amountToApprove=useMemo(()=>trade?computeSlippageAdjustedAmounts(trade,allowedSlippage)[Field.INPUT]:undefined,[trade,allowedSlippage]);const tradeIsV1=getTradeVersion(trade)===Version.v1;const v1ExchangeAddress=useV1TradeExchangeAddress(trade);return useApproveCallback(amountToApprove,tradeIsV1?v1ExchangeAddress:ROUTER_ADDRESS);}","map":{"version":3,"names":["MaxUint256","TokenAmount","ETHER","useCallback","useMemo","ROUTER_ADDRESS","useTokenAllowance","getTradeVersion","useV1TradeExchangeAddress","Field","useTransactionAdder","useHasPendingApproval","computeSlippageAdjustedAmounts","calculateGasMargin","useTokenContract","useActiveWeb3React","Version","ApprovalState","useApproveCallback","amountToApprove","spender","account","token","undefined","currentAllowance","pendingApproval","address","approvalState","UNKNOWN","currency","APPROVED","lessThan","PENDING","NOT_APPROVED","tokenContract","addTransaction","approve","console","error","useExact","estimatedGas","estimateGas","catch","raw","toString","gasLimit","then","response","summary","symbol","approval","tokenAddress","debug","useApproveCallbackFromTrade","trade","allowedSlippage","arguments","length","INPUT","tradeIsV1","v1","v1ExchangeAddress"],"sources":["/Users/synallage/Desktop/fomoswap-uni/interface-73580de922ce3ff642430d71aa24f5c053e6dd4d/src/hooks/useApproveCallback.ts"],"sourcesContent":["import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from 'fomoswap-storytestnet'\nimport { useCallback, useMemo } from 'react'\nimport { ROUTER_ADDRESS } from '../constants'\nimport { useTokenAllowance } from '../data/Allowances'\nimport { getTradeVersion, useV1TradeExchangeAddress } from '../data/V1'\nimport { Field } from '../state/swap/actions'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\nimport { calculateGasMargin } from '../utils'\nimport { useTokenContract } from './useContract'\nimport { useActiveWeb3React } from './index'\nimport { Version } from './useToggledVersion'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    return tokenContract\n      .approve(spender, useExact ? amountToApprove.raw.toString() : MaxUint256, {\n        gasLimit: calculateGasMargin(estimatedGas)\n      })\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: 'Approve ' + amountToApprove.currency.symbol,\n          approval: { tokenAddress: token.address, spender: spender }\n        })\n      })\n      .catch((error: Error) => {\n        console.debug('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage]\n  )\n  const tradeIsV1 = getTradeVersion(trade) === Version.v1\n  const v1ExchangeAddress = useV1TradeExchangeAddress(trade)\n  return useApproveCallback(amountToApprove, tradeIsV1 ? v1ExchangeAddress : ROUTER_ADDRESS)\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}