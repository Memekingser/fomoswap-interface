{"ast":null,"code":"import{Trade}from'fomoswap-bera1';import flatMap from'lodash.flatmap';import{useMemo}from'react';import{BASES_TO_CHECK_TRADES_AGAINST,CUSTOM_BASES}from'../constants';import{PairState,usePairs}from'../data/Reserves';import{wrappedCurrency}from'../utils/wrappedCurrency';import{useActiveWeb3React}from'./index';function useAllCommonPairs(currencyA,currencyB){const{chainId}=useActiveWeb3React();const bases=chainId?BASES_TO_CHECK_TRADES_AGAINST[chainId]:[];const[tokenA,tokenB]=chainId?[wrappedCurrency(currencyA,chainId),wrappedCurrency(currencyB,chainId)]:[undefined,undefined];const allPairCombinations=useMemo(()=>[// the direct pair\n[tokenA,tokenB],// token A against all bases\n...bases.map(base=>[tokenA,base]),// token B against all bases\n...bases.map(base=>[tokenB,base]),// each base against all bases\n...flatMap(bases,base=>bases.map(otherBase=>[base,otherBase]))].filter(tokens=>Boolean(tokens[0]&&tokens[1])).filter(_ref=>{let[tokenA,tokenB]=_ref;if(!chainId)return true;const customBases=CUSTOM_BASES[chainId];if(!customBases)return true;const customBasesA=customBases[tokenA.address];const customBasesB=customBases[tokenB.address];if(!customBasesA&&!customBasesB)return true;if(customBasesA&&customBasesA.findIndex(base=>tokenB.equals(base))===-1)return false;if(customBasesB&&customBasesB.findIndex(base=>tokenA.equals(base))===-1)return false;return true;}),[tokenA,tokenB,bases,chainId]);const allPairs=usePairs(allPairCombinations);// only pass along valid pairs, non-duplicated pairs\nreturn useMemo(()=>Object.values(allPairs// filter out invalid pairs\n.filter(result=>Boolean(result[0]===PairState.EXISTS&&result[1]))// filter out duplicated pairs\n.reduce((memo,_ref2)=>{var _memo$curr$liquidityT;let[,curr]=_ref2;memo[curr.liquidityToken.address]=(_memo$curr$liquidityT=memo[curr.liquidityToken.address])!==null&&_memo$curr$liquidityT!==void 0?_memo$curr$liquidityT:curr;return memo;},{})),[allPairs]);}/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */export function useTradeExactIn(currencyAmountIn,currencyOut){const allowedPairs=useAllCommonPairs(currencyAmountIn===null||currencyAmountIn===void 0?void 0:currencyAmountIn.currency,currencyOut);return useMemo(()=>{if(currencyAmountIn&&currencyOut&&allowedPairs.length>0){var _Trade$bestTradeExact;return(_Trade$bestTradeExact=Trade.bestTradeExactIn(allowedPairs,currencyAmountIn,currencyOut,{maxHops:3,maxNumResults:1})[0])!==null&&_Trade$bestTradeExact!==void 0?_Trade$bestTradeExact:null;}return null;},[allowedPairs,currencyAmountIn,currencyOut]);}/**\n * Returns the best trade for the token in to the exact amount of token out\n */export function useTradeExactOut(currencyIn,currencyAmountOut){const allowedPairs=useAllCommonPairs(currencyIn,currencyAmountOut===null||currencyAmountOut===void 0?void 0:currencyAmountOut.currency);return useMemo(()=>{if(currencyIn&&currencyAmountOut&&allowedPairs.length>0){var _Trade$bestTradeExact2;return(_Trade$bestTradeExact2=Trade.bestTradeExactOut(allowedPairs,currencyIn,currencyAmountOut,{maxHops:3,maxNumResults:1})[0])!==null&&_Trade$bestTradeExact2!==void 0?_Trade$bestTradeExact2:null;}return null;},[allowedPairs,currencyIn,currencyAmountOut]);}","map":{"version":3,"names":["Trade","flatMap","useMemo","BASES_TO_CHECK_TRADES_AGAINST","CUSTOM_BASES","PairState","usePairs","wrappedCurrency","useActiveWeb3React","useAllCommonPairs","currencyA","currencyB","chainId","bases","tokenA","tokenB","undefined","allPairCombinations","map","base","otherBase","filter","tokens","Boolean","_ref","customBases","customBasesA","address","customBasesB","findIndex","equals","allPairs","Object","values","result","EXISTS","reduce","memo","_ref2","_memo$curr$liquidityT","curr","liquidityToken","useTradeExactIn","currencyAmountIn","currencyOut","allowedPairs","currency","length","_Trade$bestTradeExact","bestTradeExactIn","maxHops","maxNumResults","useTradeExactOut","currencyIn","currencyAmountOut","_Trade$bestTradeExact2","bestTradeExactOut"],"sources":["/Users/synallage/Desktop/fomoswap-uni/interface-73580de922ce3ff642430d71aa24f5c053e6dd4d/src/hooks/Trades.ts"],"sourcesContent":["import { Currency, CurrencyAmount, Pair, Token, Trade } from 'fomoswap-bera1'\nimport flatMap from 'lodash.flatmap'\nimport { useMemo } from 'react'\n\nimport { BASES_TO_CHECK_TRADES_AGAINST, CUSTOM_BASES } from '../constants'\nimport { PairState, usePairs } from '../data/Reserves'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nimport { useActiveWeb3React } from './index'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const bases: Token[] = chainId ? BASES_TO_CHECK_TRADES_AGAINST[chainId] : []\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      [\n        // the direct pair\n        [tokenA, tokenB],\n        // token A against all bases\n        ...bases.map((base): [Token | undefined, Token | undefined] => [tokenA, base]),\n        // token B against all bases\n        ...bases.map((base): [Token | undefined, Token | undefined] => [tokenB, base]),\n        // each base against all bases\n        ...flatMap(bases, (base): [Token, Token][] => bases.map(otherBase => [base, otherBase]))\n      ]\n        .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n        .filter(([tokenA, tokenB]) => {\n          if (!chainId) return true\n          const customBases = CUSTOM_BASES[chainId]\n          if (!customBases) return true\n\n          const customBasesA: Token[] | undefined = customBases[tokenA.address]\n          const customBasesB: Token[] | undefined = customBases[tokenB.address]\n\n          if (!customBasesA && !customBasesB) return true\n\n          if (customBasesA && customBasesA.findIndex(base => tokenB.equals(base)) === -1) return false\n          if (customBasesB && customBasesB.findIndex(base => tokenA.equals(base)) === -1) return false\n\n          return true\n        }),\n    [tokenA, tokenB, bases, chainId]\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {})\n      ),\n    [allPairs]\n  )\n}\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      return (\n        Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 3, maxNumResults: 1 })[0] ?? null\n      )\n    }\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      return (\n        Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 3, maxNumResults: 1 })[0] ??\n        null\n      )\n    }\n    return null\n  }, [allowedPairs, currencyIn, currencyAmountOut])\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}