{"ast":null,"code":"import { MaxUint256 } from '@ethersproject/constants';\nimport { TokenAmount, ETHER } from 'fomoswap-bera1';\nimport { useCallback, useMemo } from 'react';\nimport { ROUTER_ADDRESS } from '../constants';\nimport { useTokenAllowance } from '../data/Allowances';\nimport { getTradeVersion, useV1TradeExchangeAddress } from '../data/V1';\nimport { Field } from '../state/swap/actions';\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks';\nimport { computeSlippageAdjustedAmounts } from '../utils/prices';\nimport { calculateGasMargin } from '../utils';\nimport { useTokenContract } from './useContract';\nimport { useActiveWeb3React } from './index';\nimport { Version } from './useToggledVersion';\nexport let ApprovalState;\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\n(function (ApprovalState) {\n  ApprovalState[ApprovalState[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  ApprovalState[ApprovalState[\"NOT_APPROVED\"] = 1] = \"NOT_APPROVED\";\n  ApprovalState[ApprovalState[\"PENDING\"] = 2] = \"PENDING\";\n  ApprovalState[ApprovalState[\"APPROVED\"] = 3] = \"APPROVED\";\n})(ApprovalState || (ApprovalState = {}));\nexport function useApproveCallback(amountToApprove, spender) {\n  const {\n    account\n  } = useActiveWeb3React();\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined;\n  const currentAllowance = useTokenAllowance(token, account !== null && account !== void 0 ? account : undefined, spender);\n  const pendingApproval = useHasPendingApproval(token === null || token === void 0 ? void 0 : token.address, spender);\n\n  // check the current approval status\n  const approvalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN;\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED;\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN;\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove) ? pendingApproval ? ApprovalState.PENDING : ApprovalState.NOT_APPROVED : ApprovalState.APPROVED;\n  }, [amountToApprove, currentAllowance, pendingApproval, spender]);\n  const tokenContract = useTokenContract(token === null || token === void 0 ? void 0 : token.address);\n  const addTransaction = useTransactionAdder();\n  const approve = useCallback(async () => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily');\n      return;\n    }\n    if (!token) {\n      console.error('no token');\n      return;\n    }\n    if (!tokenContract) {\n      console.error('tokenContract is null');\n      return;\n    }\n    if (!amountToApprove) {\n      console.error('missing amount to approve');\n      return;\n    }\n    if (!spender) {\n      console.error('no spender');\n      return;\n    }\n    let useExact = false;\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true;\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString());\n    });\n    return tokenContract.approve(spender, useExact ? amountToApprove.raw.toString() : MaxUint256, {\n      gasLimit: calculateGasMargin(estimatedGas)\n    }).then(response => {\n      addTransaction(response, {\n        summary: 'Approve ' + amountToApprove.currency.symbol,\n        approval: {\n          tokenAddress: token.address,\n          spender: spender\n        }\n      });\n    }).catch(error => {\n      console.debug('Failed to approve token', error);\n      throw error;\n    });\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction]);\n  return [approvalState, approve];\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(() => trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined, [trade, allowedSlippage]);\n  const tradeIsV1 = getTradeVersion(trade) === Version.v1;\n  const v1ExchangeAddress = useV1TradeExchangeAddress(trade);\n  return useApproveCallback(amountToApprove, tradeIsV1 ? v1ExchangeAddress : ROUTER_ADDRESS);\n}","map":{"version":3,"names":["MaxUint256","TokenAmount","ETHER","useCallback","useMemo","ROUTER_ADDRESS","useTokenAllowance","getTradeVersion","useV1TradeExchangeAddress","Field","useTransactionAdder","useHasPendingApproval","computeSlippageAdjustedAmounts","calculateGasMargin","useTokenContract","useActiveWeb3React","Version","ApprovalState","useApproveCallback","amountToApprove","spender","account","token","undefined","currentAllowance","pendingApproval","address","approvalState","UNKNOWN","currency","APPROVED","lessThan","PENDING","NOT_APPROVED","tokenContract","addTransaction","approve","console","error","useExact","estimatedGas","estimateGas","catch","raw","toString","gasLimit","then","response","summary","symbol","approval","tokenAddress","debug","useApproveCallbackFromTrade","trade","allowedSlippage","INPUT","tradeIsV1","v1","v1ExchangeAddress"],"sources":["/Users/synallage/Desktop/fomoswap-uni/interface-73580de922ce3ff642430d71aa24f5c053e6dd4d/src/hooks/useApproveCallback.ts"],"sourcesContent":["import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from 'fomoswap-bera1'\nimport { useCallback, useMemo } from 'react'\nimport { ROUTER_ADDRESS } from '../constants'\nimport { useTokenAllowance } from '../data/Allowances'\nimport { getTradeVersion, useV1TradeExchangeAddress } from '../data/V1'\nimport { Field } from '../state/swap/actions'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\nimport { calculateGasMargin } from '../utils'\nimport { useTokenContract } from './useContract'\nimport { useActiveWeb3React } from './index'\nimport { Version } from './useToggledVersion'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    return tokenContract\n      .approve(spender, useExact ? amountToApprove.raw.toString() : MaxUint256, {\n        gasLimit: calculateGasMargin(estimatedGas)\n      })\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: 'Approve ' + amountToApprove.currency.symbol,\n          approval: { tokenAddress: token.address, spender: spender }\n        })\n      })\n      .catch((error: Error) => {\n        console.debug('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage]\n  )\n  const tradeIsV1 = getTradeVersion(trade) === Version.v1\n  const v1ExchangeAddress = useV1TradeExchangeAddress(trade)\n  return useApproveCallback(amountToApprove, tradeIsV1 ? v1ExchangeAddress : ROUTER_ADDRESS)\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}