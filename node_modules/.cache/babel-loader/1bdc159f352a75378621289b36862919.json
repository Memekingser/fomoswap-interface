{"ast":null,"code":"var _jsxFileName = \"/Users/synallage/Desktop/fomoswap-uni/interface-73580de922ce3ff642430d71aa24f5c053e6dd4d/src/components/Web3Status/index.tsx\";\nimport React, { useMemo } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useTranslation } from 'react-i18next';\nimport { useWeb3React } from '@web3-react/core';\nimport { darken, lighten } from 'polished';\nimport { Activity } from 'react-feather';\nimport useENSName from '../../hooks/useENSName';\nimport { useHasSocks } from '../../hooks/useSocksBalance';\nimport { useWalletModalToggle } from '../../state/application/hooks';\nimport Identicon from '../Identicon';\nimport PortisIcon from '../../assets/images/portisIcon.png';\nimport WalletModal from '../WalletModal';\nimport { ButtonSecondary } from '../Button';\nimport FortmaticIcon from '../../assets/images/fortmaticIcon.png';\nimport WalletConnectIcon from \"../../assets/images/walletConnectIcon.svg\";\nimport CoinbaseWalletIcon from \"../../assets/images/coinbaseWalletIcon.svg\";\nimport { RowBetween } from '../Row';\nimport { shortenAddress } from '../../utils';\nimport { useAllTransactions } from '../../state/transactions/hooks';\nimport { NetworkContextName } from '../../constants';\nimport { injected, walletconnect, walletlink, fortmatic, portis } from '../../connectors';\nimport Loader from '../Loader';\nconst IconWrapper = styled.div`\n  ${({\n  theme\n}) => theme.flexColumnNoWrap};\n  align-items: center;\n  justify-content: center;\n  & > * {\n    height: ${({\n  size\n}) => size ? size + 'px' : '32px'};\n    width: ${({\n  size\n}) => size ? size + 'px' : '32px'};\n  }\n`;\nconst Web3StatusGeneric = styled(ButtonSecondary)`\n  ${({\n  theme\n}) => theme.flexRowNoWrap}\n  width: 100%;\n  align-items: center;\n  padding: 0.5rem;\n  border-radius: 12px;\n  cursor: pointer;\n  user-select: none;\n  :focus {\n    outline: none;\n  }\n`;\nconst Web3StatusError = styled(Web3StatusGeneric)`\n  background-color: ${({\n  theme\n}) => theme.red1};\n  border: 1px solid ${({\n  theme\n}) => theme.red1};\n  color: ${({\n  theme\n}) => theme.white};\n  font-weight: 500;\n  :hover,\n  :focus {\n    background-color: ${({\n  theme\n}) => darken(0.1, theme.red1)};\n  }\n`;\nconst Web3StatusConnect = styled(Web3StatusGeneric)`\n  background-color: ${({\n  theme\n}) => theme.primary4};\n  border: none;\n  color: ${({\n  theme\n}) => theme.primaryText1};\n  font-weight: 500;\n\n  :hover,\n  :focus {\n    border: 1px solid ${({\n  theme\n}) => darken(0.05, theme.primary4)};\n    color: ${({\n  theme\n}) => theme.primaryText1};\n  }\n\n  ${({\n  faded\n}) => faded && css`\n      background-color: ${({\n  theme\n}) => theme.primary5};\n      border: 1px solid ${({\n  theme\n}) => theme.primary5};\n      color: ${({\n  theme\n}) => theme.primaryText1};\n\n      :hover,\n      :focus {\n        border: 1px solid ${({\n  theme\n}) => darken(0.05, theme.primary4)};\n        color: ${({\n  theme\n}) => darken(0.05, theme.primaryText1)};\n      }\n    `}\n`;\nconst Web3StatusConnected = styled(Web3StatusGeneric)`\n  background-color: ${({\n  pending,\n  theme\n}) => pending ? theme.primary1 : theme.bg2};\n  border: 1px solid ${({\n  pending,\n  theme\n}) => pending ? theme.primary1 : theme.bg3};\n  color: ${({\n  pending,\n  theme\n}) => pending ? theme.white : theme.text1};\n  font-weight: 500;\n  :hover,\n  :focus {\n    background-color: ${({\n  pending,\n  theme\n}) => pending ? darken(0.05, theme.primary1) : lighten(0.05, theme.bg2)};\n\n    :focus {\n      border: 1px solid ${({\n  pending,\n  theme\n}) => pending ? darken(0.1, theme.primary1) : darken(0.1, theme.bg3)};\n    }\n  }\n`;\nconst Text = styled.p`\n  flex: 1 1 auto;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  margin: 0 0.5rem 0 0.25rem;\n  font-size: 1rem;\n  width: fit-content;\n  font-weight: 500;\n`;\nconst NetworkIcon = styled(Activity)`\n  margin-left: 0.25rem;\n  margin-right: 0.5rem;\n  width: 16px;\n  height: 16px;\n`;\n\n// we want the latest one to come first, so return negative if a is after b\nfunction newTranscationsFirst(a, b) {\n  return b.addedTime - a.addedTime;\n}\nfunction recentTransactionsOnly(a) {\n  return new Date().getTime() - a.addedTime < 86400000;\n}\nconst SOCK = /*#__PURE__*/React.createElement(\"span\", {\n  role: \"img\",\n  \"aria-label\": \"has socks emoji\",\n  style: {\n    marginTop: -4,\n    marginBottom: -4\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 3\n  }\n}, \"\\uD83E\\uDDE6\");\nexport default function Web3Status() {\n  const {\n    t\n  } = useTranslation();\n  const {\n    active,\n    account,\n    connector,\n    error\n  } = useWeb3React();\n  const contextNetwork = useWeb3React(NetworkContextName);\n  const {\n    ENSName\n  } = useENSName(account);\n  const allTransactions = useAllTransactions();\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions);\n    return txs.filter(recentTransactionsOnly).sort(newTranscationsFirst);\n  }, [allTransactions]);\n  const pending = sortedRecentTransactions.filter(tx => !tx.receipt).map(tx => tx.hash);\n  const confirmed = sortedRecentTransactions.filter(tx => tx.receipt).map(tx => tx.hash);\n  const hasPendingTransactions = !!pending.length;\n  const hasSocks = useHasSocks();\n  const toggleWalletModal = useWalletModalToggle();\n\n  // handle the logo we want to show with the account\n  function getStatusIcon() {\n    if (connector === injected) {\n      return /*#__PURE__*/React.createElement(Identicon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 14\n        }\n      });\n    } else if (connector === walletconnect) {\n      return /*#__PURE__*/React.createElement(IconWrapper, {\n        size: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: WalletConnectIcon,\n        alt: '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }\n      }));\n    } else if (connector === walletlink) {\n      return /*#__PURE__*/React.createElement(IconWrapper, {\n        size: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: CoinbaseWalletIcon,\n        alt: '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }\n      }));\n    } else if (connector === fortmatic) {\n      return /*#__PURE__*/React.createElement(IconWrapper, {\n        size: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: FortmaticIcon,\n        alt: '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }\n      }));\n    } else if (connector === portis) {\n      return /*#__PURE__*/React.createElement(IconWrapper, {\n        size: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: PortisIcon,\n        alt: '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }\n      }));\n    }\n  }\n  function getWeb3Status() {\n    function Web3StatusInner() {\n      const {\n        t\n      } = useTranslation();\n      const {\n        account,\n        connector\n      } = useWeb3React();\n      const {\n        ENSName\n      } = useENSName(account !== null && account !== void 0 ? account : undefined);\n      const allTransactions = useAllTransactions();\n      const sortedRecentTransactions = useMemo(() => {\n        const txs = Object.values(allTransactions);\n        return txs.filter(isTransactionRecent).sort(newTransactionsFirst);\n      }, [allTransactions]);\n      const pending = sortedRecentTransactions.filter(tx => !tx.receipt).map(tx => tx.hash);\n      const hasPendingTransactions = !!pending.length;\n      const hasSocks = useHasSocks();\n      const toggleWalletModal = useWalletModalToggle();\n      if (account) {\n        return /*#__PURE__*/React.createElement(Web3StatusConnected, {\n          id: \"web3-status-connected\",\n          onClick: toggleWalletModal,\n          pending: hasPendingTransactions,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 11\n          }\n        }, hasPendingTransactions ? /*#__PURE__*/React.createElement(RowBetween, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 17\n          }\n        }, pending === null || pending === void 0 ? void 0 : pending.length, \" Pending\"), \" \", /*#__PURE__*/React.createElement(Loader, {\n          stroke: \"white\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 56\n          }\n        })) : /*#__PURE__*/React.createElement(React.Fragment, null, hasSocks ? SOCK : null, /*#__PURE__*/React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 17\n          }\n        }, ENSName || shortenAddress(account))), !hasPendingTransactions && connector && /*#__PURE__*/React.createElement(StatusIcon, {\n          connector: connector,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 54\n          }\n        }));\n      } else {\n        return /*#__PURE__*/React.createElement(Web3StatusConnect, {\n          id: \"connect-wallet\",\n          onClick: toggleWalletModal,\n          faded: !account,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }\n        }, t('Connect to a wallet')));\n      }\n    }\n  }\n  if (!contextNetwork.active && !active) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, getWeb3Status(), /*#__PURE__*/React.createElement(WalletModal, {\n    ENSName: ENSName,\n    pendingTransactions: pending,\n    confirmedTransactions: confirmed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"names":["React","useMemo","styled","css","useTranslation","useWeb3React","darken","lighten","Activity","useENSName","useHasSocks","useWalletModalToggle","Identicon","PortisIcon","WalletModal","ButtonSecondary","FortmaticIcon","WalletConnectIcon","CoinbaseWalletIcon","RowBetween","shortenAddress","useAllTransactions","NetworkContextName","injected","walletconnect","walletlink","fortmatic","portis","Loader","IconWrapper","div","theme","flexColumnNoWrap","size","Web3StatusGeneric","flexRowNoWrap","Web3StatusError","red1","white","Web3StatusConnect","primary4","primaryText1","faded","primary5","Web3StatusConnected","pending","primary1","bg2","bg3","text1","Text","p","NetworkIcon","newTranscationsFirst","a","b","addedTime","recentTransactionsOnly","Date","getTime","SOCK","createElement","role","style","marginTop","marginBottom","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Web3Status","t","active","account","connector","error","contextNetwork","ENSName","allTransactions","sortedRecentTransactions","txs","Object","values","filter","sort","tx","receipt","map","hash","confirmed","hasPendingTransactions","length","hasSocks","toggleWalletModal","getStatusIcon","src","alt","getWeb3Status","Web3StatusInner","undefined","isTransactionRecent","newTransactionsFirst","id","onClick","stroke","Fragment","StatusIcon","pendingTransactions","confirmedTransactions"],"sources":["/Users/synallage/Desktop/fomoswap-uni/interface-73580de922ce3ff642430d71aa24f5c053e6dd4d/src/components/Web3Status/index.tsx"],"sourcesContent":["import React, { useMemo } from 'react'\nimport styled, { css } from 'styled-components'\nimport { useTranslation } from 'react-i18next'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { darken, lighten } from 'polished'\nimport { Activity } from 'react-feather'\nimport useENSName from '../../hooks/useENSName'\nimport { useHasSocks } from '../../hooks/useSocksBalance'\nimport { useWalletModalToggle } from '../../state/application/hooks'\nimport { TransactionDetails } from '../../state/transactions/reducer'\n\nimport Identicon from '../Identicon'\nimport PortisIcon from '../../assets/images/portisIcon.png'\nimport WalletModal from '../WalletModal'\nimport { ButtonSecondary } from '../Button'\nimport FortmaticIcon from '../../assets/images/fortmaticIcon.png'\nimport WalletConnectIcon from '../../assets/images/walletConnectIcon.svg'\nimport CoinbaseWalletIcon from '../../assets/images/coinbaseWalletIcon.svg'\n\nimport { RowBetween } from '../Row'\nimport { shortenAddress } from '../../utils'\nimport { useAllTransactions } from '../../state/transactions/hooks'\nimport { NetworkContextName } from '../../constants'\nimport { injected, walletconnect, walletlink, fortmatic, portis } from '../../connectors'\nimport Loader from '../Loader'\n\nconst IconWrapper = styled.div<{ size?: number }>`\n  ${({ theme }) => theme.flexColumnNoWrap};\n  align-items: center;\n  justify-content: center;\n  & > * {\n    height: ${({ size }) => (size ? size + 'px' : '32px')};\n    width: ${({ size }) => (size ? size + 'px' : '32px')};\n  }\n`\n\nconst Web3StatusGeneric = styled(ButtonSecondary)`\n  ${({ theme }) => theme.flexRowNoWrap}\n  width: 100%;\n  align-items: center;\n  padding: 0.5rem;\n  border-radius: 12px;\n  cursor: pointer;\n  user-select: none;\n  :focus {\n    outline: none;\n  }\n`\nconst Web3StatusError = styled(Web3StatusGeneric)`\n  background-color: ${({ theme }) => theme.red1};\n  border: 1px solid ${({ theme }) => theme.red1};\n  color: ${({ theme }) => theme.white};\n  font-weight: 500;\n  :hover,\n  :focus {\n    background-color: ${({ theme }) => darken(0.1, theme.red1)};\n  }\n`\n\nconst Web3StatusConnect = styled(Web3StatusGeneric)<{ faded?: boolean }>`\n  background-color: ${({ theme }) => theme.primary4};\n  border: none;\n  color: ${({ theme }) => theme.primaryText1};\n  font-weight: 500;\n\n  :hover,\n  :focus {\n    border: 1px solid ${({ theme }) => darken(0.05, theme.primary4)};\n    color: ${({ theme }) => theme.primaryText1};\n  }\n\n  ${({ faded }) =>\n    faded &&\n    css`\n      background-color: ${({ theme }) => theme.primary5};\n      border: 1px solid ${({ theme }) => theme.primary5};\n      color: ${({ theme }) => theme.primaryText1};\n\n      :hover,\n      :focus {\n        border: 1px solid ${({ theme }) => darken(0.05, theme.primary4)};\n        color: ${({ theme }) => darken(0.05, theme.primaryText1)};\n      }\n    `}\n`\n\nconst Web3StatusConnected = styled(Web3StatusGeneric)<{ pending?: boolean }>`\n  background-color: ${({ pending, theme }) => (pending ? theme.primary1 : theme.bg2)};\n  border: 1px solid ${({ pending, theme }) => (pending ? theme.primary1 : theme.bg3)};\n  color: ${({ pending, theme }) => (pending ? theme.white : theme.text1)};\n  font-weight: 500;\n  :hover,\n  :focus {\n    background-color: ${({ pending, theme }) => (pending ? darken(0.05, theme.primary1) : lighten(0.05, theme.bg2))};\n\n    :focus {\n      border: 1px solid ${({ pending, theme }) => (pending ? darken(0.1, theme.primary1) : darken(0.1, theme.bg3))};\n    }\n  }\n`\n\nconst Text = styled.p`\n  flex: 1 1 auto;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  margin: 0 0.5rem 0 0.25rem;\n  font-size: 1rem;\n  width: fit-content;\n  font-weight: 500;\n`\n\nconst NetworkIcon = styled(Activity)`\n  margin-left: 0.25rem;\n  margin-right: 0.5rem;\n  width: 16px;\n  height: 16px;\n`\n\n// we want the latest one to come first, so return negative if a is after b\nfunction newTranscationsFirst(a: TransactionDetails, b: TransactionDetails) {\n  return b.addedTime - a.addedTime\n}\n\nfunction recentTransactionsOnly(a: TransactionDetails) {\n  return new Date().getTime() - a.addedTime < 86_400_000\n}\n\nconst SOCK = (\n  <span role=\"img\" aria-label=\"has socks emoji\" style={{ marginTop: -4, marginBottom: -4 }}>\n    🧦\n  </span>\n)\n\nexport default function Web3Status() {\n  const { t } = useTranslation()\n  const { active, account, connector, error } = useWeb3React()\n  const contextNetwork = useWeb3React(NetworkContextName)\n\n  const { ENSName } = useENSName(account)\n\n  const allTransactions = useAllTransactions()\n\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions)\n    return txs.filter(recentTransactionsOnly).sort(newTranscationsFirst)\n  }, [allTransactions])\n\n  const pending = sortedRecentTransactions.filter(tx => !tx.receipt).map(tx => tx.hash)\n  const confirmed = sortedRecentTransactions.filter(tx => tx.receipt).map(tx => tx.hash)\n\n  const hasPendingTransactions = !!pending.length\n  const hasSocks = useHasSocks()\n  const toggleWalletModal = useWalletModalToggle()\n\n  // handle the logo we want to show with the account\n  function getStatusIcon() {\n    if (connector === injected) {\n      return <Identicon />\n    } else if (connector === walletconnect) {\n      return (\n        <IconWrapper size={16}>\n          <img src={WalletConnectIcon} alt={''} />\n        </IconWrapper>\n      )\n    } else if (connector === walletlink) {\n      return (\n        <IconWrapper size={16}>\n          <img src={CoinbaseWalletIcon} alt={''} />\n        </IconWrapper>\n      )\n    } else if (connector === fortmatic) {\n      return (\n        <IconWrapper size={16}>\n          <img src={FortmaticIcon} alt={''} />\n        </IconWrapper>\n      )\n    } else if (connector === portis) {\n      return (\n        <IconWrapper size={16}>\n          <img src={PortisIcon} alt={''} />\n        </IconWrapper>\n      )\n    }\n  }\n\n  function getWeb3Status() {\n    function Web3StatusInner() {\n      const { t } = useTranslation()\n      const { account, connector } = useWeb3React()\n    \n      const { ENSName } = useENSName(account ?? undefined)\n    \n      const allTransactions = useAllTransactions()\n    \n      const sortedRecentTransactions = useMemo(() => {\n        const txs = Object.values(allTransactions)\n        return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\n      }, [allTransactions])\n    \n      const pending = sortedRecentTransactions.filter(tx => !tx.receipt).map(tx => tx.hash)\n    \n      const hasPendingTransactions = !!pending.length\n      const hasSocks = useHasSocks()\n      const toggleWalletModal = useWalletModalToggle()\n    \n      if (account) {\n        return (\n          <Web3StatusConnected id=\"web3-status-connected\" onClick={toggleWalletModal} pending={hasPendingTransactions}>\n            {hasPendingTransactions ? (\n              <RowBetween>\n                <Text>{pending?.length} Pending</Text> <Loader stroke=\"white\" />\n              </RowBetween>\n            ) : (\n              <>\n                {hasSocks ? SOCK : null}\n                <Text>{ENSName || shortenAddress(account)}</Text>\n              </>\n            )}\n            {!hasPendingTransactions && connector && <StatusIcon connector={connector} />\n            }\n          </Web3StatusConnected>\n        )\n      } else {\n        return (\n          <Web3StatusConnect id=\"connect-wallet\" onClick={toggleWalletModal} faded={!account}>\n            <Text>{t('Connect to a wallet')}</Text>\n          </Web3StatusConnect>\n        )\n      }\n    }\n  }\n\n  if (!contextNetwork.active && !active) {\n    return null\n  }\n\n  return (\n    <>\n      {getWeb3Status()}\n      <WalletModal ENSName={ENSName} pendingTransactions={pending} confirmedTransactions={confirmed} />\n    </>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}