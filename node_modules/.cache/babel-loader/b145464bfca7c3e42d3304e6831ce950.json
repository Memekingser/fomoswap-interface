{"ast":null,"code":"import React,{useContext,useMemo}from'react';import{ThemeContext}from'styled-components';import{Link}from'react-router-dom';import{SwapPoolTabs}from'../../components/NavigationTabs';import Question from'../../components/QuestionHelper';import FullPositionCard from'../../components/PositionCard';import{useUserHasLiquidityInAllTokens}from'../../data/V1';import{useTokenBalancesWithLoadingIndicator}from'../../state/wallet/hooks';import{StyledInternalLink,TYPE}from'../../theme';import{Text}from'rebass';import{LightCard}from'../../components/Card';import{RowBetween}from'../../components/Row';import{ButtonPrimary,ButtonSecondary}from'../../components/Button';import{AutoColumn}from'../../components/Column';import{useActiveWeb3React}from'../../hooks';import{usePairs}from'../../data/Reserves';import{toV2LiquidityToken,useTrackedTokenPairs}from'../../state/user/hooks';import AppBody from'../AppBody';import{Dots}from'../../components/swap/styleds';export default function Pool(){const theme=useContext(ThemeContext);const{account}=useActiveWeb3React();// fetch the user's balances of all tracked V2 LP tokens\nconst trackedTokenPairs=useTrackedTokenPairs();const tokenPairsWithLiquidityTokens=useMemo(()=>trackedTokenPairs.map(tokens=>({liquidityToken:toV2LiquidityToken(tokens),tokens})),[trackedTokenPairs]);const liquidityTokens=useMemo(()=>tokenPairsWithLiquidityTokens.map(tpwlt=>tpwlt.liquidityToken),[tokenPairsWithLiquidityTokens]);const[v2PairsBalances,fetchingV2PairBalances]=useTokenBalancesWithLoadingIndicator(account!==null&&account!==void 0?account:undefined,liquidityTokens);// fetch the reserves for all V2 pools in which the user has a balance\nconst liquidityTokensWithBalances=useMemo(()=>tokenPairsWithLiquidityTokens.filter(_ref=>{var _v2PairsBalances$liqu;let{liquidityToken}=_ref;return(_v2PairsBalances$liqu=v2PairsBalances[liquidityToken.address])===null||_v2PairsBalances$liqu===void 0?void 0:_v2PairsBalances$liqu.greaterThan('0');}),[tokenPairsWithLiquidityTokens,v2PairsBalances]);const v2Pairs=usePairs(liquidityTokensWithBalances.map(_ref2=>{let{tokens}=_ref2;return tokens;}));const v2IsLoading=fetchingV2PairBalances||(v2Pairs===null||v2Pairs===void 0?void 0:v2Pairs.length)<liquidityTokensWithBalances.length||(v2Pairs===null||v2Pairs===void 0?void 0:v2Pairs.some(V2Pair=>!V2Pair));const allV2PairsWithLiquidity=v2Pairs.map(_ref3=>{let[,pair]=_ref3;return pair;}).filter(v2Pair=>Boolean(v2Pair));const hasV1Liquidity=useUserHasLiquidityInAllTokens();return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(AppBody,null,/*#__PURE__*/React.createElement(SwapPoolTabs,{active:'pool'}),/*#__PURE__*/React.createElement(AutoColumn,{gap:\"lg\",justify:\"center\"},/*#__PURE__*/React.createElement(ButtonPrimary,{id:\"join-pool-button\",as:Link,style:{padding:16},to:\"/add/ETH\"},/*#__PURE__*/React.createElement(Text,{fontWeight:500,fontSize:20},\"Add Liquidity\")),/*#__PURE__*/React.createElement(AutoColumn,{gap:\"12px\",style:{width:'100%'}},/*#__PURE__*/React.createElement(RowBetween,{padding:'0 8px'},/*#__PURE__*/React.createElement(Text,{color:theme.text1,fontWeight:500},\"Your Liquidity\"),/*#__PURE__*/React.createElement(Question,{text:\"When you add liquidity, you are given pool tokens that represent your share. If you don\\u2019t see a pool you joined in this list, try importing a pool below.\"})),!account?/*#__PURE__*/React.createElement(LightCard,{padding:\"40px\"},/*#__PURE__*/React.createElement(TYPE.body,{color:theme.text3,textAlign:\"center\"},\"Connect to a wallet to view your liquidity.\")):v2IsLoading?/*#__PURE__*/React.createElement(LightCard,{padding:\"40px\"},/*#__PURE__*/React.createElement(TYPE.body,{color:theme.text3,textAlign:\"center\"},/*#__PURE__*/React.createElement(Dots,null,\"Loading\"))):(allV2PairsWithLiquidity===null||allV2PairsWithLiquidity===void 0?void 0:allV2PairsWithLiquidity.length)>0?/*#__PURE__*/React.createElement(React.Fragment,null,allV2PairsWithLiquidity.map(v2Pair=>/*#__PURE__*/React.createElement(FullPositionCard,{key:v2Pair.liquidityToken.address,pair:v2Pair}))):/*#__PURE__*/React.createElement(LightCard,{padding:\"40px\"},/*#__PURE__*/React.createElement(TYPE.body,{color:theme.text3,textAlign:\"center\"},\"No liquidity found.\")),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Text,{textAlign:\"center\",fontSize:14,style:{padding:'.5rem 0 .5rem 0'}},hasV1Liquidity?'Uniswap V1 liquidity found!':\"Don't see a pool you joined?\",' ',/*#__PURE__*/React.createElement(StyledInternalLink,{id:\"import-pool-link\",to:hasV1Liquidity?'/migrate/v1':'/find'},hasV1Liquidity?'Migrate now.':'Import it.')))))),/*#__PURE__*/React.createElement(\"div\",{style:{display:'flex',alignItems:'center',marginTop:'1.5rem'}},/*#__PURE__*/React.createElement(ButtonSecondary,{as:\"a\",style:{width:'initial'},href:\"https://support.uniswap.org/hc/en-us/articles/20915582427917-How-to-add-liquidity-to-Uniswap-v2\",target:\"_blank\",rel:\"noopener noreferrer\"},\"How to add liquidity?\")));}","map":{"version":3,"names":["React","useContext","useMemo","ThemeContext","Link","SwapPoolTabs","Question","FullPositionCard","useUserHasLiquidityInAllTokens","useTokenBalancesWithLoadingIndicator","StyledInternalLink","TYPE","Text","LightCard","RowBetween","ButtonPrimary","ButtonSecondary","AutoColumn","useActiveWeb3React","usePairs","toV2LiquidityToken","useTrackedTokenPairs","AppBody","Dots","Pool","theme","account","trackedTokenPairs","tokenPairsWithLiquidityTokens","map","tokens","liquidityToken","liquidityTokens","tpwlt","v2PairsBalances","fetchingV2PairBalances","undefined","liquidityTokensWithBalances","filter","_ref","_v2PairsBalances$liqu","address","greaterThan","v2Pairs","_ref2","v2IsLoading","length","some","V2Pair","allV2PairsWithLiquidity","_ref3","pair","v2Pair","Boolean","hasV1Liquidity","createElement","Fragment","active","gap","justify","id","as","style","padding","to","fontWeight","fontSize","width","color","text1","text","body","text3","textAlign","key","display","alignItems","marginTop","href","target","rel"],"sources":["/Users/synallage/Desktop/fomoswap-uni/interface-73580de922ce3ff642430d71aa24f5c053e6dd4d/src/pages/Pool/index.tsx"],"sourcesContent":["import React, { useContext, useMemo } from 'react'\nimport { ThemeContext } from 'styled-components'\nimport { Pair } from 'fomoswap-story'\nimport { Link } from 'react-router-dom'\nimport { SwapPoolTabs } from '../../components/NavigationTabs'\n\nimport Question from '../../components/QuestionHelper'\nimport FullPositionCard from '../../components/PositionCard'\nimport { useUserHasLiquidityInAllTokens } from '../../data/V1'\nimport { useTokenBalancesWithLoadingIndicator } from '../../state/wallet/hooks'\nimport { StyledInternalLink, TYPE } from '../../theme'\nimport { Text } from 'rebass'\nimport { LightCard } from '../../components/Card'\nimport { RowBetween } from '../../components/Row'\nimport { ButtonPrimary, ButtonSecondary } from '../../components/Button'\nimport { AutoColumn } from '../../components/Column'\n\nimport { useActiveWeb3React } from '../../hooks'\nimport { usePairs } from '../../data/Reserves'\nimport { toV2LiquidityToken, useTrackedTokenPairs } from '../../state/user/hooks'\nimport AppBody from '../AppBody'\nimport { Dots } from '../../components/swap/styleds'\n\nexport default function Pool() {\n  const theme = useContext(ThemeContext)\n  const { account } = useActiveWeb3React()\n\n  // fetch the user's balances of all tracked V2 LP tokens\n  const trackedTokenPairs = useTrackedTokenPairs()\n  const tokenPairsWithLiquidityTokens = useMemo(\n    () => trackedTokenPairs.map(tokens => ({ liquidityToken: toV2LiquidityToken(tokens), tokens })),\n    [trackedTokenPairs]\n  )\n  const liquidityTokens = useMemo(() => tokenPairsWithLiquidityTokens.map(tpwlt => tpwlt.liquidityToken), [\n    tokenPairsWithLiquidityTokens\n  ])\n  const [v2PairsBalances, fetchingV2PairBalances] = useTokenBalancesWithLoadingIndicator(\n    account ?? undefined,\n    liquidityTokens\n  )\n\n  // fetch the reserves for all V2 pools in which the user has a balance\n  const liquidityTokensWithBalances = useMemo(\n    () =>\n      tokenPairsWithLiquidityTokens.filter(({ liquidityToken }) =>\n        v2PairsBalances[liquidityToken.address]?.greaterThan('0')\n      ),\n    [tokenPairsWithLiquidityTokens, v2PairsBalances]\n  )\n\n  const v2Pairs = usePairs(liquidityTokensWithBalances.map(({ tokens }) => tokens))\n  const v2IsLoading =\n    fetchingV2PairBalances || v2Pairs?.length < liquidityTokensWithBalances.length || v2Pairs?.some(V2Pair => !V2Pair)\n\n  const allV2PairsWithLiquidity = v2Pairs.map(([, pair]) => pair).filter((v2Pair): v2Pair is Pair => Boolean(v2Pair))\n\n  const hasV1Liquidity = useUserHasLiquidityInAllTokens()\n\n  return (\n    <>\n      <AppBody>\n        <SwapPoolTabs active={'pool'} />\n        <AutoColumn gap=\"lg\" justify=\"center\">\n          <ButtonPrimary id=\"join-pool-button\" as={Link} style={{ padding: 16 }} to=\"/add/ETH\">\n            <Text fontWeight={500} fontSize={20}>\n              Add Liquidity\n            </Text>\n          </ButtonPrimary>\n\n          <AutoColumn gap=\"12px\" style={{ width: '100%' }}>\n            <RowBetween padding={'0 8px'}>\n              <Text color={theme.text1} fontWeight={500}>\n                Your Liquidity\n              </Text>\n              <Question text=\"When you add liquidity, you are given pool tokens that represent your share. If you donâ€™t see a pool you joined in this list, try importing a pool below.\" />\n            </RowBetween>\n\n            {!account ? (\n              <LightCard padding=\"40px\">\n                <TYPE.body color={theme.text3} textAlign=\"center\">\n                  Connect to a wallet to view your liquidity.\n                </TYPE.body>\n              </LightCard>\n            ) : v2IsLoading ? (\n              <LightCard padding=\"40px\">\n                <TYPE.body color={theme.text3} textAlign=\"center\">\n                  <Dots>Loading</Dots>\n                </TYPE.body>\n              </LightCard>\n            ) : allV2PairsWithLiquidity?.length > 0 ? (\n              <>\n                {allV2PairsWithLiquidity.map(v2Pair => (\n                  <FullPositionCard key={v2Pair.liquidityToken.address} pair={v2Pair} />\n                ))}\n              </>\n            ) : (\n              <LightCard padding=\"40px\">\n                <TYPE.body color={theme.text3} textAlign=\"center\">\n                  No liquidity found.\n                </TYPE.body>\n              </LightCard>\n            )}\n\n            <div>\n              <Text textAlign=\"center\" fontSize={14} style={{ padding: '.5rem 0 .5rem 0' }}>\n                {hasV1Liquidity ? 'Uniswap V1 liquidity found!' : \"Don't see a pool you joined?\"}{' '}\n                <StyledInternalLink id=\"import-pool-link\" to={hasV1Liquidity ? '/migrate/v1' : '/find'}>\n                  {hasV1Liquidity ? 'Migrate now.' : 'Import it.'}\n                </StyledInternalLink>\n              </Text>\n            </div>\n          </AutoColumn>\n        </AutoColumn>\n      </AppBody>\n\n      <div style={{ display: 'flex', alignItems: 'center', marginTop: '1.5rem' }}>\n        <ButtonSecondary as=\"a\" style={{ width: 'initial' }} href=\"https://support.uniswap.org/hc/en-us/articles/20915582427917-How-to-add-liquidity-to-Uniswap-v2\" target=\"_blank\" rel=\"noopener noreferrer\">\n          How to add liquidity?\n        </ButtonSecondary>\n      </div>\n    </>\n  )\n}\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,UAAU,CAAEC,OAAO,KAAQ,OAAO,CAClD,OAASC,YAAY,KAAQ,mBAAmB,CAEhD,OAASC,IAAI,KAAQ,kBAAkB,CACvC,OAASC,YAAY,KAAQ,iCAAiC,CAE9D,MAAO,CAAAC,QAAQ,KAAM,iCAAiC,CACtD,MAAO,CAAAC,gBAAgB,KAAM,+BAA+B,CAC5D,OAASC,8BAA8B,KAAQ,eAAe,CAC9D,OAASC,oCAAoC,KAAQ,0BAA0B,CAC/E,OAASC,kBAAkB,CAAEC,IAAI,KAAQ,aAAa,CACtD,OAASC,IAAI,KAAQ,QAAQ,CAC7B,OAASC,SAAS,KAAQ,uBAAuB,CACjD,OAASC,UAAU,KAAQ,sBAAsB,CACjD,OAASC,aAAa,CAAEC,eAAe,KAAQ,yBAAyB,CACxE,OAASC,UAAU,KAAQ,yBAAyB,CAEpD,OAASC,kBAAkB,KAAQ,aAAa,CAChD,OAASC,QAAQ,KAAQ,qBAAqB,CAC9C,OAASC,kBAAkB,CAAEC,oBAAoB,KAAQ,wBAAwB,CACjF,MAAO,CAAAC,OAAO,KAAM,YAAY,CAChC,OAASC,IAAI,KAAQ,+BAA+B,CAEpD,cAAe,SAAS,CAAAC,IAAIA,CAAA,CAAG,CAC7B,KAAM,CAAAC,KAAK,CAAGxB,UAAU,CAACE,YAAY,CAAC,CACtC,KAAM,CAAEuB,OAAQ,CAAC,CAAGR,kBAAkB,CAAC,CAAC,CAExC;AACA,KAAM,CAAAS,iBAAiB,CAAGN,oBAAoB,CAAC,CAAC,CAChD,KAAM,CAAAO,6BAA6B,CAAG1B,OAAO,CAC3C,IAAMyB,iBAAiB,CAACE,GAAG,CAACC,MAAM,GAAK,CAAEC,cAAc,CAAEX,kBAAkB,CAACU,MAAM,CAAC,CAAEA,MAAO,CAAC,CAAC,CAAC,CAC/F,CAACH,iBAAiB,CACpB,CAAC,CACD,KAAM,CAAAK,eAAe,CAAG9B,OAAO,CAAC,IAAM0B,6BAA6B,CAACC,GAAG,CAACI,KAAK,EAAIA,KAAK,CAACF,cAAc,CAAC,CAAE,CACtGH,6BAA6B,CAC9B,CAAC,CACF,KAAM,CAACM,eAAe,CAAEC,sBAAsB,CAAC,CAAG1B,oCAAoC,CACpFiB,OAAO,SAAPA,OAAO,UAAPA,OAAO,CAAIU,SAAS,CACpBJ,eACF,CAAC,CAED;AACA,KAAM,CAAAK,2BAA2B,CAAGnC,OAAO,CACzC,IACE0B,6BAA6B,CAACU,MAAM,CAACC,IAAA,OAAAC,qBAAA,IAAC,CAAET,cAAe,CAAC,CAAAQ,IAAA,QAAAC,qBAAA,CACtDN,eAAe,CAACH,cAAc,CAACU,OAAO,CAAC,UAAAD,qBAAA,iBAAvCA,qBAAA,CAAyCE,WAAW,CAAC,GAAG,CAAC,EAC3D,CAAC,CACH,CAACd,6BAA6B,CAAEM,eAAe,CACjD,CAAC,CAED,KAAM,CAAAS,OAAO,CAAGxB,QAAQ,CAACkB,2BAA2B,CAACR,GAAG,CAACe,KAAA,MAAC,CAAEd,MAAO,CAAC,CAAAc,KAAA,OAAK,CAAAd,MAAM,GAAC,CAAC,CACjF,KAAM,CAAAe,WAAW,CACfV,sBAAsB,EAAI,CAAAQ,OAAO,SAAPA,OAAO,iBAAPA,OAAO,CAAEG,MAAM,EAAGT,2BAA2B,CAACS,MAAM,GAAIH,OAAO,SAAPA,OAAO,iBAAPA,OAAO,CAAEI,IAAI,CAACC,MAAM,EAAI,CAACA,MAAM,CAAC,EAEpH,KAAM,CAAAC,uBAAuB,CAAGN,OAAO,CAACd,GAAG,CAACqB,KAAA,MAAC,EAAGC,IAAI,CAAC,CAAAD,KAAA,OAAK,CAAAC,IAAI,GAAC,CAACb,MAAM,CAAEc,MAAM,EAAqBC,OAAO,CAACD,MAAM,CAAC,CAAC,CAEnH,KAAM,CAAAE,cAAc,CAAG9C,8BAA8B,CAAC,CAAC,CAEvD,mBACER,KAAA,CAAAuD,aAAA,CAAAvD,KAAA,CAAAwD,QAAA,mBACExD,KAAA,CAAAuD,aAAA,CAACjC,OAAO,mBACNtB,KAAA,CAAAuD,aAAA,CAAClD,YAAY,EAACoD,MAAM,CAAE,MAAO,CAAE,CAAC,cAChCzD,KAAA,CAAAuD,aAAA,CAACtC,UAAU,EAACyC,GAAG,CAAC,IAAI,CAACC,OAAO,CAAC,QAAQ,eACnC3D,KAAA,CAAAuD,aAAA,CAACxC,aAAa,EAAC6C,EAAE,CAAC,kBAAkB,CAACC,EAAE,CAAEzD,IAAK,CAAC0D,KAAK,CAAE,CAAEC,OAAO,CAAE,EAAG,CAAE,CAACC,EAAE,CAAC,UAAU,eAClFhE,KAAA,CAAAuD,aAAA,CAAC3C,IAAI,EAACqD,UAAU,CAAE,GAAI,CAACC,QAAQ,CAAE,EAAG,EAAC,eAE/B,CACO,CAAC,cAEhBlE,KAAA,CAAAuD,aAAA,CAACtC,UAAU,EAACyC,GAAG,CAAC,MAAM,CAACI,KAAK,CAAE,CAAEK,KAAK,CAAE,MAAO,CAAE,eAC9CnE,KAAA,CAAAuD,aAAA,CAACzC,UAAU,EAACiD,OAAO,CAAE,OAAQ,eAC3B/D,KAAA,CAAAuD,aAAA,CAAC3C,IAAI,EAACwD,KAAK,CAAE3C,KAAK,CAAC4C,KAAM,CAACJ,UAAU,CAAE,GAAI,EAAC,gBAErC,CAAC,cACPjE,KAAA,CAAAuD,aAAA,CAACjD,QAAQ,EAACgE,IAAI,CAAC,gKAA2J,CAAE,CAClK,CAAC,CAEZ,CAAC5C,OAAO,cACP1B,KAAA,CAAAuD,aAAA,CAAC1C,SAAS,EAACkD,OAAO,CAAC,MAAM,eACvB/D,KAAA,CAAAuD,aAAA,CAAC5C,IAAI,CAAC4D,IAAI,EAACH,KAAK,CAAE3C,KAAK,CAAC+C,KAAM,CAACC,SAAS,CAAC,QAAQ,EAAC,6CAEvC,CACF,CAAC,CACV5B,WAAW,cACb7C,KAAA,CAAAuD,aAAA,CAAC1C,SAAS,EAACkD,OAAO,CAAC,MAAM,eACvB/D,KAAA,CAAAuD,aAAA,CAAC5C,IAAI,CAAC4D,IAAI,EAACH,KAAK,CAAE3C,KAAK,CAAC+C,KAAM,CAACC,SAAS,CAAC,QAAQ,eAC/CzE,KAAA,CAAAuD,aAAA,CAAChC,IAAI,MAAC,SAAa,CACV,CACF,CAAC,CACV,CAAA0B,uBAAuB,SAAvBA,uBAAuB,iBAAvBA,uBAAuB,CAAEH,MAAM,EAAG,CAAC,cACrC9C,KAAA,CAAAuD,aAAA,CAAAvD,KAAA,CAAAwD,QAAA,MACGP,uBAAuB,CAACpB,GAAG,CAACuB,MAAM,eACjCpD,KAAA,CAAAuD,aAAA,CAAChD,gBAAgB,EAACmE,GAAG,CAAEtB,MAAM,CAACrB,cAAc,CAACU,OAAQ,CAACU,IAAI,CAAEC,MAAO,CAAE,CACtE,CACD,CAAC,cAEHpD,KAAA,CAAAuD,aAAA,CAAC1C,SAAS,EAACkD,OAAO,CAAC,MAAM,eACvB/D,KAAA,CAAAuD,aAAA,CAAC5C,IAAI,CAAC4D,IAAI,EAACH,KAAK,CAAE3C,KAAK,CAAC+C,KAAM,CAACC,SAAS,CAAC,QAAQ,EAAC,qBAEvC,CACF,CACZ,cAEDzE,KAAA,CAAAuD,aAAA,yBACEvD,KAAA,CAAAuD,aAAA,CAAC3C,IAAI,EAAC6D,SAAS,CAAC,QAAQ,CAACP,QAAQ,CAAE,EAAG,CAACJ,KAAK,CAAE,CAAEC,OAAO,CAAE,iBAAkB,CAAE,EAC1ET,cAAc,CAAG,6BAA6B,CAAG,8BAA8B,CAAE,GAAG,cACrFtD,KAAA,CAAAuD,aAAA,CAAC7C,kBAAkB,EAACkD,EAAE,CAAC,kBAAkB,CAACI,EAAE,CAAEV,cAAc,CAAG,aAAa,CAAG,OAAQ,EACpFA,cAAc,CAAG,cAAc,CAAG,YACjB,CAChB,CACH,CACK,CACF,CACL,CAAC,cAEVtD,KAAA,CAAAuD,aAAA,QAAKO,KAAK,CAAE,CAAEa,OAAO,CAAE,MAAM,CAAEC,UAAU,CAAE,QAAQ,CAAEC,SAAS,CAAE,QAAS,CAAE,eACzE7E,KAAA,CAAAuD,aAAA,CAACvC,eAAe,EAAC6C,EAAE,CAAC,GAAG,CAACC,KAAK,CAAE,CAAEK,KAAK,CAAE,SAAU,CAAE,CAACW,IAAI,CAAC,iGAAiG,CAACC,MAAM,CAAC,QAAQ,CAACC,GAAG,CAAC,qBAAqB,EAAC,uBAErL,CACd,CACL,CAAC,CAEP","ignoreList":[]},"metadata":{},"sourceType":"module"}